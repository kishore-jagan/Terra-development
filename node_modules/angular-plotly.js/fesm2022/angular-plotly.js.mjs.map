{"version":3,"file":"angular-plotly.js.mjs","sources":["../../../projects/plotly/src/lib/plotly.service.ts","../../../projects/plotly/src/lib/plotly.theme-loader.service.ts","../../../projects/plotly/src/lib/plotly.component.ts","../../../projects/plotly/src/lib/plotly-shared.module.ts","../../../projects/plotly/src/lib/plotly.module.ts","../../../projects/plotly/src/lib/plotly-via-cdn.module.ts","../../../projects/plotly/src/lib/plotly-via-window.module.ts","../../../projects/plotly/src/public-api.ts","../../../projects/plotly/src/angular-plotly.js.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Plotly } from './plotly.interface';\r\n\r\ntype PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow' | undefined;\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PlotlyService {\r\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\r\n    protected static plotly?: any = undefined;\r\n    protected static moduleName?: PlotlyName = undefined;\r\n\r\n    public static setModuleName(moduleName: PlotlyName): void {\r\n        PlotlyService.moduleName = moduleName;\r\n    }\r\n\r\n    public static getModuleName(): PlotlyName {\r\n        return PlotlyService.moduleName;\r\n    }\r\n\r\n    public static setPlotly(plotly: any): void {\r\n        if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\r\n            throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\r\n        }\r\n\r\n        PlotlyService.plotly = plotly;\r\n    }\r\n\r\n    public static insert(instance: Plotly.PlotlyHTMLElement): Plotly.PlotlyHTMLElement {\r\n        const index = PlotlyService.instances.indexOf(instance);\r\n        if (index === -1) {\r\n            PlotlyService.instances.push(instance);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public static remove(div: Plotly.PlotlyHTMLElement): void {\r\n        const index = PlotlyService.instances.indexOf(div);\r\n        if (index >= 0) {\r\n            PlotlyService.instances.splice(index, 1);\r\n            PlotlyService.plotly.purge(div);\r\n        }\r\n    }\r\n\r\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\r\n        for (const instance of PlotlyService.instances) {\r\n            if (instance && instance.id === id) {\r\n                return instance;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public async getPlotly(): Promise<any> {\r\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\r\n        return this._getPlotly();\r\n    }\r\n\r\n    protected _getPlotly(): any {\r\n        if (typeof PlotlyService.plotly === 'undefined') {\r\n            const msg = PlotlyService.moduleName === 'ViaCDN'\r\n                ? `Error loading Peer dependency plotly.js from CDN url`\r\n                : `Peer dependency plotly.js isn't installed`;\r\n\r\n            throw new Error(msg);\r\n        }\r\n\r\n        return PlotlyService.plotly;\r\n    }\r\n\r\n    protected waitFor(fn: () => boolean): Promise<void> {\r\n        return new Promise((resolve) => {\r\n            const localFn = () => {\r\n                fn() ? resolve() : setTimeout(localFn, 10);\r\n            };\r\n\r\n            localFn();\r\n        });\r\n    }\r\n\r\n    public async newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\r\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\r\n\r\n        if (frames) {\r\n            const obj = { data, layout, config, frames };\r\n            return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div as any)) as Promise<any>;\r\n        }\r\n\r\n        return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div as any)) as Promise<any>;\r\n    }\r\n\r\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\r\n        if (frames) {\r\n            const obj = { data, layout, config, frames };\r\n            return this._getPlotly().newPlot(div, obj) as Promise<any>;\r\n        }\r\n\r\n        return this._getPlotly().newPlot(div, data, layout, config) as Promise<any>;\r\n    }\r\n\r\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\r\n        if (frames) {\r\n            const obj = { data, layout, config, frames };\r\n            return this._getPlotly().react(div, obj) as Promise<any>;\r\n        }\r\n\r\n        return this._getPlotly().react(div, data, layout, config) as Promise<any>;\r\n    }\r\n\r\n    public resize(div: Plotly.PlotlyHTMLElement): void {\r\n        return this._getPlotly().Plots.resize(div);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport type PlotlyTheme = 'ggplot2' | 'seaborn' | 'simple_white' | 'plotly' | 'plotly_white' | 'plotly_dark' | 'presentation' | 'xgridoff' | 'ygridoff' | 'gridon' | 'none';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PlotlyThemeLoaderService {\r\n\r\n    public get isLoading() { return this._isLoading; }\r\n    private _isLoading: boolean = false;\r\n\r\n    public load(themeName: PlotlyTheme): Promise<any> {\r\n        this._isLoading = true;\r\n        return new Promise(resolve => {\r\n            // import(`./themes/${themeName}.json`).then(data => {\r\n                resolve(true);\r\n            //     this._isLoading = false;\r\n            // });\r\n        });\r\n    }\r\n}","/* eslint-disable @angular-eslint/no-conflicting-lifecycle */\r\n\r\nimport {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    OnDestroy,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    DoCheck,\r\n    IterableDiffer,\r\n    IterableDiffers,\r\n    KeyValueDiffer,\r\n    KeyValueDiffers,\r\n} from '@angular/core';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlyThemeLoaderService, PlotlyTheme } from './plotly.theme-loader.service';\r\nimport { Plotly } from './plotly.interface';\r\n\r\n// @dynamic\r\n@Component({\r\n    selector: 'plotly-plot',\r\n    template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\r\n      <ng-content></ng-content>\r\n    </div>`,\r\n    providers: [PlotlyService],\r\n})\r\nexport class PlotlyComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\r\n    protected defaultClassName = 'js-plotly-plot';\r\n\r\n    public plotlyInstance?: Plotly.PlotlyHTMLElement;\r\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\r\n    public layoutDiffer?: KeyValueDiffer<string, any>;\r\n    public dataDiffer?: IterableDiffer<Plotly.Data>;\r\n\r\n    @ViewChild('plot', { static: true }) plotEl!: ElementRef;\r\n\r\n    @Input() data?: Plotly.Data[];\r\n    @Input() layout?: Partial<Plotly.Layout>;\r\n    @Input() config?: Partial<Plotly.Config>;\r\n    @Input() frames?: Partial<Plotly.Config>[];\r\n    @Input() style?: { [key: string]: string };\r\n    @Input() theme: PlotlyTheme = \"none\";\r\n\r\n    @Input() divId?: string;\r\n    @Input() revision = 0;\r\n    @Input() className?: string | string[];\r\n    @Input() debug = false;\r\n    @Input() useResizeHandler = false;\r\n\r\n    @Input() updateOnLayoutChange = true;\r\n    @Input() updateOnDataChange = true;\r\n    @Input() updateOnlyWithRevision = false;\r\n\r\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\r\n    @Output() update = new EventEmitter<Plotly.Figure>();\r\n    @Output() purge = new EventEmitter<Plotly.Figure>();\r\n    // eslint-disable-next-line @angular-eslint/no-output-native\r\n    @Output() error = new EventEmitter<Error>();\r\n\r\n    @Output() afterExport = new EventEmitter();\r\n    @Output() afterPlot = new EventEmitter();\r\n    @Output() animated = new EventEmitter();\r\n    @Output() animatingFrame = new EventEmitter();\r\n    @Output() animationInterrupted = new EventEmitter();\r\n    @Output() autoSize = new EventEmitter();\r\n    @Output() beforeExport = new EventEmitter();\r\n    @Output() beforeHover = new EventEmitter();\r\n    @Output() buttonClicked = new EventEmitter();\r\n    /**\r\n     * @deprecated DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. Please check https://github.com/plotly/angular-plotly.js#FAQ\r\n     */\r\n    // eslint-disable-next-line @angular-eslint/no-output-native\r\n    @Output() click = new EventEmitter();\r\n    @Output() plotlyClick = new EventEmitter();\r\n    @Output() clickAnnotation = new EventEmitter();\r\n    @Output() deselect = new EventEmitter();\r\n    @Output() doubleClick = new EventEmitter();\r\n    @Output() framework = new EventEmitter();\r\n    @Output() hover = new EventEmitter();\r\n    @Output() legendClick = new EventEmitter();\r\n    @Output() legendDoubleClick = new EventEmitter();\r\n    /**\r\n     * @deprecated DEPRECATED: Event react is not list as an plotly.js event\r\n     */\r\n    @Output() react = new EventEmitter();\r\n    @Output() relayout = new EventEmitter();\r\n    @Output() relayouting = new EventEmitter();\r\n    @Output() restyle = new EventEmitter();\r\n    @Output() redraw = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n    @Output() selecting = new EventEmitter();\r\n    @Output() sliderChange = new EventEmitter();\r\n    @Output() sliderEnd = new EventEmitter();\r\n    @Output() sliderStart = new EventEmitter();\r\n    @Output() sunburstclick = new EventEmitter();\r\n    @Output() transitioning = new EventEmitter();\r\n    @Output() transitionInterrupted = new EventEmitter();\r\n    @Output() unhover = new EventEmitter();\r\n    /**\r\n     * @deprecated DEPRECATED: Event treemapclick is not list as an plotly.js event\r\n     */\r\n    @Output() treemapclick = new EventEmitter();\r\n    @Output() webglcontextlost = new EventEmitter();\r\n\r\n\r\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\r\n        'beforeExport', 'beforeHover', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\r\n        'legendClick', 'legendDoubleClick', 'react', 'relayout', 'relayouting',  'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\r\n        'sliderEnd', 'sliderStart', 'sunburstclick', 'transitioning', 'transitionInterrupted', 'unhover', 'treemapclick', 'webglcontextlost'];\r\n\r\n    constructor(\r\n        public plotly: PlotlyService,\r\n        public themeLoader: PlotlyThemeLoaderService,\r\n        public iterableDiffers: IterableDiffers,\r\n        public keyValueDiffers: KeyValueDiffers,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.createPlot().then(() => {\r\n            const figure = this.createFigure();\r\n            this.initialized.emit(figure);\r\n        });\r\n\r\n        if (this.click.observers.length > 0) {\r\n            const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. '\r\n                + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\r\n            console.error(msg);\r\n        }\r\n\r\n        // if (this.theme != 'none') this.loadTheme();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (typeof this.resizeHandler === 'function') {\r\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\r\n            this.resizeHandler = undefined;\r\n        }\r\n\r\n        if (this.plotlyInstance) {\r\n            const figure = this.createFigure();\r\n            this.purge.emit(figure);\r\n            PlotlyService.remove(this.plotlyInstance);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        let shouldUpdate = false;\r\n\r\n        const revision: SimpleChange = changes['revision'];\r\n        if (revision && !revision.isFirstChange()) {\r\n            shouldUpdate = true;\r\n        }\r\n\r\n        const debug: SimpleChange = changes['debug'];\r\n        if (debug && !debug.isFirstChange()) {\r\n            shouldUpdate = true;\r\n        }\r\n\r\n        if (shouldUpdate) {\r\n            this.updatePlot();\r\n        }\r\n\r\n        this.updateWindowResizeHandler();\r\n    }\r\n\r\n    ngDoCheck(): boolean | void {\r\n        if (this.updateOnlyWithRevision) {\r\n            return false;\r\n        }\r\n\r\n        let shouldUpdate = false;\r\n\r\n        if (this.updateOnLayoutChange) {\r\n            if (this.layoutDiffer) {\r\n                const layoutHasDiff = this.layoutDiffer.diff(this.layout!);\r\n                if (layoutHasDiff) {\r\n                    shouldUpdate = true;\r\n                }\r\n            } else if (this.layout) {\r\n                this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\r\n            } else {\r\n                this.layoutDiffer = undefined;\r\n            }\r\n        }\r\n\r\n        if (this.updateOnDataChange) {\r\n            if (this.dataDiffer) {\r\n                const dataHasDiff = this.dataDiffer.diff(this.data);\r\n                if (dataHasDiff) {\r\n                    shouldUpdate = true;\r\n                }\r\n            } else if (Array.isArray(this.data)) {\r\n                this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\r\n            } else {\r\n                this.dataDiffer = undefined;\r\n            }\r\n        }\r\n\r\n        if (shouldUpdate && this.plotlyInstance) {\r\n            this.updatePlot();\r\n        }\r\n    }\r\n\r\n    getData(): Plotly.Data[] {\r\n        return this.data ?? [];\r\n    }\r\n\r\n    getWindow(): any {\r\n        return window;\r\n    }\r\n\r\n    getClassName(): string {\r\n        let classes = [this.defaultClassName];\r\n\r\n        if (Array.isArray(this.className)) {\r\n            classes = classes.concat(this.className);\r\n        } else if (this.className) {\r\n            classes.push(this.className);\r\n        }\r\n\r\n        return classes.join(' ');\r\n    }\r\n\r\n    createPlot(): Promise<void> {\r\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.getData(), this.layout, this.config, this.frames).then(plotlyInstance => {\r\n            this.plotlyInstance = plotlyInstance;\r\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\r\n\r\n            this.eventNames.forEach(name => {\r\n                const eventName = `plotly_${name.toLowerCase()}`;\r\n                const event = (this as any)[name] as EventEmitter<void>;\r\n\r\n                plotlyInstance.on(eventName, (data: any) => event.emit(data));\r\n            });\r\n\r\n            plotlyInstance.on('plotly_click', (data: any) => {\r\n                this.plotlyClick.emit(data);\r\n            });\r\n\r\n            this.updateWindowResizeHandler();\r\n        }, err => {\r\n            console.error('Error while plotting:', err);\r\n            this.error.emit(err);\r\n        });\r\n    }\r\n\r\n    createFigure(): Plotly.Figure {\r\n        const p: any = this.plotlyInstance;\r\n        const figure: Plotly.Figure = {\r\n            data: p.data,\r\n            layout: p.layout,\r\n            frames: p._transitionData ? p._transitionData._frames : null\r\n        };\r\n\r\n        return figure;\r\n    }\r\n\r\n    updatePlot(): Promise<any> {\r\n        if (!this.plotlyInstance) {\r\n            const error = new Error(`Plotly component wasn't initialized`);\r\n            this.error.emit(error);\r\n            throw error;\r\n        }\r\n\r\n        const layout = { ...this.layout };\r\n\r\n        return this.plotly.update(this.plotlyInstance, this.getData(), layout, this.config, this.frames).then(() => {\r\n            const figure = this.createFigure();\r\n            this.update.emit(figure);\r\n        }, err => {\r\n            console.error('Error while updating plot:', err);\r\n            this.error.emit(err);\r\n        });\r\n    }\r\n\r\n    updateWindowResizeHandler(): void {\r\n        if (this.useResizeHandler) {\r\n            if (this.resizeHandler === undefined) {\r\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance!);\r\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\r\n            }\r\n        } else {\r\n            if (typeof this.resizeHandler === 'function') {\r\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\r\n                this.resizeHandler = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    dataDifferTrackBy(_: number, item: any): unknown {\r\n        const obj = Object.assign({}, item, { uid: '' });\r\n        return JSON.stringify(obj);\r\n    }\r\n\r\n    loadTheme() {\r\n        if (this.layout !== undefined) {\r\n            const msg = 'You fulfill both `theme` and `layout` properties. This will overwrite the `layout` data with the `theme` data.';\r\n            console.warn(msg);\r\n        }\r\n\r\n        this.themeLoader.load(this.theme).then(theme => this.layout = theme);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlyComponent } from './plotly.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [PlotlyComponent],\r\n    imports: [CommonModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlyComponent],\r\n})\r\nexport class PlotlySharedModule {\r\n    constructor() { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlySharedModule } from './plotly-shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [CommonModule, PlotlySharedModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlySharedModule],\r\n})\r\nexport class PlotlyModule {\r\n    public static plotlyjs: any = {};\r\n\r\n    constructor() {\r\n        if (!this.isValid()) {\r\n            const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start'\r\n                + ' to see how to add PlotlyJS to your project.';\r\n            throw new Error(msg);\r\n        }\r\n\r\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\r\n    }\r\n\r\n    private isValid(): boolean {\r\n        return PlotlyModule.plotlyjs !== undefined\r\n            && (typeof PlotlyModule.plotlyjs.plot === 'function'\r\n                || typeof PlotlyModule.plotlyjs.newPlot === 'function');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlySharedModule } from './plotly-shared.module';\r\n\r\n\r\nexport type PlotlyBundleName = 'basic' | 'cartesian' | 'geo' | 'gl3d' | 'gl2d' | 'mapbox' | 'finance';\r\nexport type PlotlyCDNProvider = 'plotly' | 'cloudflare' | 'custom';\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [CommonModule, PlotlySharedModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlySharedModule],\r\n})\r\nexport class PlotlyViaCDNModule {\r\n    private static plotlyBundle?: PlotlyBundleName = undefined;\r\n    private static plotlyVersion = 'latest';\r\n    public static plotlyBundleNames: PlotlyBundleName[] = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\r\n\r\n    constructor(public plotlyService: PlotlyService) {\r\n        PlotlyService.setModuleName('ViaCDN');\r\n    }\r\n\r\n    public static setPlotlyVersion(version: string, cdnProvider: PlotlyCDNProvider = 'plotly', cdnURL: string = ''): void {\r\n        const isOk = version === 'latest' || /^(strict-)?\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\r\n        if (!isOk) {\r\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3) or strict version number (i.e.: strict-1.4.3)`);\r\n        }\r\n\r\n        PlotlyViaCDNModule.loadViaCDN(cdnProvider, cdnURL);\r\n        PlotlyViaCDNModule.plotlyVersion = version;\r\n    }\r\n\r\n    public static setPlotlyBundle(bundle: PlotlyBundleName | null): void {\r\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\r\n        if (!isOk) {\r\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\r\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\r\n        }\r\n\r\n        PlotlyViaCDNModule.plotlyBundle = bundle;\r\n    }\r\n\r\n    public static loadViaCDN(cdnProvider: PlotlyCDNProvider = 'plotly', cdnURL: string = ''): void {\r\n        PlotlyService.setPlotly('waiting');\r\n\r\n        const init = () => {\r\n            let src: string = '';\r\n            switch (cdnProvider) {\r\n                case 'cloudflare':\r\n                    if (PlotlyViaCDNModule.plotlyVersion == 'latest') {\r\n                        throw new Error(`As cloudflare hosts version specific files, 'latest' as a version is not supported. Please specify a version or you can choose 'plotly' as a CDN provider.`);\r\n                    }\r\n                    src = PlotlyViaCDNModule.plotlyBundle == null\r\n                        ? `https://cdnjs.cloudflare.com/ajax/libs/plotly.js/${PlotlyViaCDNModule.plotlyVersion}/plotly.min.js`\r\n                        : `https://cdnjs.cloudflare.com/ajax/libs/plotly.js/${PlotlyViaCDNModule.plotlyVersion}/plotly-${PlotlyViaCDNModule.plotlyBundle}.min.js`;\r\n                    break;\r\n                case 'custom':\r\n                    if(!(!!cdnURL && typeof cdnURL === 'string')) {\r\n                        throw new Error(`Invalid or missing CDN URL. Please provide a CDN URL in case of custom provider. Alternatively, you can choose from 'plotly' or 'cloudflare'.`);\r\n                    }\r\n                    src = cdnURL;\r\n                    break;\r\n                default:\r\n                    src = PlotlyViaCDNModule.plotlyBundle == null\r\n                        ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js`\r\n                        : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\r\n                    break;\r\n            }\r\n\r\n            const script: HTMLScriptElement = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = src;\r\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\r\n\r\n            const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\r\n            head.appendChild(script);\r\n\r\n            let counter = 200; // equivalent of 10 seconds...\r\n\r\n            const fn = () => {\r\n                const plotly = (window as any).Plotly;\r\n                if (plotly) {\r\n                    PlotlyService.setPlotly(plotly);\r\n                } else if (counter > 0) {\r\n                    counter --;\r\n                    setTimeout(fn, 50);\r\n                } else {\r\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\r\n                }\r\n            };\r\n\r\n            fn();\r\n        };\r\n\r\n        setTimeout(init);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PlotlyService } from './plotly.service';\r\nimport { PlotlySharedModule } from './plotly-shared.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [CommonModule, PlotlySharedModule],\r\n    providers: [PlotlyService],\r\n    exports: [PlotlySharedModule],\r\n})\r\nexport class PlotlyViaWindowModule {\r\n    constructor() {\r\n        const plotly = (window as any).Plotly;\r\n\r\n        if (typeof plotly === 'undefined') {\r\n            throw new Error(`Plotly object not found on window.`);\r\n        }\r\n\r\n        PlotlyService.setPlotly(plotly);\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of plotly\r\n */\r\n\r\nexport * from './lib/plotly.module';\r\nexport * from './lib/plotly-via-cdn.module';\r\nexport * from './lib/plotly-via-window.module';\r\nexport * from './lib/plotly-shared.module';\r\n\r\nexport * from './lib/plotly.service';\r\nexport * from './lib/plotly.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.PlotlyService","i2.PlotlyThemeLoaderService"],"mappings":"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"}