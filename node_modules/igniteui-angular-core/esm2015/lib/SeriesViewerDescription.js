/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let SeriesViewerDescription = /*@__PURE__*/ (() => {
    class SeriesViewerDescription extends Description {
        constructor() {
            super();
            this.n = null;
            this.h = null;
            this.l = null;
            this.j = null;
            this.k = null;
            this.ej = null;
            this.v = null;
            this.ei = null;
            this.af = false;
            this.ak = false;
            this.an = false;
            this.d8 = null;
            this.ex = null;
            this.ev = null;
            this.d4 = null;
            this.eb = null;
            this.fn = null;
            this.ed = null;
            this.fp = null;
            this.ea = null;
            this.ec = null;
            this.bg = 0;
            this.bf = 0;
            this.bc = 0;
            this.bd = 0;
            this.be = 0;
            this.bi = 0;
            this.bh = 0;
            this.ag = false;
            this.fm = null;
            this.fo = null;
            this.b1 = 0;
            this.b0 = 0;
            this.by = 0;
            this.b4 = 0;
            this.bz = 0;
            this.b3 = 0;
            this.b2 = 0;
            this.aq = false;
            this.d7 = null;
            this.ef = null;
            this.eh = null;
            this.eg = null;
            this.y = null;
            this.aa = null;
            this.ap = false;
            this.al = false;
            this.dn = 0;
            this.dk = 0;
            this.dm = 0;
            this.dj = 0;
            this.dl = 0;
            this.ai = false;
            this.dy = null;
            this.du = null;
            this.aj = false;
            this.ft = null;
            this.b8 = 0;
            this.b7 = 0;
            this.a8 = 0;
            this.a7 = 0;
            this.ca = 0;
            this.b9 = 0;
            this.fd = null;
            this.dz = null;
            this.d9 = null;
            this.fl = null;
            this.fu = null;
            this.el = null;
            this.d0 = null;
            this.et = null;
            this.d1 = null;
            this.ek = null;
            this.z = null;
            this.d6 = null;
            this.m = null;
            this.i = null;
            this.b5 = 0;
            this.b6 = 0;
            this.ew = null;
            this.d2 = null;
            this.dx = null;
            this.fi = null;
            this.fa = null;
            this.fk = null;
            this.fc = null;
            this.fj = null;
            this.fb = null;
            this.bw = 0;
            this.bu = 0;
            this.bv = 0;
            this.bs = 0;
            this.br = 0;
            this.bp = 0;
            this.bq = 0;
            this.bn = 0;
            this.e6 = null;
            this.bx = 0;
            this.bk = 0;
            this.bm = 0;
            this.bb = 0;
            this.ba = 0;
            this.a9 = 0;
            this.ah = false;
            this.bl = 0;
            this.bj = 0;
            this.a4 = 0;
            this.a3 = 0;
            this.am = false;
            this.x = null;
            this.a5 = 0;
            this.a6 = 0;
            this.ep = null;
            this.eq = null;
            this.em = null;
            this.en = null;
            this.eo = null;
            this.er = null;
            this.ez = null;
            this.e2 = null;
            this.e3 = null;
            this.ey = null;
            this.e4 = null;
            this.e0 = null;
            this.e1 = null;
            this.fr = null;
            this.fq = null;
            this.fs = null;
            this.e5 = null;
            this.dv = null;
            this.d5 = null;
            this.eu = null;
            this.d3 = null;
            this.es = null;
            this.ee = null;
            this.dw = null;
            this.ff = null;
            this.bt = 0;
            this.fh = null;
            this.fg = null;
            this.e7 = null;
            this.bo = 0;
            this.e9 = null;
            this.e8 = null;
            this.ao = false;
            this.fe = null;
        }
        get_type() {
            return "SeriesViewer";
        }
        get type() {
            return this.get_type();
        }
        get series() {
            return this.n;
        }
        set series(a) {
            this.n = a;
            this.g("Series");
        }
        get brushes() {
            return this.h;
        }
        set brushes(a) {
            this.h = a;
            this.g("Brushes");
        }
        get outlines() {
            return this.l;
        }
        set outlines(a) {
            this.l = a;
            this.g("Outlines");
        }
        get markerBrushes() {
            return this.j;
        }
        set markerBrushes(a) {
            this.j = a;
            this.g("MarkerBrushes");
        }
        get markerOutlines() {
            return this.k;
        }
        set markerOutlines(a) {
            this.k = a;
            this.g("MarkerOutlines");
        }
        get markerAutomaticBehavior() {
            return this.ej;
        }
        set markerAutomaticBehavior(a) {
            this.ej = a;
            this.g("MarkerAutomaticBehavior");
        }
        get crosshairPoint() {
            return this.v;
        }
        set crosshairPoint(a) {
            this.v = a;
            this.g("CrosshairPoint");
        }
        get legendRef() {
            return this.ei;
        }
        set legendRef(a) {
            this.ei = a;
            this.g("LegendRef");
        }
        get animateSeriesWhenAxisRangeChanges() {
            return this.af;
        }
        set animateSeriesWhenAxisRangeChanges(a) {
            this.af = a;
            this.g("AnimateSeriesWhenAxisRangeChanges");
        }
        get isWindowSyncedToVisibleRange() {
            return this.ak;
        }
        set isWindowSyncedToVisibleRange(a) {
            this.ak = a;
            this.g("IsWindowSyncedToVisibleRange");
        }
        get shouldSimulateHoverMoveCrosshairPoint() {
            return this.an;
        }
        set shouldSimulateHoverMoveCrosshairPoint(a) {
            this.an = a;
            this.g("ShouldSimulateHoverMoveCrosshairPoint");
        }
        get highlightingMode() {
            return this.d8;
        }
        set highlightingMode(a) {
            this.d8 = a;
            this.g("HighlightingMode");
        }
        get selectionMode() {
            return this.ex;
        }
        set selectionMode(a) {
            this.ex = a;
            this.g("SelectionMode");
        }
        get selectionBehavior() {
            return this.ev;
        }
        set selectionBehavior(a) {
            this.ev = a;
            this.g("SelectionBehavior");
        }
        get focusMode() {
            return this.d4;
        }
        set focusMode(a) {
            this.d4 = a;
            this.g("FocusMode");
        }
        get horizontalViewScrollbarMode() {
            return this.eb;
        }
        set horizontalViewScrollbarMode(a) {
            this.eb = a;
            this.g("HorizontalViewScrollbarMode");
        }
        get verticalViewScrollbarMode() {
            return this.fn;
        }
        set verticalViewScrollbarMode(a) {
            this.fn = a;
            this.g("VerticalViewScrollbarMode");
        }
        get horizontalViewScrollbarPosition() {
            return this.ed;
        }
        set horizontalViewScrollbarPosition(a) {
            this.ed = a;
            this.g("HorizontalViewScrollbarPosition");
        }
        get verticalViewScrollbarPosition() {
            return this.fp;
        }
        set verticalViewScrollbarPosition(a) {
            this.fp = a;
            this.g("VerticalViewScrollbarPosition");
        }
        get horizontalViewScrollbarFill() {
            return this.ea;
        }
        set horizontalViewScrollbarFill(a) {
            this.ea = a;
            this.g("HorizontalViewScrollbarFill");
        }
        get horizontalViewScrollbarOutline() {
            return this.ec;
        }
        set horizontalViewScrollbarOutline(a) {
            this.ec = a;
            this.g("HorizontalViewScrollbarOutline");
        }
        get horizontalViewScrollbarStrokeThickness() {
            return this.bg;
        }
        set horizontalViewScrollbarStrokeThickness(a) {
            this.bg = a;
            this.g("HorizontalViewScrollbarStrokeThickness");
        }
        get horizontalViewScrollbarMaxOpacity() {
            return this.bf;
        }
        set horizontalViewScrollbarMaxOpacity(a) {
            this.bf = a;
            this.g("HorizontalViewScrollbarMaxOpacity");
        }
        get horizontalViewScrollbarCornerRadius() {
            return this.bc;
        }
        set horizontalViewScrollbarCornerRadius(a) {
            this.bc = a;
            this.g("HorizontalViewScrollbarCornerRadius");
        }
        get horizontalViewScrollbarHeight() {
            return this.bd;
        }
        set horizontalViewScrollbarHeight(a) {
            this.bd = a;
            this.g("HorizontalViewScrollbarHeight");
        }
        get horizontalViewScrollbarInset() {
            return this.be;
        }
        set horizontalViewScrollbarInset(a) {
            this.be = a;
            this.g("HorizontalViewScrollbarInset");
        }
        get horizontalViewScrollbarTrackStartInset() {
            return this.bi;
        }
        set horizontalViewScrollbarTrackStartInset(a) {
            this.bi = a;
            this.g("HorizontalViewScrollbarTrackStartInset");
        }
        get horizontalViewScrollbarTrackEndInset() {
            return this.bh;
        }
        set horizontalViewScrollbarTrackEndInset(a) {
            this.bh = a;
            this.g("HorizontalViewScrollbarTrackEndInset");
        }
        get horizontalViewScrollbarShouldAddAutoTrackInsets() {
            return this.ag;
        }
        set horizontalViewScrollbarShouldAddAutoTrackInsets(a) {
            this.ag = a;
            this.g("HorizontalViewScrollbarShouldAddAutoTrackInsets");
        }
        get verticalViewScrollbarFill() {
            return this.fm;
        }
        set verticalViewScrollbarFill(a) {
            this.fm = a;
            this.g("VerticalViewScrollbarFill");
        }
        get verticalViewScrollbarOutline() {
            return this.fo;
        }
        set verticalViewScrollbarOutline(a) {
            this.fo = a;
            this.g("VerticalViewScrollbarOutline");
        }
        get verticalViewScrollbarStrokeThickness() {
            return this.b1;
        }
        set verticalViewScrollbarStrokeThickness(a) {
            this.b1 = a;
            this.g("VerticalViewScrollbarStrokeThickness");
        }
        get verticalViewScrollbarMaxOpacity() {
            return this.b0;
        }
        set verticalViewScrollbarMaxOpacity(a) {
            this.b0 = a;
            this.g("VerticalViewScrollbarMaxOpacity");
        }
        get verticalViewScrollbarCornerRadius() {
            return this.by;
        }
        set verticalViewScrollbarCornerRadius(a) {
            this.by = a;
            this.g("VerticalViewScrollbarCornerRadius");
        }
        get verticalViewScrollbarWidth() {
            return this.b4;
        }
        set verticalViewScrollbarWidth(a) {
            this.b4 = a;
            this.g("VerticalViewScrollbarWidth");
        }
        get verticalViewScrollbarInset() {
            return this.bz;
        }
        set verticalViewScrollbarInset(a) {
            this.bz = a;
            this.g("VerticalViewScrollbarInset");
        }
        get verticalViewScrollbarTrackStartInset() {
            return this.b3;
        }
        set verticalViewScrollbarTrackStartInset(a) {
            this.b3 = a;
            this.g("VerticalViewScrollbarTrackStartInset");
        }
        get verticalViewScrollbarTrackEndInset() {
            return this.b2;
        }
        set verticalViewScrollbarTrackEndInset(a) {
            this.b2 = a;
            this.g("VerticalViewScrollbarTrackEndInset");
        }
        get verticalViewScrollbarShouldAddAutoTrackInsets() {
            return this.aq;
        }
        set verticalViewScrollbarShouldAddAutoTrackInsets(a) {
            this.aq = a;
            this.g("VerticalViewScrollbarShouldAddAutoTrackInsets");
        }
        get highlightingBehavior() {
            return this.d7;
        }
        set highlightingBehavior(a) {
            this.d7 = a;
            this.g("HighlightingBehavior");
        }
        get legendHighlightingMode() {
            return this.ef;
        }
        set legendHighlightingMode(a) {
            this.ef = a;
            this.g("LegendHighlightingMode");
        }
        get legendItemBadgeShape() {
            return this.eh;
        }
        set legendItemBadgeShape(a) {
            this.eh = a;
            this.g("LegendItemBadgeShape");
        }
        get legendItemBadgeMode() {
            return this.eg;
        }
        set legendItemBadgeMode(a) {
            this.eg = a;
            this.g("LegendItemBadgeMode");
        }
        get effectiveViewport() {
            return this.y;
        }
        set effectiveViewport(a) {
            this.y = a;
            this.g("EffectiveViewport");
        }
        get windowRect() {
            return this.aa;
        }
        set windowRect(a) {
            this.aa = a;
            this.g("WindowRect");
        }
        get useTiledZooming() {
            return this.ap;
        }
        set useTiledZooming(a) {
            this.ap = a;
            this.g("UseTiledZooming");
        }
        get preferHigherResolutionTiles() {
            return this.al;
        }
        set preferHigherResolutionTiles(a) {
            this.al = a;
            this.g("PreferHigherResolutionTiles");
        }
        get zoomTileCacheSize() {
            return this.dn;
        }
        set zoomTileCacheSize(a) {
            this.dn = a;
            this.g("ZoomTileCacheSize");
        }
        get highlightingTransitionDuration() {
            return this.dk;
        }
        set highlightingTransitionDuration(a) {
            this.dk = a;
            this.g("HighlightingTransitionDuration");
        }
        get selectionTransitionDuration() {
            return this.dm;
        }
        set selectionTransitionDuration(a) {
            this.dm = a;
            this.g("SelectionTransitionDuration");
        }
        get focusTransitionDuration() {
            return this.dj;
        }
        set focusTransitionDuration(a) {
            this.dj = a;
            this.g("FocusTransitionDuration");
        }
        get scrollbarsAnimationDuration() {
            return this.dl;
        }
        set scrollbarsAnimationDuration(a) {
            this.dl = a;
            this.g("ScrollbarsAnimationDuration");
        }
        get isPagePanningAllowed() {
            return this.ai;
        }
        set isPagePanningAllowed(a) {
            this.ai = a;
            this.g("IsPagePanningAllowed");
        }
        get contentHitTestMode() {
            return this.dy;
        }
        set contentHitTestMode(a) {
            this.dy = a;
            this.g("ContentHitTestMode");
        }
        get actualContentHitTestMode() {
            return this.du;
        }
        set actualContentHitTestMode(a) {
            this.du = a;
            this.g("ActualContentHitTestMode");
        }
        get isSurfaceInteractionDisabled() {
            return this.aj;
        }
        set isSurfaceInteractionDisabled(a) {
            this.aj = a;
            this.g("IsSurfaceInteractionDisabled");
        }
        get windowResponse() {
            return this.ft;
        }
        set windowResponse(a) {
            this.ft = a;
            this.g("WindowResponse");
        }
        get windowRectMinWidth() {
            return this.b8;
        }
        set windowRectMinWidth(a) {
            this.b8 = a;
            this.g("WindowRectMinWidth");
        }
        get windowRectMinHeight() {
            return this.b7;
        }
        set windowRectMinHeight(a) {
            this.b7 = a;
            this.g("WindowRectMinHeight");
        }
        get actualWindowRectMinWidth() {
            return this.a8;
        }
        set actualWindowRectMinWidth(a) {
            this.a8 = a;
            this.g("ActualWindowRectMinWidth");
        }
        get actualWindowRectMinHeight() {
            return this.a7;
        }
        set actualWindowRectMinHeight(a) {
            this.a7 = a;
            this.g("ActualWindowRectMinHeight");
        }
        get windowSizeMinWidth() {
            return this.ca;
        }
        set windowSizeMinWidth(a) {
            this.ca = a;
            this.g("WindowSizeMinWidth");
        }
        get windowSizeMinHeight() {
            return this.b9;
        }
        set windowSizeMinHeight(a) {
            this.b9 = a;
            this.g("WindowSizeMinHeight");
        }
        get syncChannel() {
            return this.fd;
        }
        set syncChannel(a) {
            this.fd = a;
            this.g("SyncChannel");
        }
        get crosshairVisibility() {
            return this.dz;
        }
        set crosshairVisibility(a) {
            this.dz = a;
            this.g("CrosshairVisibility");
        }
        get horizontalCrosshairBrush() {
            return this.d9;
        }
        set horizontalCrosshairBrush(a) {
            this.d9 = a;
            this.g("HorizontalCrosshairBrush");
        }
        get verticalCrosshairBrush() {
            return this.fl;
        }
        set verticalCrosshairBrush(a) {
            this.fl = a;
            this.g("VerticalCrosshairBrush");
        }
        get zoomCoercionMode() {
            return this.fu;
        }
        set zoomCoercionMode(a) {
            this.fu = a;
            this.g("ZoomCoercionMode");
        }
        get plotAreaBackground() {
            return this.el;
        }
        set plotAreaBackground(a) {
            this.el = a;
            this.g("PlotAreaBackground");
        }
        get defaultInteraction() {
            return this.d0;
        }
        set defaultInteraction(a) {
            this.d0 = a;
            this.g("DefaultInteraction");
        }
        get rightButtonDefaultInteraction() {
            return this.et;
        }
        set rightButtonDefaultInteraction(a) {
            this.et = a;
            this.g("RightButtonDefaultInteraction");
        }
        get dragModifier() {
            return this.d1;
        }
        set dragModifier(a) {
            this.d1 = a;
            this.g("DragModifier");
        }
        get panModifier() {
            return this.ek;
        }
        set panModifier(a) {
            this.ek = a;
            this.g("PanModifier");
        }
        get previewRect() {
            return this.z;
        }
        set previewRect(a) {
            this.z = a;
            this.g("PreviewRect");
        }
        get highlightedValuesDisplayMode() {
            return this.d6;
        }
        set highlightedValuesDisplayMode(a) {
            this.d6 = a;
            this.g("HighlightedValuesDisplayMode");
        }
        get selectedSeriesItems() {
            return this.m;
        }
        set selectedSeriesItems(a) {
            this.m = a;
            this.g("SelectedSeriesItems");
        }
        get focusedSeriesItems() {
            return this.i;
        }
        set focusedSeriesItems(a) {
            this.i = a;
            this.g("FocusedSeriesItems");
        }
        get windowPositionHorizontal() {
            return this.b5;
        }
        set windowPositionHorizontal(a) {
            this.b5 = a;
            this.g("WindowPositionHorizontal");
        }
        get windowPositionVertical() {
            return this.b6;
        }
        set windowPositionVertical(a) {
            this.b6 = a;
            this.g("WindowPositionVertical");
        }
        get selectionBrush() {
            return this.ew;
        }
        set selectionBrush(a) {
            this.ew = a;
            this.g("SelectionBrush");
        }
        get focusBrush() {
            return this.d2;
        }
        set focusBrush(a) {
            this.d2 = a;
            this.g("FocusBrush");
        }
        get chartTitle() {
            return this.dx;
        }
        set chartTitle(a) {
            this.dx = a;
            this.g("ChartTitle");
        }
        get titleHorizontalAlignment() {
            return this.fi;
        }
        set titleHorizontalAlignment(a) {
            this.fi = a;
            this.g("TitleHorizontalAlignment");
        }
        get subtitleHorizontalAlignment() {
            return this.fa;
        }
        set subtitleHorizontalAlignment(a) {
            this.fa = a;
            this.g("SubtitleHorizontalAlignment");
        }
        get titleTextStyle() {
            return this.fk;
        }
        set titleTextStyle(a) {
            this.fk = a;
            this.g("TitleTextStyle");
        }
        get subtitleTextStyle() {
            return this.fc;
        }
        set subtitleTextStyle(a) {
            this.fc = a;
            this.g("SubtitleTextStyle");
        }
        get titleTextColor() {
            return this.fj;
        }
        set titleTextColor(a) {
            this.fj = a;
            this.g("TitleTextColor");
        }
        get subtitleTextColor() {
            return this.fb;
        }
        set subtitleTextColor(a) {
            this.fb = a;
            this.g("SubtitleTextColor");
        }
        get titleTopMargin() {
            return this.bw;
        }
        set titleTopMargin(a) {
            this.bw = a;
            this.g("TitleTopMargin");
        }
        get titleLeftMargin() {
            return this.bu;
        }
        set titleLeftMargin(a) {
            this.bu = a;
            this.g("TitleLeftMargin");
        }
        get titleRightMargin() {
            return this.bv;
        }
        set titleRightMargin(a) {
            this.bv = a;
            this.g("TitleRightMargin");
        }
        get titleBottomMargin() {
            return this.bs;
        }
        set titleBottomMargin(a) {
            this.bs = a;
            this.g("TitleBottomMargin");
        }
        get subtitleTopMargin() {
            return this.br;
        }
        set subtitleTopMargin(a) {
            this.br = a;
            this.g("SubtitleTopMargin");
        }
        get subtitleLeftMargin() {
            return this.bp;
        }
        set subtitleLeftMargin(a) {
            this.bp = a;
            this.g("SubtitleLeftMargin");
        }
        get subtitleRightMargin() {
            return this.bq;
        }
        set subtitleRightMargin(a) {
            this.bq = a;
            this.g("SubtitleRightMargin");
        }
        get subtitleBottomMargin() {
            return this.bn;
        }
        set subtitleBottomMargin(a) {
            this.bn = a;
            this.g("SubtitleBottomMargin");
        }
        get subtitle() {
            return this.e6;
        }
        set subtitle(a) {
            this.e6 = a;
            this.g("Subtitle");
        }
        get topMargin() {
            return this.bx;
        }
        set topMargin(a) {
            this.bx = a;
            this.g("TopMargin");
        }
        get leftMargin() {
            return this.bk;
        }
        set leftMargin(a) {
            this.bk = a;
            this.g("LeftMargin");
        }
        get rightMargin() {
            return this.bm;
        }
        set rightMargin(a) {
            this.bm = a;
            this.g("RightMargin");
        }
        get bottomMargin() {
            return this.bb;
        }
        set bottomMargin(a) {
            this.bb = a;
            this.g("BottomMargin");
        }
        get autoMarginWidth() {
            return this.ba;
        }
        set autoMarginWidth(a) {
            this.ba = a;
            this.g("AutoMarginWidth");
        }
        get autoMarginHeight() {
            return this.a9;
        }
        set autoMarginHeight(a) {
            this.a9 = a;
            this.g("AutoMarginHeight");
        }
        get isAntiAliasingEnabledDuringInteraction() {
            return this.ah;
        }
        set isAntiAliasingEnabledDuringInteraction(a) {
            this.ah = a;
            this.g("IsAntiAliasingEnabledDuringInteraction");
        }
        get pixelScalingRatio() {
            return this.bl;
        }
        set pixelScalingRatio(a) {
            this.bl = a;
            this.g("PixelScalingRatio");
        }
        get interactionPixelScalingRatio() {
            return this.bj;
        }
        set interactionPixelScalingRatio(a) {
            this.bj = a;
            this.g("InteractionPixelScalingRatio");
        }
        get actualPixelScalingRatio() {
            return this.a4;
        }
        set actualPixelScalingRatio(a) {
            this.a4 = a;
            this.g("ActualPixelScalingRatio");
        }
        get actualInteractionPixelScalingRatio() {
            return this.a3;
        }
        set actualInteractionPixelScalingRatio(a) {
            this.a3 = a;
            this.g("ActualInteractionPixelScalingRatio");
        }
        get shouldPanOnMaximumZoom() {
            return this.am;
        }
        set shouldPanOnMaximumZoom(a) {
            this.am = a;
            this.g("ShouldPanOnMaximumZoom");
        }
        get actualWindowRect() {
            return this.x;
        }
        set actualWindowRect(a) {
            this.x = a;
            this.g("ActualWindowRect");
        }
        get actualWindowPositionHorizontal() {
            return this.a5;
        }
        set actualWindowPositionHorizontal(a) {
            this.a5 = a;
            this.g("ActualWindowPositionHorizontal");
        }
        get actualWindowPositionVertical() {
            return this.a6;
        }
        set actualWindowPositionVertical(a) {
            this.a6 = a;
            this.g("ActualWindowPositionVertical");
        }
        get plotAreaMouseLeftButtonDownRef() {
            return this.ep;
        }
        set plotAreaMouseLeftButtonDownRef(a) {
            this.ep = a;
            this.g("PlotAreaMouseLeftButtonDownRef");
        }
        get plotAreaMouseLeftButtonUpRef() {
            return this.eq;
        }
        set plotAreaMouseLeftButtonUpRef(a) {
            this.eq = a;
            this.g("PlotAreaMouseLeftButtonUpRef");
        }
        get plotAreaClickedRef() {
            return this.em;
        }
        set plotAreaClickedRef(a) {
            this.em = a;
            this.g("PlotAreaClickedRef");
        }
        get plotAreaMouseEnterRef() {
            return this.en;
        }
        set plotAreaMouseEnterRef(a) {
            this.en = a;
            this.g("PlotAreaMouseEnterRef");
        }
        get plotAreaMouseLeaveRef() {
            return this.eo;
        }
        set plotAreaMouseLeaveRef(a) {
            this.eo = a;
            this.g("PlotAreaMouseLeaveRef");
        }
        get plotAreaMouseOverRef() {
            return this.er;
        }
        set plotAreaMouseOverRef(a) {
            this.er = a;
            this.g("PlotAreaMouseOverRef");
        }
        get seriesCursorMouseMoveRef() {
            return this.ez;
        }
        set seriesCursorMouseMoveRef(a) {
            this.ez = a;
            this.g("SeriesCursorMouseMoveRef");
        }
        get seriesMouseLeftButtonDownRef() {
            return this.e2;
        }
        set seriesMouseLeftButtonDownRef(a) {
            this.e2 = a;
            this.g("SeriesMouseLeftButtonDownRef");
        }
        get seriesMouseLeftButtonUpRef() {
            return this.e3;
        }
        set seriesMouseLeftButtonUpRef(a) {
            this.e3 = a;
            this.g("SeriesMouseLeftButtonUpRef");
        }
        get seriesClickRef() {
            return this.ey;
        }
        set seriesClickRef(a) {
            this.ey = a;
            this.g("SeriesClickRef");
        }
        get seriesMouseMoveRef() {
            return this.e4;
        }
        set seriesMouseMoveRef(a) {
            this.e4 = a;
            this.g("SeriesMouseMoveRef");
        }
        get seriesMouseEnterRef() {
            return this.e0;
        }
        set seriesMouseEnterRef(a) {
            this.e0 = a;
            this.g("SeriesMouseEnterRef");
        }
        get seriesMouseLeaveRef() {
            return this.e1;
        }
        set seriesMouseLeaveRef(a) {
            this.e1 = a;
            this.g("SeriesMouseLeaveRef");
        }
        get viewerManipulationStartingRef() {
            return this.fr;
        }
        set viewerManipulationStartingRef(a) {
            this.fr = a;
            this.g("ViewerManipulationStartingRef");
        }
        get viewerManipulationEndingRef() {
            return this.fq;
        }
        set viewerManipulationEndingRef(a) {
            this.fq = a;
            this.g("ViewerManipulationEndingRef");
        }
        get windowRectChangedRef() {
            return this.fs;
        }
        set windowRectChangedRef(a) {
            this.fs = a;
            this.g("WindowRectChangedRef");
        }
        get sizeChangedRef() {
            return this.e5;
        }
        set sizeChangedRef(a) {
            this.e5 = a;
            this.g("SizeChangedRef");
        }
        get actualWindowRectChangedRef() {
            return this.dv;
        }
        set actualWindowRectChangedRef(a) {
            this.dv = a;
            this.g("ActualWindowRectChangedRef");
        }
        get gridAreaRectChangedRef() {
            return this.d5;
        }
        set gridAreaRectChangedRef(a) {
            this.d5 = a;
            this.g("GridAreaRectChangedRef");
        }
        get selectedSeriesItemsChangedRef() {
            return this.eu;
        }
        set selectedSeriesItemsChangedRef(a) {
            this.eu = a;
            this.g("SelectedSeriesItemsChangedRef");
        }
        get focusedSeriesItemsChangedRef() {
            return this.d3;
        }
        set focusedSeriesItemsChangedRef(a) {
            this.d3 = a;
            this.g("FocusedSeriesItemsChangedRef");
        }
        get refreshCompletedRef() {
            return this.es;
        }
        set refreshCompletedRef(a) {
            this.es = a;
            this.g("RefreshCompletedRef");
        }
        get imageCapturedRef() {
            return this.ee;
        }
        set imageCapturedRef(a) {
            this.ee = a;
            this.g("ImageCapturedRef");
        }
        get background() {
            return this.dw;
        }
        set background(a) {
            this.dw = a;
            this.g("Background");
        }
        get titleFontFamily() {
            return this.ff;
        }
        set titleFontFamily(a) {
            this.ff = a;
            this.g("TitleFontFamily");
        }
        get titleFontSize() {
            return this.bt;
        }
        set titleFontSize(a) {
            this.bt = a;
            this.g("TitleFontSize");
        }
        get titleFontWeight() {
            return this.fh;
        }
        set titleFontWeight(a) {
            this.fh = a;
            this.g("TitleFontWeight");
        }
        get titleFontStyle() {
            return this.fg;
        }
        set titleFontStyle(a) {
            this.fg = a;
            this.g("TitleFontStyle");
        }
        get subtitleFontFamily() {
            return this.e7;
        }
        set subtitleFontFamily(a) {
            this.e7 = a;
            this.g("SubtitleFontFamily");
        }
        get subtitleFontSize() {
            return this.bo;
        }
        set subtitleFontSize(a) {
            this.bo = a;
            this.g("SubtitleFontSize");
        }
        get subtitleFontWeight() {
            return this.e9;
        }
        set subtitleFontWeight(a) {
            this.e9 = a;
            this.g("SubtitleFontWeight");
        }
        get subtitleFontStyle() {
            return this.e8;
        }
        set subtitleFontStyle(a) {
            this.e8 = a;
            this.g("SubtitleFontStyle");
        }
        get synchronizeHorizontally() {
            return this.ao;
        }
        set synchronizeHorizontally(a) {
            this.ao = a;
            this.g("SynchronizeHorizontally");
        }
        get synchronizeVertically() {
            return this.fe;
        }
        set synchronizeVertically(a) {
            this.fe = a;
            this.g("SynchronizeVertically");
        }
    }
    SeriesViewerDescription.$t = markType(SeriesViewerDescription, 'SeriesViewerDescription', Description.$);
    return SeriesViewerDescription;
})();
