/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebTextareaDescription = /*@__PURE__*/ (() => {
    class WebTextareaDescription extends Description {
        constructor() {
            super();
            this.ac = null;
            this.ab = null;
            this.ah = null;
            this.ai = null;
            this.v = 0;
            this.w = 0;
            this.j = false;
            this.ak = null;
            this.k = false;
            this.al = null;
            this.x = 0;
            this.am = null;
            this.m = false;
            this.an = null;
            this.n = false;
            this.h = false;
            this.l = false;
            this.aj = null;
            this.i = false;
            this.ag = null;
            this.ae = null;
            this.af = null;
            this.ad = null;
        }
        get_type() {
            return "WebTextarea";
        }
        get type() {
            return this.get_type();
        }
        get autocomplete() {
            return this.ac;
        }
        set autocomplete(a) {
            this.ac = a;
            this.g("Autocomplete");
        }
        get autocapitalize() {
            return this.ab;
        }
        set autocapitalize(a) {
            this.ab = a;
            this.g("Autocapitalize");
        }
        get inputMode() {
            return this.ah;
        }
        set inputMode(a) {
            this.ah = a;
            this.g("InputMode");
        }
        get label() {
            return this.ai;
        }
        set label(a) {
            this.ai = a;
            this.g("Label");
        }
        get maxLength() {
            return this.v;
        }
        set maxLength(a) {
            this.v = a;
            this.g("MaxLength");
        }
        get minLength() {
            return this.w;
        }
        set minLength(a) {
            this.w = a;
            this.g("MinLength");
        }
        get outlined() {
            return this.j;
        }
        set outlined(a) {
            this.j = a;
            this.g("Outlined");
        }
        get placeholder() {
            return this.ak;
        }
        set placeholder(a) {
            this.ak = a;
            this.g("Placeholder");
        }
        get readOnly() {
            return this.k;
        }
        set readOnly(a) {
            this.k = a;
            this.g("ReadOnly");
        }
        get resize() {
            return this.al;
        }
        set resize(a) {
            this.al = a;
            this.g("Resize");
        }
        get rows() {
            return this.x;
        }
        set rows(a) {
            this.x = a;
            this.g("Rows");
        }
        get value() {
            return this.am;
        }
        set value(a) {
            this.am = a;
            this.g("Value");
        }
        get spellcheck() {
            return this.m;
        }
        set spellcheck(a) {
            this.m = a;
            this.g("Spellcheck");
        }
        get wrap() {
            return this.an;
        }
        set wrap(a) {
            this.an = a;
            this.g("Wrap");
        }
        get validateOnly() {
            return this.n;
        }
        set validateOnly(a) {
            this.n = a;
            this.g("ValidateOnly");
        }
        get disabled() {
            return this.h;
        }
        set disabled(a) {
            this.h = a;
            this.g("Disabled");
        }
        get required() {
            return this.l;
        }
        set required(a) {
            this.l = a;
            this.g("Required");
        }
        get name() {
            return this.aj;
        }
        set name(a) {
            this.aj = a;
            this.g("Name");
        }
        get invalid() {
            return this.i;
        }
        set invalid(a) {
            this.i = a;
            this.g("Invalid");
        }
        get inputRef() {
            return this.ag;
        }
        set inputRef(a) {
            this.ag = a;
            this.g("InputRef");
        }
        get changeRef() {
            return this.ae;
        }
        set changeRef(a) {
            this.ae = a;
            this.g("ChangeRef");
        }
        get focusRef() {
            return this.af;
        }
        set focusRef(a) {
            this.af = a;
            this.g("FocusRef");
        }
        get blurRef() {
            return this.ad;
        }
        set blurRef(a) {
            this.ad = a;
            this.g("BlurRef");
        }
    }
    WebTextareaDescription.$t = markType(WebTextareaDescription, 'WebTextareaDescription', Description.$);
    return WebTextareaDescription;
})();
