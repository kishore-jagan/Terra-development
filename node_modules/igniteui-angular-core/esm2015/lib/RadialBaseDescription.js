/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { markType } from "./type";
/**
 * @hidden
 */
export let RadialBaseDescription = /*@__PURE__*/ (() => {
    class RadialBaseDescription extends MarkerSeriesDescription {
        constructor() {
            super();
            this.f5 = 0;
            this.f6 = 0;
            this.gc = null;
            this.gg = null;
            this.ge = null;
            this.gd = null;
            this.fn = null;
            this.gj = null;
            this.fr = null;
            this.gf = null;
            this.fo = null;
            this.gi = null;
            this.fq = null;
            this.gh = null;
            this.fp = null;
            this.fz = false;
            this.fy = false;
            this.gk = null;
            this.f0 = false;
            this.f9 = null;
            this.gl = null;
            this.fx = false;
            this.gb = null;
            this.ga = null;
        }
        get_type() {
            return "RadialBase";
        }
        get autoCalloutLabelPrecision() {
            return this.f5;
        }
        set autoCalloutLabelPrecision(a) {
            this.f5 = a;
            this.g("AutoCalloutLabelPrecision");
        }
        get autoCalloutPercentagePrecision() {
            return this.f6;
        }
        set autoCalloutPercentagePrecision(a) {
            this.f6 = a;
            this.g("AutoCalloutPercentagePrecision");
        }
        get autoCalloutLabelValueSeparator() {
            return this.gc;
        }
        set autoCalloutLabelValueSeparator(a) {
            this.gc = a;
            this.g("AutoCalloutLabelValueSeparator");
        }
        get legendRadialLabelMode() {
            return this.gg;
        }
        set legendRadialLabelMode(a) {
            this.gg = a;
            this.g("LegendRadialLabelMode");
        }
        get autoCalloutRadialLabelMode() {
            return this.ge;
        }
        set autoCalloutRadialLabelMode(a) {
            this.ge = a;
            this.g("AutoCalloutRadialLabelMode");
        }
        get autoCalloutOthersLabelFormat() {
            return this.gd;
        }
        set autoCalloutOthersLabelFormat(a) {
            this.gd = a;
            this.g("AutoCalloutOthersLabelFormat");
        }
        get autoCalloutOthersLabelFormatSpecifiers() {
            return this.fn;
        }
        set autoCalloutOthersLabelFormatSpecifiers(a) {
            this.fn = a;
            this.g("AutoCalloutOthersLabelFormatSpecifiers");
        }
        get proportionalRadialLabelFormat() {
            return this.gj;
        }
        set proportionalRadialLabelFormat(a) {
            this.gj = a;
            this.g("ProportionalRadialLabelFormat");
        }
        get proportionalRadialLabelFormatSpecifiers() {
            return this.fr;
        }
        set proportionalRadialLabelFormatSpecifiers(a) {
            this.fr = a;
            this.g("ProportionalRadialLabelFormatSpecifiers");
        }
        get legendProportionalRadialLabelFormat() {
            return this.gf;
        }
        set legendProportionalRadialLabelFormat(a) {
            this.gf = a;
            this.g("LegendProportionalRadialLabelFormat");
        }
        get legendProportionalRadialLabelFormatSpecifiers() {
            return this.fo;
        }
        set legendProportionalRadialLabelFormatSpecifiers(a) {
            this.fo = a;
            this.g("LegendProportionalRadialLabelFormatSpecifiers");
        }
        get othersProportionalRadialLabelFormat() {
            return this.gi;
        }
        set othersProportionalRadialLabelFormat(a) {
            this.gi = a;
            this.g("OthersProportionalRadialLabelFormat");
        }
        get othersProportionalRadialLabelFormatSpecifiers() {
            return this.fq;
        }
        set othersProportionalRadialLabelFormatSpecifiers(a) {
            this.fq = a;
            this.g("OthersProportionalRadialLabelFormatSpecifiers");
        }
        get othersLegendProportionalRadialLabelFormat() {
            return this.gh;
        }
        set othersLegendProportionalRadialLabelFormat(a) {
            this.gh = a;
            this.g("OthersLegendProportionalRadialLabelFormat");
        }
        get othersLegendProportionalRadialLabelFormatSpecifiers() {
            return this.fp;
        }
        set othersLegendProportionalRadialLabelFormatSpecifiers(a) {
            this.fp = a;
            this.g("OthersLegendProportionalRadialLabelFormatSpecifiers");
        }
        get isCustomRadialStyleAllowed() {
            return this.fz;
        }
        set isCustomRadialStyleAllowed(a) {
            this.fz = a;
            this.g("IsCustomRadialStyleAllowed");
        }
        get isCustomRadialMarkerStyleAllowed() {
            return this.fy;
        }
        set isCustomRadialMarkerStyleAllowed(a) {
            this.fy = a;
            this.g("IsCustomRadialMarkerStyleAllowed");
        }
        get transitionInMode() {
            return this.gk;
        }
        set transitionInMode(a) {
            this.gk = a;
            this.g("TransitionInMode");
        }
        get isTransitionInEnabled() {
            return this.f0;
        }
        set isTransitionInEnabled(a) {
            this.f0 = a;
            this.g("IsTransitionInEnabled");
        }
        get angleAxisRef() {
            return this.f9;
        }
        set angleAxisRef(a) {
            this.f9 = a;
            this.g("AngleAxisRef");
        }
        get valueAxisRef() {
            return this.gl;
        }
        set valueAxisRef(a) {
            this.gl = a;
            this.g("ValueAxisRef");
        }
        get clipSeriesToBounds() {
            return this.fx;
        }
        set clipSeriesToBounds(a) {
            this.fx = a;
            this.g("ClipSeriesToBounds");
        }
        get assigningRadialStyleRef() {
            return this.gb;
        }
        set assigningRadialStyleRef(a) {
            this.gb = a;
            this.g("AssigningRadialStyleRef");
        }
        get assigningRadialMarkerStyleRef() {
            return this.ga;
        }
        set assigningRadialMarkerStyleRef(a) {
            this.ga = a;
            this.g("AssigningRadialMarkerStyleRef");
        }
    }
    RadialBaseDescription.$t = markType(RadialBaseDescription, 'RadialBaseDescription', MarkerSeriesDescription.$);
    return RadialBaseDescription;
})();
