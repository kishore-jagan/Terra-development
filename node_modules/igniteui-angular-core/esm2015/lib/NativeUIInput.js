/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { NativeUIComponent } from "./NativeUIComponent";
import { NativeUIInputDisplayType_$type } from "./NativeUIInputDisplayType";
import { enumGetBox, EnumUtil, markType } from "./type";
import { NativeUIDisplayDensity_$type } from "./NativeUIDisplayDensity";
import { NativeUIInputType_$type } from "./NativeUIInputType";
import { NativeUIComponentHorizontalAlignment_$type } from "./NativeUIComponentHorizontalAlignment";
/**
 * @hidden
 */
export let NativeUIInput = /*@__PURE__*/ (() => {
    class NativeUIInput extends NativeUIComponent {
        constructor() {
            super(...arguments);
            this.bm = null;
            this.bi = null;
        }
        get bj() {
            return this.d;
        }
        get bo() {
            let a = this.ag(0);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIInputDisplayType_$type, a);
        }
        set bo(a) {
            this.a2(0, enumGetBox(NativeUIInputDisplayType_$type, a));
        }
        get bl() {
            let a = this.ag(1);
            return a == null ? 1 : EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, a);
        }
        set bl(a) {
            this.a2(1, enumGetBox(NativeUIDisplayDensity_$type, a));
        }
        get bs() {
            let a = this.ag(2);
            return a;
        }
        set bs(a) {
            this.a2(2, a);
        }
        get bn() {
            return this.bm;
        }
        set bn(a) {
            let b = this.bm;
            this.bm = a;
            if (this.bm != b) {
                if (b != null) {
                    this.a0(0, b);
                }
                if (this.bm != null) {
                    this.ap(0, this.bm);
                }
            }
        }
        get bp() {
            let a = this.ag(19);
            return a == null ? 0 : EnumUtil.getEnumValue(NativeUIInputType_$type, a);
        }
        set bp(a) {
            this.a2(19, enumGetBox(NativeUIInputType_$type, a));
        }
        get bk() {
            let a = this.ag(20);
            return a == null ? 0 : EnumUtil.getEnumValue(NativeUIComponentHorizontalAlignment_$type, a);
        }
        set bk(a) {
            this.a2(20, enumGetBox(NativeUIComponentHorizontalAlignment_$type, a));
        }
        get bv() {
            let a = this.ag(33);
            return a == null ? null : a;
        }
        set bv(a) {
            this.a2(33, a);
        }
        get br() {
            let a = this.ag(21);
            return a == null ? false : a;
        }
        set br(a) {
            this.a2(21, a);
        }
        get bq() {
            let a = this.ag(32);
            return a == null ? false : a;
        }
        set bq(a) {
            this.a2(32, a);
        }
        bt() {
            this.bj.select(this.am);
        }
        bu(a, b) {
            this.bj.setSelectionRange(this.am, a, b);
        }
    }
    NativeUIInput.$t = markType(NativeUIInput, 'NativeUIInput', NativeUIComponent.$);
    return NativeUIInput;
})();
