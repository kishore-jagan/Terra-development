/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebComboDescription = /*@__PURE__*/ (() => {
    class WebComboDescription extends Description {
        constructor() {
            super();
            this.aj = null;
            this.s = false;
            this.u = false;
            this.l = false;
            this.m = false;
            this.aq = null;
            this.au = null;
            this.av = null;
            this.r = false;
            this.aw = null;
            this.ak = null;
            this.an = null;
            this.ao = null;
            this.j = null;
            this.n = false;
            this.p = false;
            this.h = null;
            this.o = false;
            this.t = false;
            this.ar = null;
            this.q = false;
            this.ap = null;
            this.am = null;
            this.ag = null;
            this.al = null;
            this.af = null;
            this.at = null;
            this.as = null;
            this.ai = null;
            this.ah = null;
        }
        get_type() {
            return "WebCombo";
        }
        get type() {
            return this.get_type();
        }
        get dataRef() {
            return this.aj;
        }
        set dataRef(a) {
            this.aj = a;
            this.g("DataRef");
        }
        get outlined() {
            return this.s;
        }
        set outlined(a) {
            this.s = a;
            this.g("Outlined");
        }
        get singleSelect() {
            return this.u;
        }
        set singleSelect(a) {
            this.u = a;
            this.g("SingleSelect");
        }
        get autofocus() {
            return this.l;
        }
        set autofocus(a) {
            this.l = a;
            this.g("Autofocus");
        }
        get autofocusList() {
            return this.m;
        }
        set autofocusList(a) {
            this.m = a;
            this.g("AutofocusList");
        }
        get label() {
            return this.aq;
        }
        set label(a) {
            this.aq = a;
            this.g("Label");
        }
        get placeholder() {
            return this.au;
        }
        set placeholder(a) {
            this.au = a;
            this.g("Placeholder");
        }
        get placeholderSearch() {
            return this.av;
        }
        set placeholderSearch(a) {
            this.av = a;
            this.g("PlaceholderSearch");
        }
        get open() {
            return this.r;
        }
        set open(a) {
            this.r = a;
            this.g("Open");
        }
        get valueKey() {
            return this.aw;
        }
        set valueKey(a) {
            this.aw = a;
            this.g("ValueKey");
        }
        get displayKey() {
            return this.ak;
        }
        set displayKey(a) {
            this.ak = a;
            this.g("DisplayKey");
        }
        get groupKey() {
            return this.an;
        }
        set groupKey(a) {
            this.an = a;
            this.g("GroupKey");
        }
        get groupSorting() {
            return this.ao;
        }
        set groupSorting(a) {
            this.ao = a;
            this.g("GroupSorting");
        }
        get filteringOptions() {
            return this.j;
        }
        set filteringOptions(a) {
            this.j = a;
            this.g("FilteringOptions");
        }
        get caseSensitiveIcon() {
            return this.n;
        }
        set caseSensitiveIcon(a) {
            this.n = a;
            this.g("CaseSensitiveIcon");
        }
        get disableFiltering() {
            return this.p;
        }
        set disableFiltering(a) {
            this.p = a;
            this.g("DisableFiltering");
        }
        get value() {
            return this.h;
        }
        set value(a) {
            this.h = a;
            this.g("Value");
        }
        get disabled() {
            return this.o;
        }
        set disabled(a) {
            this.o = a;
            this.g("Disabled");
        }
        get required() {
            return this.t;
        }
        set required(a) {
            this.t = a;
            this.g("Required");
        }
        get name() {
            return this.ar;
        }
        set name(a) {
            this.ar = a;
            this.g("Name");
        }
        get invalid() {
            return this.q;
        }
        set invalid(a) {
            this.q = a;
            this.g("Invalid");
        }
        get itemTemplateRef() {
            return this.ap;
        }
        set itemTemplateRef(a) {
            this.ap = a;
            this.g("ItemTemplateRef");
        }
        get groupHeaderTemplateRef() {
            return this.am;
        }
        set groupHeaderTemplateRef(a) {
            this.am = a;
            this.g("GroupHeaderTemplateRef");
        }
        get changeRef() {
            return this.ag;
        }
        set changeRef(a) {
            this.ag = a;
            this.g("ChangeRef");
        }
        get focusRef() {
            return this.al;
        }
        set focusRef(a) {
            this.al = a;
            this.g("FocusRef");
        }
        get blurRef() {
            return this.af;
        }
        set blurRef(a) {
            this.af = a;
            this.g("BlurRef");
        }
        get openingRef() {
            return this.at;
        }
        set openingRef(a) {
            this.at = a;
            this.g("OpeningRef");
        }
        get openedRef() {
            return this.as;
        }
        set openedRef(a) {
            this.as = a;
            this.g("OpenedRef");
        }
        get closingRef() {
            return this.ai;
        }
        set closingRef(a) {
            this.ai = a;
            this.g("ClosingRef");
        }
        get closedRef() {
            return this.ah;
        }
        set closedRef(a) {
            this.ah = a;
            this.g("ClosedRef");
        }
    }
    WebComboDescription.$t = markType(WebComboDescription, 'WebComboDescription', Description.$);
    return WebComboDescription;
})();
