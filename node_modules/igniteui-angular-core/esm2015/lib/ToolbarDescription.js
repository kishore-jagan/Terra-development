/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ToolbarDescription = /*@__PURE__*/ (() => {
    class ToolbarDescription extends Description {
        constructor() {
            super();
            this.ax = null;
            this.j = null;
            this.h = null;
            this.i = null;
            this.be = null;
            this.bl = null;
            this.aw = null;
            this.bg = null;
            this.a4 = null;
            this.bf = null;
            this.a9 = null;
            this.bm = null;
            this.a3 = null;
            this.a6 = null;
            this.bo = null;
            this.bn = null;
            this.ab = 0;
            this.ac = 0;
            this.ba = null;
            this.bb = null;
            this.ay = null;
            this.p = 0;
            this.az = null;
            this.a0 = null;
            this.bh = null;
            this.aa = 0;
            this.bi = null;
            this.bj = null;
            this.x = 0;
            this.y = 0;
            this.z = 0;
            this.w = 0;
            this.t = 0;
            this.u = 0;
            this.v = 0;
            this.s = 0;
            this.n = false;
            this.r = 0;
            this.q = 0;
            this.a8 = null;
            this.bc = null;
            this.bp = null;
            this.a1 = null;
            this.bq = null;
            this.a2 = null;
            this.as = 0;
            this.bk = null;
            this.a5 = null;
            this.ar = 0;
            this.bd = null;
            this.br = null;
            this.a7 = null;
            this.av = null;
        }
        get_type() {
            return "Toolbar";
        }
        get type() {
            return this.get_type();
        }
        get baseTheme() {
            return this.ax;
        }
        set baseTheme(a) {
            this.ax = a;
            this.g("BaseTheme");
        }
        get autoGeneratedActions() {
            return this.j;
        }
        set autoGeneratedActions(a) {
            this.j = a;
            this.g("AutoGeneratedActions");
        }
        get actions() {
            return this.h;
        }
        set actions(a) {
            this.h = a;
            this.g("Actions");
        }
        get actualActions() {
            return this.i;
        }
        set actualActions(a) {
            this.i = a;
            this.g("ActualActions");
        }
        get orientation() {
            return this.be;
        }
        set orientation(a) {
            this.be = a;
            this.g("Orientation");
        }
        get targetRef() {
            return this.bl;
        }
        set targetRef(a) {
            this.bl = a;
            this.g("TargetRef");
        }
        get backgroundColor() {
            return this.aw;
        }
        set backgroundColor(a) {
            this.aw = a;
            this.g("BackgroundColor");
        }
        get submenuBackgroundColor() {
            return this.bg;
        }
        set submenuBackgroundColor(a) {
            this.bg = a;
            this.g("SubmenuBackgroundColor");
        }
        get groupHeaderBackgroundColor() {
            return this.a4;
        }
        set groupHeaderBackgroundColor(a) {
            this.a4 = a;
            this.g("GroupHeaderBackgroundColor");
        }
        get separatorBackgroundColor() {
            return this.bf;
        }
        set separatorBackgroundColor(a) {
            this.bf = a;
            this.g("SeparatorBackgroundColor");
        }
        get hoverBackgroundColor() {
            return this.a9;
        }
        set hoverBackgroundColor(a) {
            this.a9 = a;
            this.g("HoverBackgroundColor");
        }
        get textColor() {
            return this.bm;
        }
        set textColor(a) {
            this.bm = a;
            this.g("TextColor");
        }
        get disabledTextColor() {
            return this.a3;
        }
        set disabledTextColor(a) {
            this.a3 = a;
            this.g("DisabledTextColor");
        }
        get groupHeaderTextColor() {
            return this.a6;
        }
        set groupHeaderTextColor(a) {
            this.a6 = a;
            this.g("GroupHeaderTextColor");
        }
        get toolTipTextColor() {
            return this.bo;
        }
        set toolTipTextColor(a) {
            this.bo = a;
            this.g("ToolTipTextColor");
        }
        get toolTipBackgroundColor() {
            return this.bn;
        }
        set toolTipBackgroundColor(a) {
            this.bn = a;
            this.g("ToolTipBackgroundColor");
        }
        get toolTipCornerRadius() {
            return this.ab;
        }
        set toolTipCornerRadius(a) {
            this.ab = a;
            this.g("ToolTipCornerRadius");
        }
        get toolTipElevation() {
            return this.ac;
        }
        set toolTipElevation(a) {
            this.ac = a;
            this.g("ToolTipElevation");
        }
        get iconFill() {
            return this.ba;
        }
        set iconFill(a) {
            this.ba = a;
            this.g("IconFill");
        }
        get iconStroke() {
            return this.bb;
        }
        set iconStroke(a) {
            this.bb = a;
            this.g("IconStroke");
        }
        get cellFontFamily() {
            return this.ay;
        }
        set cellFontFamily(a) {
            this.ay = a;
            this.g("CellFontFamily");
        }
        get cellFontSize() {
            return this.p;
        }
        set cellFontSize(a) {
            this.p = a;
            this.g("CellFontSize");
        }
        get cellFontStyle() {
            return this.az;
        }
        set cellFontStyle(a) {
            this.az = a;
            this.g("CellFontStyle");
        }
        get cellFontWeight() {
            return this.a0;
        }
        set cellFontWeight(a) {
            this.a0 = a;
            this.g("CellFontWeight");
        }
        get subtitleFontFamily() {
            return this.bh;
        }
        set subtitleFontFamily(a) {
            this.bh = a;
            this.g("SubtitleFontFamily");
        }
        get subtitleFontSize() {
            return this.aa;
        }
        set subtitleFontSize(a) {
            this.aa = a;
            this.g("SubtitleFontSize");
        }
        get subtitleFontStyle() {
            return this.bi;
        }
        set subtitleFontStyle(a) {
            this.bi = a;
            this.g("SubtitleFontStyle");
        }
        get subtitleFontWeight() {
            return this.bj;
        }
        set subtitleFontWeight(a) {
            this.bj = a;
            this.g("SubtitleFontWeight");
        }
        get separatorVerticalPaddingLeft() {
            return this.x;
        }
        set separatorVerticalPaddingLeft(a) {
            this.x = a;
            this.g("SeparatorVerticalPaddingLeft");
        }
        get separatorVerticalPaddingRight() {
            return this.y;
        }
        set separatorVerticalPaddingRight(a) {
            this.y = a;
            this.g("SeparatorVerticalPaddingRight");
        }
        get separatorVerticalPaddingTop() {
            return this.z;
        }
        set separatorVerticalPaddingTop(a) {
            this.z = a;
            this.g("SeparatorVerticalPaddingTop");
        }
        get separatorVerticalPaddingBottom() {
            return this.w;
        }
        set separatorVerticalPaddingBottom(a) {
            this.w = a;
            this.g("SeparatorVerticalPaddingBottom");
        }
        get separatorHorizontalPaddingLeft() {
            return this.t;
        }
        set separatorHorizontalPaddingLeft(a) {
            this.t = a;
            this.g("SeparatorHorizontalPaddingLeft");
        }
        get separatorHorizontalPaddingRight() {
            return this.u;
        }
        set separatorHorizontalPaddingRight(a) {
            this.u = a;
            this.g("SeparatorHorizontalPaddingRight");
        }
        get separatorHorizontalPaddingTop() {
            return this.v;
        }
        set separatorHorizontalPaddingTop(a) {
            this.v = a;
            this.g("SeparatorHorizontalPaddingTop");
        }
        get separatorHorizontalPaddingBottom() {
            return this.s;
        }
        set separatorHorizontalPaddingBottom(a) {
            this.s = a;
            this.g("SeparatorHorizontalPaddingBottom");
        }
        get showOnHover() {
            return this.n;
        }
        set showOnHover(a) {
            this.n = a;
            this.g("ShowOnHover");
        }
        get highlightWidth() {
            return this.r;
        }
        set highlightWidth(a) {
            this.r = a;
            this.g("HighlightWidth");
        }
        get highlightRadius() {
            return this.q;
        }
        set highlightRadius(a) {
            this.q = a;
            this.g("HighlightRadius");
        }
        get highlightColor() {
            return this.a8;
        }
        set highlightColor(a) {
            this.a8 = a;
            this.g("HighlightColor");
        }
        get menuArrowStroke() {
            return this.bc;
        }
        set menuArrowStroke(a) {
            this.bc = a;
            this.g("MenuArrowStroke");
        }
        get uncheckedBackgroundColor() {
            return this.bp;
        }
        set uncheckedBackgroundColor(a) {
            this.bp = a;
            this.g("UncheckedBackgroundColor");
        }
        get checkedBackgroundColor() {
            return this.a1;
        }
        set checkedBackgroundColor(a) {
            this.a1 = a;
            this.g("CheckedBackgroundColor");
        }
        get uncheckedBorderColor() {
            return this.bq;
        }
        set uncheckedBorderColor(a) {
            this.bq = a;
            this.g("UncheckedBorderColor");
        }
        get checkedBorderColor() {
            return this.a2;
        }
        set checkedBorderColor(a) {
            this.a2 = a;
            this.g("CheckedBorderColor");
        }
        get rowHeight() {
            return this.as;
        }
        set rowHeight(a) {
            this.as = a;
            this.g("RowHeight");
        }
        get subtitleTextColor() {
            return this.bk;
        }
        set subtitleTextColor(a) {
            this.bk = a;
            this.g("SubtitleTextColor");
        }
        get groupHeaderSubtitleTextColor() {
            return this.a5;
        }
        set groupHeaderSubtitleTextColor(a) {
            this.a5 = a;
            this.g("GroupHeaderSubtitleTextColor");
        }
        get dropdownDelay() {
            return this.ar;
        }
        set dropdownDelay(a) {
            this.ar = a;
            this.g("DropdownDelay");
        }
        get onCommandRef() {
            return this.bd;
        }
        set onCommandRef(a) {
            this.bd = a;
            this.g("OnCommandRef");
        }
        get width() {
            return this.br;
        }
        set width(a) {
            this.br = a;
            this.g("Width");
        }
        get height() {
            return this.a7;
        }
        set height(a) {
            this.a7 = a;
            this.g("Height");
        }
        get background() {
            return this.av;
        }
        set background(a) {
            this.av = a;
            this.g("Background");
        }
    }
    ToolbarDescription.$t = markType(ToolbarDescription, 'ToolbarDescription', Description.$);
    return ToolbarDescription;
})();
