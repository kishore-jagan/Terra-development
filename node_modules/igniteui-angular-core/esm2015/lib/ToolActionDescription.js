/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let ToolActionDescription = /*@__PURE__*/ (() => {
    class ToolActionDescription extends Description {
        constructor() {
            super();
            this.h = null;
            this.aq = 0;
            this.b7 = null;
            this.br = null;
            this.bp = null;
            this.b6 = null;
            this.bt = null;
            this.bs = null;
            this.bf = null;
            this.am = 0;
            this.y = 0;
            this.an = 0;
            this.z = 0;
            this.al = 0;
            this.x = 0;
            this.ao = 0;
            this.aa = 0;
            this.bk = null;
            this.bz = null;
            this.bh = null;
            this.bq = null;
            this.bo = null;
            this.ce = null;
            this.bn = null;
            this.cd = null;
            this.bi = null;
            this.bu = null;
            this.bv = null;
            this.ab = 0;
            this.bw = null;
            this.bx = null;
            this.ca = null;
            this.ap = 0;
            this.cb = null;
            this.cc = null;
            this.o = false;
            this.p = false;
            this.b4 = null;
            this.cf = null;
            this.b9 = null;
            this.b2 = null;
            this.b0 = null;
            this.ah = 0;
            this.ai = 0;
            this.aj = 0;
            this.ag = 0;
            this.b1 = null;
            this.bl = null;
            this.i = null;
            this.b3 = null;
            this.bm = null;
            this.j = null;
            this.af = 0;
            this.ak = 0;
            this.w = 0;
            this.ae = 0;
            this.v = 0;
            this.cg = null;
            this.n = false;
            this.ad = 0;
            this.u = 0;
            this.ac = 0;
            this.t = 0;
            this.by = null;
            this.bj = null;
            this.b5 = null;
            this.b8 = null;
        }
        get_type() {
            return "ToolAction";
        }
        get type() {
            return this.get_type();
        }
        get actions() {
            return this.h;
        }
        set actions(a) {
            this.h = a;
            this.g("Actions");
        }
        get width() {
            return this.aq;
        }
        set width(a) {
            this.aq = a;
            this.g("Width");
        }
        get parentId() {
            return this.b7;
        }
        set parentId(a) {
            this.b7 = a;
            this.g("ParentId");
        }
        get beforeId() {
            return this.br;
        }
        set beforeId(a) {
            this.br = a;
            this.g("BeforeId");
        }
        get afterId() {
            return this.bp;
        }
        set afterId(a) {
            this.bp = a;
            this.g("AfterId");
        }
        get overlayId() {
            return this.b6;
        }
        set overlayId(a) {
            this.b6 = a;
            this.g("OverlayId");
        }
        get commandId() {
            return this.bt;
        }
        set commandId(a) {
            this.bt = a;
            this.g("CommandId");
        }
        get commandArgument() {
            return this.bs;
        }
        set commandArgument(a) {
            this.bs = a;
            this.g("CommandArgument");
        }
        get commandArgumentValue() {
            return this.bf;
        }
        set commandArgumentValue(a) {
            this.bf = a;
            this.g("CommandArgumentValue");
        }
        get paddingLeft() {
            return this.am;
        }
        set paddingLeft(a) {
            this.am = a;
            this.g("PaddingLeft");
        }
        get actualPaddingLeft() {
            return this.y;
        }
        set actualPaddingLeft(a) {
            this.y = a;
            this.g("ActualPaddingLeft");
        }
        get paddingRight() {
            return this.an;
        }
        set paddingRight(a) {
            this.an = a;
            this.g("PaddingRight");
        }
        get actualPaddingRight() {
            return this.z;
        }
        set actualPaddingRight(a) {
            this.z = a;
            this.g("ActualPaddingRight");
        }
        get paddingBottom() {
            return this.al;
        }
        set paddingBottom(a) {
            this.al = a;
            this.g("PaddingBottom");
        }
        get actualPaddingBottom() {
            return this.x;
        }
        set actualPaddingBottom(a) {
            this.x = a;
            this.g("ActualPaddingBottom");
        }
        get paddingTop() {
            return this.ao;
        }
        set paddingTop(a) {
            this.ao = a;
            this.g("PaddingTop");
        }
        get actualPaddingTop() {
            return this.aa;
        }
        set actualPaddingTop(a) {
            this.aa = a;
            this.g("ActualPaddingTop");
        }
        get actualHoverBackground() {
            return this.bk;
        }
        set actualHoverBackground(a) {
            this.bk = a;
            this.g("ActualHoverBackground");
        }
        get hoverBackground() {
            return this.bz;
        }
        set hoverBackground(a) {
            this.bz = a;
            this.g("HoverBackground");
        }
        get actualBackground() {
            return this.bh;
        }
        set actualBackground(a) {
            this.bh = a;
            this.g("ActualBackground");
        }
        get background() {
            return this.bq;
        }
        set background(a) {
            this.bq = a;
            this.g("Background");
        }
        get actualTextColor() {
            return this.bo;
        }
        set actualTextColor(a) {
            this.bo = a;
            this.g("ActualTextColor");
        }
        get textColor() {
            return this.ce;
        }
        set textColor(a) {
            this.ce = a;
            this.g("TextColor");
        }
        get actualSubtitleTextColor() {
            return this.bn;
        }
        set actualSubtitleTextColor(a) {
            this.bn = a;
            this.g("ActualSubtitleTextColor");
        }
        get subtitleTextColor() {
            return this.cd;
        }
        set subtitleTextColor(a) {
            this.cd = a;
            this.g("SubtitleTextColor");
        }
        get actualDisabledTextColor() {
            return this.bi;
        }
        set actualDisabledTextColor(a) {
            this.bi = a;
            this.g("ActualDisabledTextColor");
        }
        get disabledTextColor() {
            return this.bu;
        }
        set disabledTextColor(a) {
            this.bu = a;
            this.g("DisabledTextColor");
        }
        get fontFamily() {
            return this.bv;
        }
        set fontFamily(a) {
            this.bv = a;
            this.g("FontFamily");
        }
        get fontSize() {
            return this.ab;
        }
        set fontSize(a) {
            this.ab = a;
            this.g("FontSize");
        }
        get fontStyle() {
            return this.bw;
        }
        set fontStyle(a) {
            this.bw = a;
            this.g("FontStyle");
        }
        get fontWeight() {
            return this.bx;
        }
        set fontWeight(a) {
            this.bx = a;
            this.g("FontWeight");
        }
        get subtitleFontFamily() {
            return this.ca;
        }
        set subtitleFontFamily(a) {
            this.ca = a;
            this.g("SubtitleFontFamily");
        }
        get subtitleFontSize() {
            return this.ap;
        }
        set subtitleFontSize(a) {
            this.ap = a;
            this.g("SubtitleFontSize");
        }
        get subtitleFontStyle() {
            return this.cb;
        }
        set subtitleFontStyle(a) {
            this.cb = a;
            this.g("SubtitleFontStyle");
        }
        get subtitleFontWeight() {
            return this.cc;
        }
        set subtitleFontWeight(a) {
            this.cc = a;
            this.g("SubtitleFontWeight");
        }
        get isDisabled() {
            return this.o;
        }
        set isDisabled(a) {
            this.o = a;
            this.g("IsDisabled");
        }
        get isHighlighted() {
            return this.p;
        }
        set isHighlighted(a) {
            this.p = a;
            this.g("IsHighlighted");
        }
        get name() {
            return this.b4;
        }
        set name(a) {
            this.b4 = a;
            this.g("Name");
        }
        get title() {
            return this.cf;
        }
        set title(a) {
            this.cf = a;
            this.g("Title");
        }
        get subtitle() {
            return this.b9;
        }
        set subtitle(a) {
            this.b9 = a;
            this.g("Subtitle");
        }
        get iconName() {
            return this.b2;
        }
        set iconName(a) {
            this.b2 = a;
            this.g("IconName");
        }
        get iconCollectionName() {
            return this.b0;
        }
        set iconCollectionName(a) {
            this.b0 = a;
            this.g("IconCollectionName");
        }
        get iconViewBoxLeft() {
            return this.ah;
        }
        set iconViewBoxLeft(a) {
            this.ah = a;
            this.g("IconViewBoxLeft");
        }
        get iconViewBoxTop() {
            return this.ai;
        }
        set iconViewBoxTop(a) {
            this.ai = a;
            this.g("IconViewBoxTop");
        }
        get iconViewBoxWidth() {
            return this.aj;
        }
        set iconViewBoxWidth(a) {
            this.aj = a;
            this.g("IconViewBoxWidth");
        }
        get iconViewBoxHeight() {
            return this.ag;
        }
        set iconViewBoxHeight(a) {
            this.ag = a;
            this.g("IconViewBoxHeight");
        }
        get iconFill() {
            return this.b1;
        }
        set iconFill(a) {
            this.b1 = a;
            this.g("IconFill");
        }
        get actualIconFill() {
            return this.bl;
        }
        set actualIconFill(a) {
            this.bl = a;
            this.g("ActualIconFill");
        }
        get iconFillColors() {
            return this.i;
        }
        set iconFillColors(a) {
            this.i = a;
            this.g("IconFillColors");
        }
        get iconStroke() {
            return this.b3;
        }
        set iconStroke(a) {
            this.b3 = a;
            this.g("IconStroke");
        }
        get actualIconStroke() {
            return this.bm;
        }
        set actualIconStroke(a) {
            this.bm = a;
            this.g("ActualIconStroke");
        }
        get iconStrokeColors() {
            return this.j;
        }
        set iconStrokeColors(a) {
            this.j = a;
            this.g("IconStrokeColors");
        }
        get iconStrokeWidth() {
            return this.af;
        }
        set iconStrokeWidth(a) {
            this.af = a;
            this.g("IconStrokeWidth");
        }
        get iconWidth() {
            return this.ak;
        }
        set iconWidth(a) {
            this.ak = a;
            this.g("IconWidth");
        }
        get actualIconWidth() {
            return this.w;
        }
        set actualIconWidth(a) {
            this.w = a;
            this.g("ActualIconWidth");
        }
        get iconHeight() {
            return this.ae;
        }
        set iconHeight(a) {
            this.ae = a;
            this.g("IconHeight");
        }
        get actualIconHeight() {
            return this.v;
        }
        set actualIconHeight(a) {
            this.v = a;
            this.g("ActualIconHeight");
        }
        get visibility() {
            return this.cg;
        }
        set visibility(a) {
            this.cg = a;
            this.g("Visibility");
        }
        get closeOnExecute() {
            return this.n;
        }
        set closeOnExecute(a) {
            this.n = a;
            this.g("CloseOnExecute");
        }
        get highlightWidth() {
            return this.ad;
        }
        set highlightWidth(a) {
            this.ad = a;
            this.g("HighlightWidth");
        }
        get actualHighlightWidth() {
            return this.u;
        }
        set actualHighlightWidth(a) {
            this.u = a;
            this.g("ActualHighlightWidth");
        }
        get highlightRadius() {
            return this.ac;
        }
        set highlightRadius(a) {
            this.ac = a;
            this.g("HighlightRadius");
        }
        get actualHighlightRadius() {
            return this.t;
        }
        set actualHighlightRadius(a) {
            this.t = a;
            this.g("ActualHighlightRadius");
        }
        get highlightColor() {
            return this.by;
        }
        set highlightColor(a) {
            this.by = a;
            this.g("HighlightColor");
        }
        get actualHighlightColor() {
            return this.bj;
        }
        set actualHighlightColor(a) {
            this.bj = a;
            this.g("ActualHighlightColor");
        }
        get onCommandRef() {
            return this.b5;
        }
        set onCommandRef(a) {
            this.b5 = a;
            this.g("OnCommandRef");
        }
        get performedRef() {
            return this.b8;
        }
        set performedRef(a) {
            this.b8 = a;
            this.g("PerformedRef");
        }
    }
    ToolActionDescription.$t = markType(ToolActionDescription, 'ToolActionDescription', Description.$);
    return ToolActionDescription;
})();
