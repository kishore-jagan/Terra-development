/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { NativeUIComponent } from "./NativeUIComponent";
import { markType } from "./type";
/**
 * @hidden
 */
export let NativeUISlider = /*@__PURE__*/ (() => {
    class NativeUISlider extends NativeUIComponent {
        constructor() {
            super(...arguments);
            this.bi = null;
            this.bj = null;
        }
        get_e() {
            return 5;
        }
        get bp() {
            let a = this.ag(2);
            return a;
        }
        set bp(a) {
            this.a2(2, a);
        }
        get bn() {
            let a = this.ag(12);
            return a;
        }
        set bn(a) {
            this.a2(12, a);
        }
        get bm() {
            let a = this.ag(13);
            return a;
        }
        set bm(a) {
            this.a2(13, a);
        }
        get bo() {
            let a = this.ag(14);
            return a;
        }
        set bo(a) {
            this.a2(14, a);
        }
        get bk() {
            return this.bi;
        }
        set bk(a) {
            let b = this.bi;
            this.bi = a;
            if (this.bi != b) {
                if (b != null) {
                    this.a0(4, b);
                }
                if (this.bi != null) {
                    this.ap(4, this.bi);
                }
            }
        }
        get bl() {
            return this.bj;
        }
        set bl(a) {
            let b = this.bj;
            this.bj = a;
            if (this.bj != b) {
                if (b != null) {
                    this.a0(0, b);
                }
                if (this.bj != null) {
                    this.ap(0, this.bj);
                }
            }
        }
    }
    NativeUISlider.$t = markType(NativeUISlider, 'NativeUISlider', NativeUIComponent.$);
    return NativeUISlider;
})();
