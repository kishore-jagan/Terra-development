/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let CheckboxListDescription = /*@__PURE__*/ (() => {
    class CheckboxListDescription extends Description {
        constructor() {
            super();
            this.h = null;
            this.i = null;
            this.ak = null;
            this.aj = null;
            this.a4 = null;
            this.am = null;
            this.ax = null;
            this.v = 0;
            this.aa = null;
            this.r = 0;
            this.ab = null;
            this.ac = null;
            this.an = null;
            this.z = null;
            this.al = null;
            this.aw = null;
            this.ar = null;
            this.ay = null;
            this.as = null;
            this.at = null;
            this.s = 0;
            this.au = null;
            this.av = null;
            this.af = null;
            this.ad = null;
            this.ag = null;
            this.ae = null;
            this.ah = null;
            this.aq = null;
            this.ap = null;
            this.az = null;
            this.a0 = null;
            this.x = null;
            this.n = false;
            this.y = null;
            this.ao = null;
            this.a5 = null;
            this.m = false;
            this.l = false;
            this.a2 = null;
            this.a3 = null;
            this.ai = null;
            this.a1 = null;
        }
        get_type() {
            return "CheckboxList";
        }
        get type() {
            return this.get_type();
        }
        get keys() {
            return this.h;
        }
        set keys(a) {
            this.h = a;
            this.g("Keys");
        }
        get primaryKey() {
            return this.i;
        }
        set primaryKey(a) {
            this.i = a;
            this.g("PrimaryKey");
        }
        get dataSourceRef() {
            return this.ak;
        }
        set dataSourceRef(a) {
            this.ak = a;
            this.g("DataSourceRef");
        }
        get dataMemberPath() {
            return this.aj;
        }
        set dataMemberPath(a) {
            this.aj = a;
            this.g("DataMemberPath");
        }
        get selectedMemberPath() {
            return this.a4;
        }
        set selectedMemberPath(a) {
            this.a4 = a;
            this.g("SelectedMemberPath");
        }
        get filterPlaceholderText() {
            return this.am;
        }
        set filterPlaceholderText(a) {
            this.am = a;
            this.g("FilterPlaceholderText");
        }
        get searchInputType() {
            return this.ax;
        }
        set searchInputType(a) {
            this.ax = a;
            this.g("SearchInputType");
        }
        get rowHeight() {
            return this.v;
        }
        set rowHeight(a) {
            this.v = a;
            this.g("RowHeight");
        }
        get cellFontFamily() {
            return this.aa;
        }
        set cellFontFamily(a) {
            this.aa = a;
            this.g("CellFontFamily");
        }
        get cellFontSize() {
            return this.r;
        }
        set cellFontSize(a) {
            this.r = a;
            this.g("CellFontSize");
        }
        get cellFontStyle() {
            return this.ab;
        }
        set cellFontStyle(a) {
            this.ab = a;
            this.g("CellFontStyle");
        }
        get cellFontWeight() {
            return this.ac;
        }
        set cellFontWeight(a) {
            this.ac = a;
            this.g("CellFontWeight");
        }
        get indexType() {
            return this.an;
        }
        set indexType(a) {
            this.an = a;
            this.g("IndexType");
        }
        get baseTheme() {
            return this.z;
        }
        set baseTheme(a) {
            this.z = a;
            this.g("BaseTheme");
        }
        get density() {
            return this.al;
        }
        set density(a) {
            this.al = a;
            this.g("Density");
        }
        get searchIconColor() {
            return this.aw;
        }
        set searchIconColor(a) {
            this.aw = a;
            this.g("SearchIconColor");
        }
        get searchBackgroundColor() {
            return this.ar;
        }
        set searchBackgroundColor(a) {
            this.ar = a;
            this.g("SearchBackgroundColor");
        }
        get searchTextColor() {
            return this.ay;
        }
        set searchTextColor(a) {
            this.ay = a;
            this.g("SearchTextColor");
        }
        get searchBorderColor() {
            return this.as;
        }
        set searchBorderColor(a) {
            this.as = a;
            this.g("SearchBorderColor");
        }
        get searchFontFamily() {
            return this.at;
        }
        set searchFontFamily(a) {
            this.at = a;
            this.g("SearchFontFamily");
        }
        get searchFontSize() {
            return this.s;
        }
        set searchFontSize(a) {
            this.s = a;
            this.g("SearchFontSize");
        }
        get searchFontStyle() {
            return this.au;
        }
        set searchFontStyle(a) {
            this.au = a;
            this.g("SearchFontStyle");
        }
        get searchFontWeight() {
            return this.av;
        }
        set searchFontWeight(a) {
            this.av = a;
            this.g("SearchFontWeight");
        }
        get checkboxTickColor() {
            return this.af;
        }
        set checkboxTickColor(a) {
            this.af = a;
            this.g("CheckboxTickColor");
        }
        get checkboxCheckedBackgroundColor() {
            return this.ad;
        }
        set checkboxCheckedBackgroundColor(a) {
            this.ad = a;
            this.g("CheckboxCheckedBackgroundColor");
        }
        get checkboxUncheckedBackgroundColor() {
            return this.ag;
        }
        set checkboxUncheckedBackgroundColor(a) {
            this.ag = a;
            this.g("CheckboxUncheckedBackgroundColor");
        }
        get checkboxCheckedBorderColor() {
            return this.ae;
        }
        set checkboxCheckedBorderColor(a) {
            this.ae = a;
            this.g("CheckboxCheckedBorderColor");
        }
        get checkboxUncheckedBorderColor() {
            return this.ah;
        }
        set checkboxUncheckedBorderColor(a) {
            this.ah = a;
            this.g("CheckboxUncheckedBorderColor");
        }
        get scrollbarStyle() {
            return this.aq;
        }
        set scrollbarStyle(a) {
            this.aq = a;
            this.g("ScrollbarStyle");
        }
        get scrollbarBackground() {
            return this.ap;
        }
        set scrollbarBackground(a) {
            this.ap = a;
            this.g("ScrollbarBackground");
        }
        get selectAllCaption() {
            return this.az;
        }
        set selectAllCaption(a) {
            this.az = a;
            this.g("SelectAllCaption");
        }
        get selectAllCaptionTextColor() {
            return this.a0;
        }
        set selectAllCaptionTextColor(a) {
            this.a0 = a;
            this.g("SelectAllCaptionTextColor");
        }
        get actualSelectAllCaptionTextColor() {
            return this.x;
        }
        set actualSelectAllCaptionTextColor(a) {
            this.x = a;
            this.g("ActualSelectAllCaptionTextColor");
        }
        get showSelectAll() {
            return this.n;
        }
        set showSelectAll(a) {
            this.n = a;
            this.g("ShowSelectAll");
        }
        get backgroundColor() {
            return this.y;
        }
        set backgroundColor(a) {
            this.y = a;
            this.g("BackgroundColor");
        }
        get rowHoverBackgroundColor() {
            return this.ao;
        }
        set rowHoverBackgroundColor(a) {
            this.ao = a;
            this.g("RowHoverBackgroundColor");
        }
        get textColor() {
            return this.a5;
        }
        set textColor(a) {
            this.a5 = a;
            this.g("TextColor");
        }
        get showFilter() {
            return this.m;
        }
        set showFilter(a) {
            this.m = a;
            this.g("ShowFilter");
        }
        get isRowHoverEnabled() {
            return this.l;
        }
        set isRowHoverEnabled(a) {
            this.l = a;
            this.g("IsRowHoverEnabled");
        }
        get selectedKeyAddedRef() {
            return this.a2;
        }
        set selectedKeyAddedRef(a) {
            this.a2 = a;
            this.g("SelectedKeyAddedRef");
        }
        get selectedKeyRemovedRef() {
            return this.a3;
        }
        set selectedKeyRemovedRef(a) {
            this.a3 = a;
            this.g("SelectedKeyRemovedRef");
        }
        get checkedChangedRef() {
            return this.ai;
        }
        set checkedChangedRef(a) {
            this.ai = a;
            this.g("CheckedChangedRef");
        }
        get selectAllCheckboxChangedRef() {
            return this.a1;
        }
        set selectAllCheckboxChangedRef(a) {
            this.a1 = a;
            this.g("SelectAllCheckboxChangedRef");
        }
    }
    CheckboxListDescription.$t = markType(CheckboxListDescription, 'CheckboxListDescription', Description.$);
    return CheckboxListDescription;
})();
