/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
export let WebColumnStateDescription = /*@__PURE__*/ (() => {
    class WebColumnStateDescription extends Description {
        constructor() {
            super();
            this.t = false;
            this.w = false;
            this.o = false;
            this.m = false;
            this.x = false;
            this.p = false;
            this.ay = null;
            this.az = null;
            this.a0 = null;
            this.q = false;
            this.s = false;
            this.av = null;
            this.r = false;
            this.aw = null;
            this.ar = null;
            this.ax = null;
            this.u = false;
            this.v = false;
            this.j = false;
            this.aq = null;
            this.k = false;
            this.l = false;
            this.i = false;
            this.n = false;
            this.y = false;
        }
        get_type() {
            return "WebColumnState";
        }
        get type() {
            return this.get_type();
        }
        get pinned() {
            return this.t;
        }
        set pinned(a) {
            this.t = a;
            this.g("Pinned");
        }
        get sortable() {
            return this.w;
        }
        set sortable(a) {
            this.w = a;
            this.g("Sortable");
        }
        get filterable() {
            return this.o;
        }
        set filterable(a) {
            this.o = a;
            this.g("Filterable");
        }
        get editable() {
            return this.m;
        }
        set editable(a) {
            this.m = a;
            this.g("Editable");
        }
        get sortingIgnoreCase() {
            return this.x;
        }
        set sortingIgnoreCase(a) {
            this.x = a;
            this.g("SortingIgnoreCase");
        }
        get filteringIgnoreCase() {
            return this.p;
        }
        set filteringIgnoreCase(a) {
            this.p = a;
            this.g("FilteringIgnoreCase");
        }
        get headerClasses() {
            return this.ay;
        }
        set headerClasses(a) {
            this.ay = a;
            this.g("HeaderClasses");
        }
        get headerGroupClasses() {
            return this.az;
        }
        set headerGroupClasses(a) {
            this.az = a;
            this.g("HeaderGroupClasses");
        }
        get maxWidth() {
            return this.a0;
        }
        set maxWidth(a) {
            this.a0 = a;
            this.g("MaxWidth");
        }
        get groupable() {
            return this.q;
        }
        set groupable(a) {
            this.q = a;
            this.g("Groupable");
        }
        get hidden() {
            return this.s;
        }
        set hidden(a) {
            this.s = a;
            this.g("Hidden");
        }
        get dataType() {
            return this.av;
        }
        set dataType(a) {
            this.av = a;
            this.g("DataType");
        }
        get hasSummary() {
            return this.r;
        }
        set hasSummary(a) {
            this.r = a;
            this.g("HasSummary");
        }
        get field() {
            return this.aw;
        }
        set field(a) {
            this.aw = a;
            this.g("Field");
        }
        get width() {
            return this.ar;
        }
        set width(a) {
            this.ar = a;
            this.g("Width");
        }
        get header() {
            return this.ax;
        }
        set header(a) {
            this.ax = a;
            this.g("Header");
        }
        get resizable() {
            return this.u;
        }
        set resizable(a) {
            this.u = a;
            this.g("Resizable");
        }
        get searchable() {
            return this.v;
        }
        set searchable(a) {
            this.v = a;
            this.g("Searchable");
        }
        get columnGroup() {
            return this.j;
        }
        set columnGroup(a) {
            this.j = a;
            this.g("ColumnGroup");
        }
        get parent() {
            return this.aq;
        }
        set parent(a) {
            this.aq = a;
            this.g("Parent");
        }
        get disableHiding() {
            return this.k;
        }
        set disableHiding(a) {
            this.k = a;
            this.g("DisableHiding");
        }
        get disablePinning() {
            return this.l;
        }
        set disablePinning(a) {
            this.l = a;
            this.g("DisablePinning");
        }
        get collapsible() {
            return this.i;
        }
        set collapsible(a) {
            this.i = a;
            this.g("Collapsible");
        }
        get expanded() {
            return this.n;
        }
        set expanded(a) {
            this.n = a;
            this.g("Expanded");
        }
        get visibleWhenCollapsed() {
            return this.y;
        }
        set visibleWhenCollapsed(a) {
            this.y = a;
            this.g("VisibleWhenCollapsed");
        }
    }
    WebColumnStateDescription.$t = markType(WebColumnStateDescription, 'WebColumnStateDescription', Description.$);
    WebColumnStateDescription.__marshalByValue = true;
    WebColumnStateDescription.__marshalByValueAlias = "ColumnState";
    return WebColumnStateDescription;
})();
