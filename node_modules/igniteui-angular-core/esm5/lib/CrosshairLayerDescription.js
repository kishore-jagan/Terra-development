/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CrosshairLayerDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CrosshairLayerDescription, _super);
    function CrosshairLayerDescription() {
        var _this = _super.call(this) || this;
        _this.g5 = null;
        _this.g9 = null;
        _this.g7 = null;
        _this.g8 = null;
        _this.f9 = false;
        _this.f7 = false;
        _this.he = null;
        _this.hb = null;
        _this.gd = 0;
        _this.g1 = 0;
        _this.hd = null;
        _this.gf = 0;
        _this.gh = 0;
        _this.gg = 0;
        _this.ge = 0;
        _this.gl = 0;
        _this.gn = 0;
        _this.gm = 0;
        _this.gk = 0;
        _this.gi = 0;
        _this.hi = null;
        _this.hf = null;
        _this.gj = 0;
        _this.g2 = 0;
        _this.hh = null;
        _this.go = 0;
        _this.ha = null;
        _this.g6 = null;
        _this.f8 = false;
        _this.hc = null;
        _this.hg = null;
        return _this;
    }
    CrosshairLayerDescription.prototype.get_type = function () {
        return "CrosshairLayer";
    };
    Object.defineProperty(CrosshairLayerDescription.prototype, "horizontalLineStroke", {
        get: function () {
            return this.g5;
        },
        set: function (a) {
            this.g5 = a;
            this.g("HorizontalLineStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "verticalLineStroke", {
        get: function () {
            return this.g9;
        },
        set: function (a) {
            this.g9 = a;
            this.g("VerticalLineStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "targetSeriesName", {
        get: function () {
            return this.g7;
        },
        set: function (a) {
            this.g7 = a;
            this.g("TargetSeriesName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "targetSeriesRef", {
        get: function () {
            return this.g8;
        },
        set: function (a) {
            this.g8 = a;
            this.g("TargetSeriesRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "useInterpolation", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            this.f9 = a;
            this.g("UseInterpolation");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "isAxisAnnotationEnabled", {
        get: function () {
            return this.f7;
        },
        set: function (a) {
            this.f7 = a;
            this.g("IsAxisAnnotationEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationTextColor", {
        get: function () {
            return this.he;
        },
        set: function (a) {
            this.he = a;
            this.g("XAxisAnnotationTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationBackground", {
        get: function () {
            return this.hb;
        },
        set: function (a) {
            this.hb = a;
            this.g("XAxisAnnotationBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationBackgroundCornerRadius", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            this.gd = a;
            this.g("XAxisAnnotationBackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.g1;
        },
        set: function (a) {
            this.g1 = a;
            this.g("XAxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationOutline", {
        get: function () {
            return this.hd;
        },
        set: function (a) {
            this.hd = a;
            this.g("XAxisAnnotationOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingLeft", {
        get: function () {
            return this.gf;
        },
        set: function (a) {
            this.gf = a;
            this.g("XAxisAnnotationPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingTop", {
        get: function () {
            return this.gh;
        },
        set: function (a) {
            this.gh = a;
            this.g("XAxisAnnotationPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingRight", {
        get: function () {
            return this.gg;
        },
        set: function (a) {
            this.gg = a;
            this.g("XAxisAnnotationPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationPaddingBottom", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            this.ge = a;
            this.g("XAxisAnnotationPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingLeft", {
        get: function () {
            return this.gl;
        },
        set: function (a) {
            this.gl = a;
            this.g("YAxisAnnotationPaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingTop", {
        get: function () {
            return this.gn;
        },
        set: function (a) {
            this.gn = a;
            this.g("YAxisAnnotationPaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingRight", {
        get: function () {
            return this.gm;
        },
        set: function (a) {
            this.gm = a;
            this.g("YAxisAnnotationPaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationPaddingBottom", {
        get: function () {
            return this.gk;
        },
        set: function (a) {
            this.gk = a;
            this.g("YAxisAnnotationPaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationStrokeThickness", {
        get: function () {
            return this.gi;
        },
        set: function (a) {
            this.gi = a;
            this.g("XAxisAnnotationStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationTextColor", {
        get: function () {
            return this.hi;
        },
        set: function (a) {
            this.hi = a;
            this.g("YAxisAnnotationTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationBackground", {
        get: function () {
            return this.hf;
        },
        set: function (a) {
            this.hf = a;
            this.g("YAxisAnnotationBackground");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationBackgroundCornerRadius", {
        get: function () {
            return this.gj;
        },
        set: function (a) {
            this.gj = a;
            this.g("YAxisAnnotationBackgroundCornerRadius");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationInterpolatedValuePrecision", {
        get: function () {
            return this.g2;
        },
        set: function (a) {
            this.g2 = a;
            this.g("YAxisAnnotationInterpolatedValuePrecision");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationOutline", {
        get: function () {
            return this.hh;
        },
        set: function (a) {
            this.hh = a;
            this.g("YAxisAnnotationOutline");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationStrokeThickness", {
        get: function () {
            return this.go;
        },
        set: function (a) {
            this.go = a;
            this.g("YAxisAnnotationStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "verticalLineVisibility", {
        get: function () {
            return this.ha;
        },
        set: function (a) {
            this.ha = a;
            this.g("VerticalLineVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "horizontalLineVisibility", {
        get: function () {
            return this.g6;
        },
        set: function (a) {
            this.g6 = a;
            this.g("HorizontalLineVisibility");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "skipUnknownValues", {
        get: function () {
            return this.f8;
        },
        set: function (a) {
            this.f8 = a;
            this.g("SkipUnknownValues");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "xAxisAnnotationFormatLabelRef", {
        get: function () {
            return this.hc;
        },
        set: function (a) {
            this.hc = a;
            this.g("XAxisAnnotationFormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CrosshairLayerDescription.prototype, "yAxisAnnotationFormatLabelRef", {
        get: function () {
            return this.hg;
        },
        set: function (a) {
            this.hg = a;
            this.g("YAxisAnnotationFormatLabelRef");
        },
        enumerable: false,
        configurable: true
    });
    CrosshairLayerDescription.$t = markType(CrosshairLayerDescription, 'CrosshairLayerDescription', AnnotationLayerDescription.$);
    return CrosshairLayerDescription;
}(AnnotationLayerDescription));
export { CrosshairLayerDescription };
