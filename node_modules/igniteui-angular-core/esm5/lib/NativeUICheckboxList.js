/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { NativeUIComponent } from "./NativeUIComponent";
import { enumGetBox, EnumUtil, markType } from "./type";
import { ControlDisplayDensity_$type } from "./ControlDisplayDensity";
/**
 * @hidden
 */
var NativeUICheckboxList = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(NativeUICheckboxList, _super);
    function NativeUICheckboxList() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bk = null;
        _this.bl = null;
        _this.bm = null;
        return _this;
    }
    NativeUICheckboxList.prototype.get_e = function () {
        return 16;
    };
    Object.defineProperty(NativeUICheckboxList.prototype, "bn", {
        get: function () {
            return this.bk;
        },
        set: function (a) {
            var b = this.bk;
            this.bk = a;
            if (this.bk != b) {
                if (b != null) {
                    this.a0(2, b);
                }
                if (this.bk != null) {
                    this.ap(2, this.bk);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bo", {
        get: function () {
            return this.bl;
        },
        set: function (a) {
            var b = this.bl;
            this.bl = a;
            if (this.bl != b) {
                if (b != null) {
                    this.a0(18, b);
                }
                if (this.bl != null) {
                    this.ap(18, this.bl);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bp", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            var b = this.bm;
            this.bm = a;
            if (this.bm != b) {
                if (b != null) {
                    this.a0(19, b);
                }
                if (this.bm != null) {
                    this.ap(19, this.bm);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "br", {
        get: function () {
            var a = this.ag(8);
            return a;
        },
        set: function (a) {
            this.a2(8, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bu", {
        get: function () {
            var a = this.ag(23);
            return a;
        },
        set: function (a) {
            this.a2(23, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bs", {
        get: function () {
            var a = this.ag(75);
            return a;
        },
        set: function (a) {
            this.a2(75, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bt", {
        get: function () {
            var a = this.ag(74);
            return a;
        },
        set: function (a) {
            this.a2(74, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bj", {
        get: function () {
            var a = this.ag(1);
            return EnumUtil.getEnumValue(ControlDisplayDensity_$type, a);
        },
        set: function (a) {
            this.a2(1, enumGetBox(ControlDisplayDensity_$type, a));
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bq", {
        get: function () {
            var a = this.ag(76);
            return a;
        },
        set: function (a) {
            this.a2(76, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bi", {
        get: function () {
            var a = this.ag(77);
            return a;
        },
        set: function (a) {
            this.a2(77, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "by", {
        get: function () {
            var a = this.ag(33);
            return a;
        },
        set: function (a) {
            this.a2(33, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bv", {
        get: function () {
            var a = this.ag(24);
            return a;
        },
        set: function (a) {
            this.a2(24, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bw", {
        get: function () {
            var a = this.ag(78);
            return a;
        },
        set: function (a) {
            this.a2(78, a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NativeUICheckboxList.prototype, "bx", {
        get: function () {
            var a = this.ag(79);
            return a;
        },
        set: function (a) {
            this.a2(79, a);
        },
        enumerable: false,
        configurable: true
    });
    NativeUICheckboxList.$t = markType(NativeUICheckboxList, 'NativeUICheckboxList', NativeUIComponent.$);
    return NativeUICheckboxList;
}(NativeUIComponent));
export { NativeUICheckboxList };
