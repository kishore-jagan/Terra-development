/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { Description } from "./Description";
import { markType } from "./type";
/**
 * @hidden
 */
var ToolActionInfoDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ToolActionInfoDescription, _super);
    function ToolActionInfoDescription() {
        var _this = _super.call(this) || this;
        _this.as = null;
        _this.an = null;
        _this.al = null;
        _this.am = null;
        _this.x = 0;
        _this.y = 0;
        _this.w = 0;
        _this.z = 0;
        _this.ar = null;
        _this.av = null;
        _this.at = null;
        _this.aq = null;
        _this.ap = null;
        _this.s = 0;
        _this.t = 0;
        _this.u = 0;
        _this.r = 0;
        _this.v = 0;
        _this.q = 0;
        _this.l = false;
        _this.m = false;
        _this.au = null;
        _this.ao = null;
        _this.k = false;
        _this.h = null;
        return _this;
    }
    ToolActionInfoDescription.prototype.get_type = function () {
        return "ToolActionInfo";
    };
    Object.defineProperty(ToolActionInfoDescription.prototype, "type", {
        get: function () {
            return this.get_type();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "parentId", {
        get: function () {
            return this.as;
        },
        set: function (a) {
            this.as = a;
            this.g("ParentId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "commandId", {
        get: function () {
            return this.an;
        },
        set: function (a) {
            this.an = a;
            this.g("CommandId");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "commandArgument", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            this.al = a;
            this.g("CommandArgument");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "commandArgumentValueRef", {
        get: function () {
            return this.am;
        },
        set: function (a) {
            this.am = a;
            this.g("CommandArgumentValueRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "paddingLeft", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            this.x = a;
            this.g("PaddingLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "paddingRight", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            this.y = a;
            this.g("PaddingRight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "paddingBottom", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            this.w = a;
            this.g("PaddingBottom");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "paddingTop", {
        get: function () {
            return this.z;
        },
        set: function (a) {
            this.z = a;
            this.g("PaddingTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "name", {
        get: function () {
            return this.ar;
        },
        set: function (a) {
            this.ar = a;
            this.g("Name");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "title", {
        get: function () {
            return this.av;
        },
        set: function (a) {
            this.av = a;
            this.g("Title");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "subtitle", {
        get: function () {
            return this.at;
        },
        set: function (a) {
            this.at = a;
            this.g("Subtitle");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconName", {
        get: function () {
            return this.aq;
        },
        set: function (a) {
            this.aq = a;
            this.g("IconName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconCollectionName", {
        get: function () {
            return this.ap;
        },
        set: function (a) {
            this.ap = a;
            this.g("IconCollectionName");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconViewBoxLeft", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            this.s = a;
            this.g("IconViewBoxLeft");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconViewBoxTop", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            this.t = a;
            this.g("IconViewBoxTop");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconViewBoxWidth", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            this.u = a;
            this.g("IconViewBoxWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconViewBoxHeight", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            this.r = a;
            this.g("IconViewBoxHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconWidth", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            this.v = a;
            this.g("IconWidth");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "iconHeight", {
        get: function () {
            return this.q;
        },
        set: function (a) {
            this.q = a;
            this.g("IconHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "isDisabled", {
        get: function () {
            return this.l;
        },
        set: function (a) {
            this.l = a;
            this.g("IsDisabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "isHighlighted", {
        get: function () {
            return this.m;
        },
        set: function (a) {
            this.m = a;
            this.g("IsHighlighted");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "textColor", {
        get: function () {
            return this.au;
        },
        set: function (a) {
            this.au = a;
            this.g("TextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "disabledTextColor", {
        get: function () {
            return this.ao;
        },
        set: function (a) {
            this.ao = a;
            this.g("DisabledTextColor");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "closeOnExecute", {
        get: function () {
            return this.k;
        },
        set: function (a) {
            this.k = a;
            this.g("CloseOnExecute");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(ToolActionInfoDescription.prototype, "actions", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            this.h = a;
            this.g("Actions");
        },
        enumerable: false,
        configurable: true
    });
    ToolActionInfoDescription.$t = markType(ToolActionInfoDescription, 'ToolActionInfoDescription', Description.$);
    ToolActionInfoDescription.__marshalByValue = true;
    ToolActionInfoDescription.__marshalByValueAlias = "ToolActionInfo";
    return ToolActionInfoDescription;
}(Description));
export { ToolActionInfoDescription };
