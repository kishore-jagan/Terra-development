/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var CategoryChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(CategoryChartDescription, _super);
    function CategoryChartDescription() {
        var _this = _super.call(this) || this;
        _this.x2 = null;
        _this.x7 = null;
        _this.x0 = null;
        _this.xy = null;
        _this.xr = 0;
        _this.xs = 0;
        _this.x3 = null;
        _this.x6 = null;
        _this.xz = null;
        _this.x1 = null;
        _this.v9 = false;
        _this.wa = false;
        _this.x4 = null;
        _this.x5 = null;
        _this.ww = 0;
        _this.wz = 0;
        _this.wv = 0;
        _this.wy = 0;
        _this.wx = 0;
        _this.w0 = 0;
        _this.w6 = 0;
        _this.xx = null;
        _this.wb = false;
        _this.wc = false;
        _this.wt = 0;
        _this.wu = 0;
        _this.wg = false;
        _this.wd = false;
        _this.wf = false;
        _this.x8 = null;
        _this.wh = false;
        _this.xt = 0;
        _this.w8 = 0;
        _this.w7 = 0;
        _this.w9 = 0;
        _this.v3 = null;
        _this.v4 = null;
        _this.we = false;
        _this.w1 = 0;
        _this.w2 = 0;
        _this.w3 = 0;
        _this.w4 = 0;
        _this.w5 = 0;
        _this.v7 = false;
        _this.v8 = false;
        return _this;
    }
    Object.defineProperty(CategoryChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.x2;
        },
        set: function (a) {
            this.x2 = a;
            this.g("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "width", {
        get: function () {
            return this.x7;
        },
        set: function (a) {
            this.x7 = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "height", {
        get: function () {
            return this.x0;
        },
        set: function (a) {
            this.x0 = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "background", {
        get: function () {
            return this.xy;
        },
        set: function (a) {
            this.xy = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartDescription.prototype.get_type = function () {
        return "CategoryChart";
    };
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInDuration", {
        get: function () {
            return this.xr;
        },
        set: function (a) {
            this.xr = a;
            this.g("TransitionInDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionOutDuration", {
        get: function () {
            return this.xs;
        },
        set: function (a) {
            this.xs = a;
            this.g("TransitionOutDuration");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInEasingFunctionRef", {
        get: function () {
            return this.x3;
        },
        set: function (a) {
            this.x3 = a;
            this.g("TransitionInEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionOutEasingFunctionRef", {
        get: function () {
            return this.x6;
        },
        set: function (a) {
            this.x6 = a;
            this.g("TransitionOutEasingFunctionRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "chartType", {
        get: function () {
            return this.xz;
        },
        set: function (a) {
            this.xz = a;
            this.g("ChartType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "markerCollisionAvoidance", {
        get: function () {
            return this.x1;
        },
        set: function (a) {
            this.x1 = a;
            this.g("MarkerCollisionAvoidance");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isSplineShapePartOfRange", {
        get: function () {
            return this.v9;
        },
        set: function (a) {
            this.v9 = a;
            this.g("IsSplineShapePartOfRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isTransitionInEnabled", {
        get: function () {
            return this.wa;
        },
        set: function (a) {
            this.wa = a;
            this.g("IsTransitionInEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInMode", {
        get: function () {
            return this.x4;
        },
        set: function (a) {
            this.x4 = a;
            this.g("TransitionInMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "transitionInSpeedType", {
        get: function () {
            return this.x5;
        },
        set: function (a) {
            this.x5 = a;
            this.g("TransitionInSpeedType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisInterval", {
        get: function () {
            return this.ww;
        },
        set: function (a) {
            this.ww = a;
            this.g("XAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMinorInterval", {
        get: function () {
            return this.wz;
        },
        set: function (a) {
            this.wz = a;
            this.g("XAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisGap", {
        get: function () {
            return this.wv;
        },
        set: function (a) {
            this.wv = a;
            this.g("XAxisGap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMinimumGapSize", {
        get: function () {
            return this.wy;
        },
        set: function (a) {
            this.wy = a;
            this.g("XAxisMinimumGapSize");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisMaximumGap", {
        get: function () {
            return this.wx;
        },
        set: function (a) {
            this.wx = a;
            this.g("XAxisMaximumGap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisOverlap", {
        get: function () {
            return this.w0;
        },
        set: function (a) {
            this.w0 = a;
            this.g("XAxisOverlap");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.w6;
        },
        set: function (a) {
            this.w6 = a;
            this.g("YAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoMarginAndAngleUpdateMode", {
        get: function () {
            return this.xx;
        },
        set: function (a) {
            this.xx = a;
            this.g("AutoMarginAndAngleUpdateMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "shouldAutoExpandMarginForInitialLabels", {
        get: function () {
            return this.wb;
        },
        set: function (a) {
            this.wb = a;
            this.g("ShouldAutoExpandMarginForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "shouldConsiderAutoRotationForInitialLabels", {
        get: function () {
            return this.wc;
        },
        set: function (a) {
            this.wc = a;
            this.g("ShouldConsiderAutoRotationForInitialLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoExpandMarginExtraPadding", {
        get: function () {
            return this.wt;
        },
        set: function (a) {
            this.wt = a;
            this.g("AutoExpandMarginExtraPadding");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "autoExpandMarginMaximumValue", {
        get: function () {
            return this.wu;
        },
        set: function (a) {
            this.wu = a;
            this.g("AutoExpandMarginMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisFavorLabellingScaleEnd", {
        get: function () {
            return this.wg;
        },
        set: function (a) {
            this.wg = a;
            this.g("YAxisFavorLabellingScaleEnd");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.wd;
        },
        set: function (a) {
            this.wd = a;
            this.g("XAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.wf;
        },
        set: function (a) {
            this.wf = a;
            this.g("YAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisAutoRangeBufferMode", {
        get: function () {
            return this.x8;
        },
        set: function (a) {
            this.x8 = a;
            this.g("YAxisAutoRangeBufferMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.wh;
        },
        set: function (a) {
            this.wh = a;
            this.g("YAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.xt;
        },
        set: function (a) {
            this.xt = a;
            this.g("YAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.w8;
        },
        set: function (a) {
            this.w8 = a;
            this.g("YAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.w7;
        },
        set: function (a) {
            this.w7 = a;
            this.g("YAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.w9;
        },
        set: function (a) {
            this.w9 = a;
            this.g("YAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.v3;
        },
        set: function (a) {
            this.v3 = a;
            this.g("NegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.v4;
        },
        set: function (a) {
            this.v4 = a;
            this.g("NegativeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.we;
        },
        set: function (a) {
            this.we = a;
            this.g("YAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomMaximumCategoryRange", {
        get: function () {
            return this.w1;
        },
        set: function (a) {
            this.w1 = a;
            this.g("XAxisZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomMaximumItemSpan", {
        get: function () {
            return this.w2;
        },
        set: function (a) {
            this.w2 = a;
            this.g("XAxisZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToCategoryRange", {
        get: function () {
            return this.w3;
        },
        set: function (a) {
            this.w3 = a;
            this.g("XAxisZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToCategoryStart", {
        get: function () {
            return this.w4;
        },
        set: function (a) {
            this.w4 = a;
            this.g("XAxisZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "xAxisZoomToItemSpan", {
        get: function () {
            return this.w5;
        },
        set: function (a) {
            this.w5 = a;
            this.g("XAxisZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isCategoryHighlightingEnabled", {
        get: function () {
            return this.v7;
        },
        set: function (a) {
            this.v7 = a;
            this.g("IsCategoryHighlightingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(CategoryChartDescription.prototype, "isItemHighlightingEnabled", {
        get: function () {
            return this.v8;
        },
        set: function (a) {
            this.v8 = a;
            this.g("IsItemHighlightingEnabled");
        },
        enumerable: false,
        configurable: true
    });
    CategoryChartDescription.$t = markType(CategoryChartDescription, 'CategoryChartDescription', XYChartDescription.$);
    return CategoryChartDescription;
}(XYChartDescription));
export { CategoryChartDescription };
