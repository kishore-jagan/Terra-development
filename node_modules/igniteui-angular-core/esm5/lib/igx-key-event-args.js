/**
 * Event args for KeyUp and KeyDown events.
*/
var IgxKeyEventArgs = /** @class */ /*@__PURE__*/ (function () {
    function IgxKeyEventArgs() {
    }
    Object.defineProperty(IgxKeyEventArgs.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxKeyEventArgs.prototype.onImplementationCreated = function () {
    };
    IgxKeyEventArgs.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgxKeyEventArgs.prototype, "alt", {
        /**
         * Gets a value indicating whether the ALT key was pressed.
        */
        get: function () {
            return this.i.alt;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxKeyEventArgs.prototype, "ctrl", {
        /**
         * Gets a value indicating whether the CTRL key was pressed.
        */
        get: function () {
            return this.i.ctrl;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxKeyEventArgs.prototype, "keyCode", {
        /**
         * Gets the keyboard code for a KeyDown or KeyUp event.
        */
        get: function () {
            return this.i.keyCode;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxKeyEventArgs.prototype, "modifiers", {
        /**
         * Gets the modifier flags for a KeyDown or KeyUp event.
         * The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.
        */
        get: function () {
            return this.i.modifiers;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxKeyEventArgs.prototype, "shift", {
        /**
         * Gets a value indicating whether the SHIFT key was pressed.
        */
        get: function () {
            return this.i.shift;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxKeyEventArgs.prototype, "defaultPrevented", {
        /**
         * Gets whether the PreventDefault method was called.
        */
        get: function () {
            return this.i.defaultPrevented;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be.
    
    */
    IgxKeyEventArgs.prototype.preventDefault = function () {
        this.i.preventDefault();
    };
    /**
     * Prevent the event from bubbling up.
    
    */
    IgxKeyEventArgs.prototype.stopPropagation = function () {
        this.i.stopPropagation();
    };
    return IgxKeyEventArgs;
}());
export { IgxKeyEventArgs };
