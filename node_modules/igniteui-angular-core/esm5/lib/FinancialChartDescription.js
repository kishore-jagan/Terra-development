/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { XYChartDescription } from "./XYChartDescription";
import { markType } from "./type";
/**
 * @hidden
 */
var FinancialChartDescription = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(FinancialChartDescription, _super);
    function FinancialChartDescription() {
        var _this = _super.call(this) || this;
        _this.yx = null;
        _this.yz = null;
        _this.yw = null;
        _this.yu = null;
        _this.xj = 0;
        _this.wv = false;
        _this.xn = 0;
        _this.w3 = false;
        _this.ym = 0;
        _this.xu = 0;
        _this.xw = 0;
        _this.xv = 0;
        _this.xx = 0;
        _this.yy = null;
        _this.y0 = null;
        _this.xp = 0;
        _this.xs = 0;
        _this.xq = 0;
        _this.xr = 0;
        _this.xt = 0;
        _this.y2 = null;
        _this.wx = false;
        _this.yv = null;
        _this.y1 = null;
        _this.wz = false;
        _this.v7 = null;
        _this.wc = null;
        _this.w1 = false;
        _this.xm = 0;
        _this.w0 = false;
        _this.w2 = false;
        _this.y3 = null;
        _this.v8 = null;
        _this.v9 = null;
        _this.wa = null;
        _this.wb = null;
        _this.wf = null;
        _this.we = null;
        _this.v6 = null;
        _this.v4 = null;
        _this.xo = 0;
        _this.xl = 0;
        _this.xk = 0;
        _this.xi = 0;
        _this.v5 = null;
        _this.yi = 0;
        _this.xh = 0;
        _this.yl = 0;
        _this.yj = 0;
        _this.yh = 0;
        _this.yk = 0;
        _this.wd = null;
        _this.v3 = null;
        _this.wy = false;
        _this.y4 = null;
        _this.xy = 0;
        _this.ww = false;
        _this.xe = new Date();
        _this.xd = new Date();
        _this.wg = null;
        _this.yt = null;
        return _this;
    }
    Object.defineProperty(FinancialChartDescription.prototype, "tooltipTemplateRef", {
        get: function () {
            return this.yx;
        },
        set: function (a) {
            this.yx = a;
            this.g("TooltipTemplateRef");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "width", {
        get: function () {
            return this.yz;
        },
        set: function (a) {
            this.yz = a;
            this.g("Width");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "height", {
        get: function () {
            return this.yw;
        },
        set: function (a) {
            this.yw = a;
            this.g("Height");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "background", {
        get: function () {
            return this.yu;
        },
        set: function (a) {
            this.yu = a;
            this.g("Background");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDescription.prototype.get_type = function () {
        return "FinancialChart";
    };
    Object.defineProperty(FinancialChartDescription.prototype, "leftMargin", {
        get: function () {
            return this.xj;
        },
        set: function (a) {
            this.xj = a;
            this.g("LeftMargin");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isHorizontalZoomEnabled", {
        get: function () {
            return this.wv;
        },
        set: function (a) {
            this.wv = a;
            this.g("IsHorizontalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "toolbarHeight", {
        get: function () {
            return this.xn;
        },
        set: function (a) {
            this.xn = a;
            this.g("ToolbarHeight");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisIsLogarithmic", {
        get: function () {
            return this.w3;
        },
        set: function (a) {
            this.w3 = a;
            this.g("YAxisIsLogarithmic");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLogarithmBase", {
        get: function () {
            return this.ym;
        },
        set: function (a) {
            this.ym = a;
            this.g("YAxisLogarithmBase");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisInterval", {
        get: function () {
            return this.xu;
        },
        set: function (a) {
            this.xu = a;
            this.g("YAxisInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinimumValue", {
        get: function () {
            return this.xw;
        },
        set: function (a) {
            this.xw = a;
            this.g("YAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMaximumValue", {
        get: function () {
            return this.xv;
        },
        set: function (a) {
            this.xv = a;
            this.g("YAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMinorInterval", {
        get: function () {
            return this.xx;
        },
        set: function (a) {
            this.xx = a;
            this.g("YAxisMinorInterval");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeType", {
        get: function () {
            return this.yy;
        },
        set: function (a) {
            this.yy = a;
            this.g("VolumeType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMode", {
        get: function () {
            return this.y0;
        },
        set: function (a) {
            this.y0 = a;
            this.g("XAxisMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomMaximumCategoryRange", {
        get: function () {
            return this.xp;
        },
        set: function (a) {
            this.xp = a;
            this.g("XAxisZoomMaximumCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomToCategoryStart", {
        get: function () {
            return this.xs;
        },
        set: function (a) {
            this.xs = a;
            this.g("XAxisZoomToCategoryStart");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomMaximumItemSpan", {
        get: function () {
            return this.xq;
        },
        set: function (a) {
            this.xq = a;
            this.g("XAxisZoomMaximumItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomToCategoryRange", {
        get: function () {
            return this.xr;
        },
        set: function (a) {
            this.xr = a;
            this.g("XAxisZoomToCategoryRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisZoomToItemSpan", {
        get: function () {
            return this.xt;
        },
        set: function (a) {
            this.xt = a;
            this.g("XAxisZoomToItemSpan");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisMode", {
        get: function () {
            return this.y2;
        },
        set: function (a) {
            this.y2 = a;
            this.g("YAxisMode");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isToolbarVisible", {
        get: function () {
            return this.wx;
        },
        set: function (a) {
            this.wx = a;
            this.g("IsToolbarVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "chartType", {
        get: function () {
            return this.yv;
        },
        set: function (a) {
            this.yv = a;
            this.g("ChartType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisLabelHorizontalAlignment", {
        get: function () {
            return this.y1;
        },
        set: function (a) {
            this.y1 = a;
            this.g("YAxisLabelHorizontalAlignment");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isWindowSyncedToVisibleRange", {
        get: function () {
            return this.wz;
        },
        set: function (a) {
            this.wz = a;
            this.g("IsWindowSyncedToVisibleRange");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorTypes", {
        get: function () {
            return this.v7;
        },
        set: function (a) {
            this.v7 = a;
            this.g("IndicatorTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayTypes", {
        get: function () {
            return this.wc;
        },
        set: function (a) {
            this.wc = a;
            this.g("OverlayTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisAbbreviateLargeNumbers", {
        get: function () {
            return this.w1;
        },
        set: function (a) {
            this.w1 = a;
            this.g("YAxisAbbreviateLargeNumbers");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "resolution", {
        get: function () {
            return this.xm;
        },
        set: function (a) {
            this.xm = a;
            this.g("Resolution");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.w0;
        },
        set: function (a) {
            this.w0 = a;
            this.g("XAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "yAxisEnhancedIntervalPreferMoreCategoryLabels", {
        get: function () {
            return this.w2;
        },
        set: function (a) {
            this.w2 = a;
            this.g("YAxisEnhancedIntervalPreferMoreCategoryLabels");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderType", {
        get: function () {
            return this.y3;
        },
        set: function (a) {
            this.y3 = a;
            this.g("ZoomSliderType");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeBrushes", {
        get: function () {
            return this.v8;
        },
        set: function (a) {
            this.v8 = a;
            this.g("NegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "negativeOutlines", {
        get: function () {
            return this.v9;
        },
        set: function (a) {
            this.v9 = a;
            this.g("NegativeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayBrushes", {
        get: function () {
            return this.wa;
        },
        set: function (a) {
            this.wa = a;
            this.g("OverlayBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayOutlines", {
        get: function () {
            return this.wb;
        },
        set: function (a) {
            this.wb = a;
            this.g("OverlayOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeOutlines", {
        get: function () {
            return this.wf;
        },
        set: function (a) {
            this.wf = a;
            this.g("VolumeOutlines");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeBrushes", {
        get: function () {
            return this.we;
        },
        set: function (a) {
            this.we = a;
            this.g("VolumeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorNegativeBrushes", {
        get: function () {
            return this.v6;
        },
        set: function (a) {
            this.v6 = a;
            this.g("IndicatorNegativeBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorBrushes", {
        get: function () {
            return this.v4;
        },
        set: function (a) {
            this.v4 = a;
            this.g("IndicatorBrushes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "volumeThickness", {
        get: function () {
            return this.xo;
        },
        set: function (a) {
            this.xo = a;
            this.g("VolumeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayThickness", {
        get: function () {
            return this.xl;
        },
        set: function (a) {
            this.xl = a;
            this.g("OverlayThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "overlayMultiplier", {
        get: function () {
            return this.xk;
        },
        set: function (a) {
            this.xk = a;
            this.g("OverlayMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorThickness", {
        get: function () {
            return this.xi;
        },
        set: function (a) {
            this.xi = a;
            this.g("IndicatorThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorDisplayTypes", {
        get: function () {
            return this.v5;
        },
        set: function (a) {
            this.v5 = a;
            this.g("IndicatorDisplayTypes");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorPeriod", {
        get: function () {
            return this.yi;
        },
        set: function (a) {
            this.yi = a;
            this.g("IndicatorPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorMultiplier", {
        get: function () {
            return this.xh;
        },
        set: function (a) {
            this.xh = a;
            this.g("IndicatorMultiplier");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSmoothingPeriod", {
        get: function () {
            return this.yl;
        },
        set: function (a) {
            this.yl = a;
            this.g("IndicatorSmoothingPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorShortPeriod", {
        get: function () {
            return this.yj;
        },
        set: function (a) {
            this.yj = a;
            this.g("IndicatorShortPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorLongPeriod", {
        get: function () {
            return this.yh;
        },
        set: function (a) {
            this.yh = a;
            this.g("IndicatorLongPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "indicatorSignalPeriod", {
        get: function () {
            return this.yk;
        },
        set: function (a) {
            this.yk = a;
            this.g("IndicatorSignalPeriod");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "rangeSelectorOptions", {
        get: function () {
            return this.wd;
        },
        set: function (a) {
            this.wd = a;
            this.g("RangeSelectorOptions");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "customIndicatorNames", {
        get: function () {
            return this.v3;
        },
        set: function (a) {
            this.v3 = a;
            this.g("CustomIndicatorNames");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isVerticalZoomEnabled", {
        get: function () {
            return this.wy;
        },
        set: function (a) {
            this.wy = a;
            this.g("IsVerticalZoomEnabled");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStroke", {
        get: function () {
            return this.y4;
        },
        set: function (a) {
            this.y4 = a;
            this.g("ZoomSliderXAxisMajorStroke");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "zoomSliderXAxisMajorStrokeThickness", {
        get: function () {
            return this.xy;
        },
        set: function (a) {
            this.xy = a;
            this.g("ZoomSliderXAxisMajorStrokeThickness");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "isLegendVisible", {
        get: function () {
            return this.ww;
        },
        set: function (a) {
            this.ww = a;
            this.g("IsLegendVisible");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMinimumValue", {
        get: function () {
            return this.xe;
        },
        set: function (a) {
            this.xe = a;
            this.g("XAxisMinimumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisMaximumValue", {
        get: function () {
            return this.xd;
        },
        set: function (a) {
            this.xd = a;
            this.g("XAxisMaximumValue");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "xAxisBreaks", {
        get: function () {
            return this.wg;
        },
        set: function (a) {
            this.wg = a;
            this.g("XAxisBreaks");
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FinancialChartDescription.prototype, "applyCustomIndicatorsRef", {
        get: function () {
            return this.yt;
        },
        set: function (a) {
            this.yt = a;
            this.g("ApplyCustomIndicatorsRef");
        },
        enumerable: false,
        configurable: true
    });
    FinancialChartDescription.$t = markType(FinancialChartDescription, 'FinancialChartDescription', XYChartDescription.$);
    return FinancialChartDescription;
}(XYChartDescription));
export { FinancialChartDescription };
