import { IgxDataLegendSeriesValueInfo } from "./igx-data-legend-series-value-info";
import { DataLegendSeriesValueType } from "./DataLegendSeriesValueType";
import { DataLegendSeriesContext as DataLegendSeriesContext_internal } from "./DataLegendSeriesContext";
/**
 * Represent info about series values
*/
export declare class IgxDataLegendSeriesContext {
    protected createImplementation(): DataLegendSeriesContext_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    get i(): DataLegendSeriesContext_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets a family of series that the current series belongs to, e.g. Category, Range, Financial, etc.
    */
    get seriesFamily(): string;
    set seriesFamily(v: string);
    findByName(name: string): any;
    /**
     * Creates an instance of DataLegendSeriesContext
    
    */
    getSeriesValueInfo(type: DataLegendSeriesValueType): IgxDataLegendSeriesValueInfo;
    /**
     * Gets value info for the series value type
    
    */
    getSeriesValue(type: DataLegendSeriesValueType): number;
    setSeriesValue(type: DataLegendSeriesValueType, value: number): void;
    setSeriesValueInfo(type: DataLegendSeriesValueType, valueInfo: IgxDataLegendSeriesValueInfo): void;
    /**
     * Gets all values that a series renders at the current data point
     * For example, Open, High, Low, Close for Financial Series
    
    */
    getSeriesValues(): number[];
}
