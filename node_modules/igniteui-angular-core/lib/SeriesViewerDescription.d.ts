import { Description } from "./Description";
import { SeriesDescription } from "./SeriesDescription";
import { PointDescription } from "./PointDescription";
import { RectDescription } from "./RectDescription";
import { ChartSelectionDescription } from "./ChartSelectionDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class SeriesViewerDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private n;
    get series(): SeriesDescription[];
    set series(a: SeriesDescription[]);
    private h;
    get brushes(): string[];
    set brushes(a: string[]);
    private l;
    get outlines(): string[];
    set outlines(a: string[]);
    private j;
    get markerBrushes(): string[];
    set markerBrushes(a: string[]);
    private k;
    get markerOutlines(): string[];
    set markerOutlines(a: string[]);
    private ej;
    get markerAutomaticBehavior(): string;
    set markerAutomaticBehavior(a: string);
    private v;
    get crosshairPoint(): PointDescription;
    set crosshairPoint(a: PointDescription);
    private ei;
    get legendRef(): string;
    set legendRef(a: string);
    private af;
    get animateSeriesWhenAxisRangeChanges(): boolean;
    set animateSeriesWhenAxisRangeChanges(a: boolean);
    private ak;
    get isWindowSyncedToVisibleRange(): boolean;
    set isWindowSyncedToVisibleRange(a: boolean);
    private an;
    get shouldSimulateHoverMoveCrosshairPoint(): boolean;
    set shouldSimulateHoverMoveCrosshairPoint(a: boolean);
    private d8;
    get highlightingMode(): string;
    set highlightingMode(a: string);
    private ex;
    get selectionMode(): string;
    set selectionMode(a: string);
    private ev;
    get selectionBehavior(): string;
    set selectionBehavior(a: string);
    private d4;
    get focusMode(): string;
    set focusMode(a: string);
    private eb;
    get horizontalViewScrollbarMode(): string;
    set horizontalViewScrollbarMode(a: string);
    private fn;
    get verticalViewScrollbarMode(): string;
    set verticalViewScrollbarMode(a: string);
    private ed;
    get horizontalViewScrollbarPosition(): string;
    set horizontalViewScrollbarPosition(a: string);
    private fp;
    get verticalViewScrollbarPosition(): string;
    set verticalViewScrollbarPosition(a: string);
    private ea;
    get horizontalViewScrollbarFill(): string;
    set horizontalViewScrollbarFill(a: string);
    private ec;
    get horizontalViewScrollbarOutline(): string;
    set horizontalViewScrollbarOutline(a: string);
    private bg;
    get horizontalViewScrollbarStrokeThickness(): number;
    set horizontalViewScrollbarStrokeThickness(a: number);
    private bf;
    get horizontalViewScrollbarMaxOpacity(): number;
    set horizontalViewScrollbarMaxOpacity(a: number);
    private bc;
    get horizontalViewScrollbarCornerRadius(): number;
    set horizontalViewScrollbarCornerRadius(a: number);
    private bd;
    get horizontalViewScrollbarHeight(): number;
    set horizontalViewScrollbarHeight(a: number);
    private be;
    get horizontalViewScrollbarInset(): number;
    set horizontalViewScrollbarInset(a: number);
    private bi;
    get horizontalViewScrollbarTrackStartInset(): number;
    set horizontalViewScrollbarTrackStartInset(a: number);
    private bh;
    get horizontalViewScrollbarTrackEndInset(): number;
    set horizontalViewScrollbarTrackEndInset(a: number);
    private ag;
    get horizontalViewScrollbarShouldAddAutoTrackInsets(): boolean;
    set horizontalViewScrollbarShouldAddAutoTrackInsets(a: boolean);
    private fm;
    get verticalViewScrollbarFill(): string;
    set verticalViewScrollbarFill(a: string);
    private fo;
    get verticalViewScrollbarOutline(): string;
    set verticalViewScrollbarOutline(a: string);
    private b1;
    get verticalViewScrollbarStrokeThickness(): number;
    set verticalViewScrollbarStrokeThickness(a: number);
    private b0;
    get verticalViewScrollbarMaxOpacity(): number;
    set verticalViewScrollbarMaxOpacity(a: number);
    private by;
    get verticalViewScrollbarCornerRadius(): number;
    set verticalViewScrollbarCornerRadius(a: number);
    private b4;
    get verticalViewScrollbarWidth(): number;
    set verticalViewScrollbarWidth(a: number);
    private bz;
    get verticalViewScrollbarInset(): number;
    set verticalViewScrollbarInset(a: number);
    private b3;
    get verticalViewScrollbarTrackStartInset(): number;
    set verticalViewScrollbarTrackStartInset(a: number);
    private b2;
    get verticalViewScrollbarTrackEndInset(): number;
    set verticalViewScrollbarTrackEndInset(a: number);
    private aq;
    get verticalViewScrollbarShouldAddAutoTrackInsets(): boolean;
    set verticalViewScrollbarShouldAddAutoTrackInsets(a: boolean);
    private d7;
    get highlightingBehavior(): string;
    set highlightingBehavior(a: string);
    private ef;
    get legendHighlightingMode(): string;
    set legendHighlightingMode(a: string);
    private eh;
    get legendItemBadgeShape(): string;
    set legendItemBadgeShape(a: string);
    private eg;
    get legendItemBadgeMode(): string;
    set legendItemBadgeMode(a: string);
    private y;
    get effectiveViewport(): RectDescription;
    set effectiveViewport(a: RectDescription);
    private aa;
    get windowRect(): RectDescription;
    set windowRect(a: RectDescription);
    private ap;
    get useTiledZooming(): boolean;
    set useTiledZooming(a: boolean);
    private al;
    get preferHigherResolutionTiles(): boolean;
    set preferHigherResolutionTiles(a: boolean);
    private dn;
    get zoomTileCacheSize(): number;
    set zoomTileCacheSize(a: number);
    private dk;
    get highlightingTransitionDuration(): number;
    set highlightingTransitionDuration(a: number);
    private dm;
    get selectionTransitionDuration(): number;
    set selectionTransitionDuration(a: number);
    private dj;
    get focusTransitionDuration(): number;
    set focusTransitionDuration(a: number);
    private dl;
    get scrollbarsAnimationDuration(): number;
    set scrollbarsAnimationDuration(a: number);
    private ai;
    get isPagePanningAllowed(): boolean;
    set isPagePanningAllowed(a: boolean);
    private dy;
    get contentHitTestMode(): string;
    set contentHitTestMode(a: string);
    private du;
    get actualContentHitTestMode(): string;
    set actualContentHitTestMode(a: string);
    private aj;
    get isSurfaceInteractionDisabled(): boolean;
    set isSurfaceInteractionDisabled(a: boolean);
    private ft;
    get windowResponse(): string;
    set windowResponse(a: string);
    private b8;
    get windowRectMinWidth(): number;
    set windowRectMinWidth(a: number);
    private b7;
    get windowRectMinHeight(): number;
    set windowRectMinHeight(a: number);
    private a8;
    get actualWindowRectMinWidth(): number;
    set actualWindowRectMinWidth(a: number);
    private a7;
    get actualWindowRectMinHeight(): number;
    set actualWindowRectMinHeight(a: number);
    private ca;
    get windowSizeMinWidth(): number;
    set windowSizeMinWidth(a: number);
    private b9;
    get windowSizeMinHeight(): number;
    set windowSizeMinHeight(a: number);
    private fd;
    get syncChannel(): string;
    set syncChannel(a: string);
    private dz;
    get crosshairVisibility(): string;
    set crosshairVisibility(a: string);
    private d9;
    get horizontalCrosshairBrush(): string;
    set horizontalCrosshairBrush(a: string);
    private fl;
    get verticalCrosshairBrush(): string;
    set verticalCrosshairBrush(a: string);
    private fu;
    get zoomCoercionMode(): string;
    set zoomCoercionMode(a: string);
    private el;
    get plotAreaBackground(): string;
    set plotAreaBackground(a: string);
    private d0;
    get defaultInteraction(): string;
    set defaultInteraction(a: string);
    private et;
    get rightButtonDefaultInteraction(): string;
    set rightButtonDefaultInteraction(a: string);
    private d1;
    get dragModifier(): string;
    set dragModifier(a: string);
    private ek;
    get panModifier(): string;
    set panModifier(a: string);
    private z;
    get previewRect(): RectDescription;
    set previewRect(a: RectDescription);
    private d6;
    get highlightedValuesDisplayMode(): string;
    set highlightedValuesDisplayMode(a: string);
    private m;
    get selectedSeriesItems(): ChartSelectionDescription[];
    set selectedSeriesItems(a: ChartSelectionDescription[]);
    private i;
    get focusedSeriesItems(): ChartSelectionDescription[];
    set focusedSeriesItems(a: ChartSelectionDescription[]);
    private b5;
    get windowPositionHorizontal(): number;
    set windowPositionHorizontal(a: number);
    private b6;
    get windowPositionVertical(): number;
    set windowPositionVertical(a: number);
    private ew;
    get selectionBrush(): string;
    set selectionBrush(a: string);
    private d2;
    get focusBrush(): string;
    set focusBrush(a: string);
    private dx;
    get chartTitle(): string;
    set chartTitle(a: string);
    private fi;
    get titleHorizontalAlignment(): string;
    set titleHorizontalAlignment(a: string);
    private fa;
    get subtitleHorizontalAlignment(): string;
    set subtitleHorizontalAlignment(a: string);
    private fk;
    get titleTextStyle(): string;
    set titleTextStyle(a: string);
    private fc;
    get subtitleTextStyle(): string;
    set subtitleTextStyle(a: string);
    private fj;
    get titleTextColor(): string;
    set titleTextColor(a: string);
    private fb;
    get subtitleTextColor(): string;
    set subtitleTextColor(a: string);
    private bw;
    get titleTopMargin(): number;
    set titleTopMargin(a: number);
    private bu;
    get titleLeftMargin(): number;
    set titleLeftMargin(a: number);
    private bv;
    get titleRightMargin(): number;
    set titleRightMargin(a: number);
    private bs;
    get titleBottomMargin(): number;
    set titleBottomMargin(a: number);
    private br;
    get subtitleTopMargin(): number;
    set subtitleTopMargin(a: number);
    private bp;
    get subtitleLeftMargin(): number;
    set subtitleLeftMargin(a: number);
    private bq;
    get subtitleRightMargin(): number;
    set subtitleRightMargin(a: number);
    private bn;
    get subtitleBottomMargin(): number;
    set subtitleBottomMargin(a: number);
    private e6;
    get subtitle(): string;
    set subtitle(a: string);
    private bx;
    get topMargin(): number;
    set topMargin(a: number);
    private bk;
    get leftMargin(): number;
    set leftMargin(a: number);
    private bm;
    get rightMargin(): number;
    set rightMargin(a: number);
    private bb;
    get bottomMargin(): number;
    set bottomMargin(a: number);
    private ba;
    get autoMarginWidth(): number;
    set autoMarginWidth(a: number);
    private a9;
    get autoMarginHeight(): number;
    set autoMarginHeight(a: number);
    private ah;
    get isAntiAliasingEnabledDuringInteraction(): boolean;
    set isAntiAliasingEnabledDuringInteraction(a: boolean);
    private bl;
    get pixelScalingRatio(): number;
    set pixelScalingRatio(a: number);
    private bj;
    get interactionPixelScalingRatio(): number;
    set interactionPixelScalingRatio(a: number);
    private a4;
    get actualPixelScalingRatio(): number;
    set actualPixelScalingRatio(a: number);
    private a3;
    get actualInteractionPixelScalingRatio(): number;
    set actualInteractionPixelScalingRatio(a: number);
    private am;
    get shouldPanOnMaximumZoom(): boolean;
    set shouldPanOnMaximumZoom(a: boolean);
    private x;
    get actualWindowRect(): RectDescription;
    set actualWindowRect(a: RectDescription);
    private a5;
    get actualWindowPositionHorizontal(): number;
    set actualWindowPositionHorizontal(a: number);
    private a6;
    get actualWindowPositionVertical(): number;
    set actualWindowPositionVertical(a: number);
    private ep;
    get plotAreaMouseLeftButtonDownRef(): string;
    set plotAreaMouseLeftButtonDownRef(a: string);
    private eq;
    get plotAreaMouseLeftButtonUpRef(): string;
    set plotAreaMouseLeftButtonUpRef(a: string);
    private em;
    get plotAreaClickedRef(): string;
    set plotAreaClickedRef(a: string);
    private en;
    get plotAreaMouseEnterRef(): string;
    set plotAreaMouseEnterRef(a: string);
    private eo;
    get plotAreaMouseLeaveRef(): string;
    set plotAreaMouseLeaveRef(a: string);
    private er;
    get plotAreaMouseOverRef(): string;
    set plotAreaMouseOverRef(a: string);
    private ez;
    get seriesCursorMouseMoveRef(): string;
    set seriesCursorMouseMoveRef(a: string);
    private e2;
    get seriesMouseLeftButtonDownRef(): string;
    set seriesMouseLeftButtonDownRef(a: string);
    private e3;
    get seriesMouseLeftButtonUpRef(): string;
    set seriesMouseLeftButtonUpRef(a: string);
    private ey;
    get seriesClickRef(): string;
    set seriesClickRef(a: string);
    private e4;
    get seriesMouseMoveRef(): string;
    set seriesMouseMoveRef(a: string);
    private e0;
    get seriesMouseEnterRef(): string;
    set seriesMouseEnterRef(a: string);
    private e1;
    get seriesMouseLeaveRef(): string;
    set seriesMouseLeaveRef(a: string);
    private fr;
    get viewerManipulationStartingRef(): string;
    set viewerManipulationStartingRef(a: string);
    private fq;
    get viewerManipulationEndingRef(): string;
    set viewerManipulationEndingRef(a: string);
    private fs;
    get windowRectChangedRef(): string;
    set windowRectChangedRef(a: string);
    private e5;
    get sizeChangedRef(): string;
    set sizeChangedRef(a: string);
    private dv;
    get actualWindowRectChangedRef(): string;
    set actualWindowRectChangedRef(a: string);
    private d5;
    get gridAreaRectChangedRef(): string;
    set gridAreaRectChangedRef(a: string);
    private eu;
    get selectedSeriesItemsChangedRef(): string;
    set selectedSeriesItemsChangedRef(a: string);
    private d3;
    get focusedSeriesItemsChangedRef(): string;
    set focusedSeriesItemsChangedRef(a: string);
    private es;
    get refreshCompletedRef(): string;
    set refreshCompletedRef(a: string);
    private ee;
    get imageCapturedRef(): string;
    set imageCapturedRef(a: string);
    private dw;
    get background(): string;
    set background(a: string);
    private ff;
    get titleFontFamily(): string;
    set titleFontFamily(a: string);
    private bt;
    get titleFontSize(): number;
    set titleFontSize(a: number);
    private fh;
    get titleFontWeight(): string;
    set titleFontWeight(a: string);
    private fg;
    get titleFontStyle(): string;
    set titleFontStyle(a: string);
    private e7;
    get subtitleFontFamily(): string;
    set subtitleFontFamily(a: string);
    private bo;
    get subtitleFontSize(): number;
    set subtitleFontSize(a: number);
    private e9;
    get subtitleFontWeight(): string;
    set subtitleFontWeight(a: string);
    private e8;
    get subtitleFontStyle(): string;
    set subtitleFontStyle(a: string);
    private ao;
    get synchronizeHorizontally(): boolean;
    set synchronizeHorizontally(a: boolean);
    private fe;
    get synchronizeVertically(): string;
    set synchronizeVertically(a: string);
}
