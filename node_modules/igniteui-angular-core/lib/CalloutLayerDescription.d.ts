import { AnnotationLayerDescription } from "./AnnotationLayerDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare class CalloutLayerDescription extends AnnotationLayerDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private hv;
    get labelMemberPath(): string;
    set labelMemberPath(a: string);
    private hz;
    get xMemberPath(): string;
    set xMemberPath(a: string);
    private h0;
    get yMemberPath(): string;
    set yMemberPath(a: string);
    private ht;
    get keyMemberPath(): string;
    set keyMemberPath(a: string);
    private gc;
    get isCalloutOffsettingEnabled(): boolean;
    set isCalloutOffsettingEnabled(a: boolean);
    private hu;
    get labelFormat(): string;
    set labelFormat(a: string);
    private f8;
    get labelFormatSpecifiers(): FormatSpecifierDescription[];
    set labelFormatSpecifiers(a: FormatSpecifierDescription[]);
    private hr;
    get contentMemberPath(): string;
    set contentMemberPath(a: string);
    private hw;
    get targetSeriesName(): string;
    set targetSeriesName(a: string);
    private hx;
    get targetSeriesRef(): string;
    set targetSeriesRef(a: string);
    private hq;
    get collisionChannel(): string;
    set collisionChannel(a: string);
    private f7;
    get allowedPositions(): string[];
    set allowedPositions(a: string[]);
    private gb;
    get isAutoCalloutBehaviorEnabled(): boolean;
    set isAutoCalloutBehaviorEnabled(a: boolean);
    private gg;
    get useInterpolatedValueForAutoCalloutLabels(): boolean;
    set useInterpolatedValueForAutoCalloutLabels(a: boolean);
    private gj;
    get useSeriesColorForOutline(): boolean;
    set useSeriesColorForOutline(a: boolean);
    private gf;
    get useAutoContrastingLabelColors(): boolean;
    set useAutoContrastingLabelColors(a: boolean);
    private gh;
    get useItemColorForFill(): boolean;
    set useItemColorForFill(a: boolean);
    private gi;
    get useItemColorForOutline(): boolean;
    set useItemColorForOutline(a: boolean);
    private gk;
    get useValueForAutoCalloutLabels(): boolean;
    set useValueForAutoCalloutLabels(a: boolean);
    private hs;
    get highlightedValueLabelMode(): string;
    set highlightedValueLabelMode(a: string);
    private hd;
    get autoCalloutVisibilityMode(): string;
    set autoCalloutVisibilityMode(a: string);
    private gv;
    get calloutCornerRadius(): number;
    set calloutCornerRadius(a: number);
    private ge;
    get isCustomCalloutStyleEnabled(): boolean;
    set isCustomCalloutStyleEnabled(a: boolean);
    private gd;
    get isCustomCalloutRenderStyleEnabled(): boolean;
    set isCustomCalloutRenderStyleEnabled(a: boolean);
    private g9;
    get autoCalloutLabelPrecision(): number;
    set autoCalloutLabelPrecision(a: number);
    private hp;
    get calloutTextColor(): string;
    set calloutTextColor(a: string);
    private hk;
    get calloutLightTextColor(): string;
    set calloutLightTextColor(a: string);
    private hh;
    get calloutDarkTextColor(): string;
    set calloutDarkTextColor(a: string);
    private he;
    get calloutBackground(): string;
    set calloutBackground(a: string);
    private ha;
    get calloutInterpolatedValuePrecision(): number;
    set calloutInterpolatedValuePrecision(a: number);
    private hl;
    get calloutOutline(): string;
    set calloutOutline(a: string);
    private hj;
    get calloutLeaderBrush(): string;
    set calloutLeaderBrush(a: string);
    private gx;
    get calloutPaddingLeft(): number;
    set calloutPaddingLeft(a: number);
    private gz;
    get calloutPaddingTop(): number;
    set calloutPaddingTop(a: number);
    private gy;
    get calloutPaddingRight(): number;
    set calloutPaddingRight(a: number);
    private gw;
    get calloutPaddingBottom(): number;
    set calloutPaddingBottom(a: number);
    private hf;
    get calloutCollisionMode(): string;
    set calloutCollisionMode(a: string);
    private g0;
    get calloutPositionPadding(): number;
    set calloutPositionPadding(a: number);
    private g1;
    get calloutStrokeThickness(): number;
    set calloutStrokeThickness(a: number);
    private hy;
    get textStyle(): string;
    set textStyle(a: string);
    private ho;
    get calloutStyleUpdatingRef(): string;
    set calloutStyleUpdatingRef(a: string);
    private hm;
    get calloutRenderStyleUpdatingRef(): string;
    set calloutRenderStyleUpdatingRef(a: string);
    private hg;
    get calloutContentUpdatingRef(): string;
    set calloutContentUpdatingRef(a: string);
    private hi;
    get calloutLabelUpdatingRef(): string;
    set calloutLabelUpdatingRef(a: string);
    private hn;
    get calloutSeriesSelectingRef(): string;
    set calloutSeriesSelectingRef(a: string);
}
