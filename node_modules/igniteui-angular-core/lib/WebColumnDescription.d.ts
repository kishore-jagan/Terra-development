import { Description } from "./Description";
import { Type } from "./type";
import { WebFilteringOperandDescription } from "./WebFilteringOperandDescription";
import { WebSortingStrategyDescription } from "./WebSortingStrategyDescription";
import { WebColumnPipeArgsDescription } from "./WebColumnPipeArgsDescription";
/**
 * @hidden
 */
export declare class WebColumnDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    private static __canMarshalByValue;
    private static __marshalByValueAlias;
    constructor();
    private bi;
    get field(): string;
    set field(a: string);
    private bl;
    get header(): string;
    set header(a: string);
    private bw;
    get title(): string;
    set title(a: string);
    private ac;
    get sortable(): boolean;
    set sortable(a: boolean);
    private aa;
    get selectable(): boolean;
    set selectable(a: boolean);
    private u;
    get groupable(): boolean;
    set groupable(a: boolean);
    private r;
    get editable(): boolean;
    set editable(a: boolean);
    private s;
    get filterable(): boolean;
    set filterable(a: boolean);
    private y;
    get resizable(): boolean;
    set resizable(a: boolean);
    private o;
    get autosizeHeader(): boolean;
    set autosizeHeader(a: boolean);
    private v;
    get hasSummary(): boolean;
    set hasSummary(a: boolean);
    private w;
    get hidden(): boolean;
    set hidden(a: boolean);
    private ab;
    get selected(): boolean;
    set selected(a: boolean);
    private p;
    get disableHiding(): boolean;
    set disableHiding(a: boolean);
    private q;
    get disablePinning(): boolean;
    set disablePinning(a: boolean);
    private bx;
    get width(): string;
    set width(a: string);
    private bq;
    get maxWidth(): string;
    set maxWidth(a: string);
    private bm;
    get headerClasses(): string;
    set headerClasses(a: string);
    private a6;
    get headerStyles(): any;
    set headerStyles(a: any);
    private bn;
    get headerGroupClasses(): string;
    set headerGroupClasses(a: string);
    private a5;
    get headerGroupStyles(): any;
    set headerGroupStyles(a: any);
    private be;
    get cellClassesRef(): string;
    set cellClassesRef(a: string);
    private bf;
    get cellStylesRef(): string;
    set cellStylesRef(a: string);
    private bk;
    get formatterRef(): string;
    set formatterRef(a: string);
    private bu;
    get summaryFormatterRef(): string;
    set summaryFormatterRef(a: string);
    private t;
    get filteringIgnoreCase(): boolean;
    set filteringIgnoreCase(a: boolean);
    private ad;
    get sortingIgnoreCase(): boolean;
    set sortingIgnoreCase(a: boolean);
    private z;
    get searchable(): boolean;
    set searchable(a: boolean);
    private bg;
    get dataType(): string;
    set dataType(a: string);
    private ay;
    get rowEnd(): number;
    set rowEnd(a: number);
    private aw;
    get colEnd(): number;
    set colEnd(a: number);
    private az;
    get rowStart(): number;
    set rowStart(a: number);
    private ax;
    get colStart(): number;
    set colStart(a: number);
    private a4;
    get additionalTemplateContext(): any;
    set additionalTemplateContext(a: any);
    private br;
    get minWidth(): string;
    set minWidth(a: string);
    private x;
    get pinned(): boolean;
    set pinned(a: boolean);
    private bt;
    get summariesRef(): string;
    set summariesRef(a: string);
    private j;
    get filters(): WebFilteringOperandDescription;
    set filters(a: WebFilteringOperandDescription);
    private l;
    get sortStrategy(): WebSortingStrategyDescription;
    set sortStrategy(a: WebSortingStrategyDescription);
    private bv;
    get summaryTemplateRef(): string;
    set summaryTemplateRef(a: string);
    private bd;
    get bodyTemplateRef(): string;
    set bodyTemplateRef(a: string);
    private bo;
    get headerTemplateRef(): string;
    set headerTemplateRef(a: string);
    private bp;
    get inlineEditorTemplateRef(): string;
    set inlineEditorTemplateRef(a: string);
    private bh;
    get errorTemplateRef(): string;
    set errorTemplateRef(a: string);
    private bj;
    get filterCellTemplateRef(): string;
    set filterCellTemplateRef(a: string);
    private ae;
    get visibleWhenCollapsed(): boolean;
    set visibleWhenCollapsed(a: boolean);
    private h;
    get pipeArgs(): WebColumnPipeArgsDescription;
    set pipeArgs(a: WebColumnPipeArgsDescription);
    private a7;
    get parentColumn(): any;
    set parentColumn(a: any);
    private bs;
    get name(): string;
    set name(a: string);
}
