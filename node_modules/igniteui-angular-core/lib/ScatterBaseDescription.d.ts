import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class ScatterBaseDescription extends MarkerSeriesDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private gd;
    get xAxisRef(): string;
    set xAxisRef(a: string);
    private gh;
    get yAxisRef(): string;
    set yAxisRef(a: string);
    private gg;
    get xMemberPath(): string;
    set xMemberPath(a: string);
    private gk;
    get yMemberPath(): string;
    set yMemberPath(a: string);
    private f7;
    get highlightedXMemberPath(): string;
    set highlightedXMemberPath(a: string);
    private f8;
    get highlightedYMemberPath(): string;
    set highlightedYMemberPath(a: string);
    private ge;
    get xMemberAsLegendLabel(): string;
    set xMemberAsLegendLabel(a: string);
    private gi;
    get yMemberAsLegendLabel(): string;
    set yMemberAsLegendLabel(a: string);
    private gf;
    get xMemberAsLegendUnit(): string;
    set xMemberAsLegendUnit(a: string);
    private gj;
    get yMemberAsLegendUnit(): string;
    set yMemberAsLegendUnit(a: string);
    private gc;
    get trendLineType(): string;
    set trendLineType(a: string);
    private gb;
    get trendLineBrush(): string;
    set trendLineBrush(a: string);
    private f4;
    get actualTrendLineBrush(): string;
    set actualTrendLineBrush(a: string);
    private ft;
    get trendLineThickness(): number;
    set trendLineThickness(a: number);
    private fn;
    get trendLineDashArray(): number[];
    set trendLineDashArray(a: number[]);
    private fx;
    get trendLinePeriod(): number;
    set trendLinePeriod(a: number);
    private ga;
    get markerCollisionAvoidance(): string;
    set markerCollisionAvoidance(a: string);
    private fy;
    get trendLineZIndex(): number;
    set trendLineZIndex(a: number);
    private fw;
    get maximumMarkers(): number;
    set maximumMarkers(a: number);
    private f9;
    get itemSearchMode(): string;
    set itemSearchMode(a: string);
    private fv;
    get itemSearchThreshold(): number;
    set itemSearchThreshold(a: number);
    private f3;
    get actualItemSearchMode(): string;
    set actualItemSearchMode(a: string);
    private fq;
    get isCustomScatterStyleAllowed(): boolean;
    set isCustomScatterStyleAllowed(a: boolean);
    private fp;
    get isCustomScatterMarkerStyleAllowed(): boolean;
    set isCustomScatterMarkerStyleAllowed(a: boolean);
    private f6;
    get assigningScatterStyleRef(): string;
    set assigningScatterStyleRef(a: string);
    private f5;
    get assigningScatterMarkerStyleRef(): string;
    set assigningScatterMarkerStyleRef(a: string);
}
