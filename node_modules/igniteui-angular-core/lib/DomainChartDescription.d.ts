import { Description } from "./Description";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { ChartSortDescriptionDescription } from "./ChartSortDescriptionDescription";
import { FilterExpressionDescription } from "./FilterExpressionDescription";
import { ChartSummaryDescriptionDescription } from "./ChartSummaryDescriptionDescription";
import { ChartSelectionDescription } from "./ChartSelectionDescription";
import { BaseDataSourceDescription } from "./BaseDataSourceDescription";
import { RectDescription } from "./RectDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class DomainChartDescription extends Description {
    static $t: Type;
    protected get_type(): string;
    get type(): string;
    constructor();
    private fe;
    get pixelScalingRatio(): number;
    set pixelScalingRatio(a: number);
    private fr;
    get titleLeftMargin(): number;
    set titleLeftMargin(a: number);
    private fs;
    get titleRightMargin(): number;
    set titleRightMargin(a: number);
    private ft;
    get titleTopMargin(): number;
    set titleTopMargin(a: number);
    private fq;
    get titleBottomMargin(): number;
    set titleBottomMargin(a: number);
    private fm;
    get subtitleLeftMargin(): number;
    set subtitleLeftMargin(a: number);
    private fo;
    get subtitleTopMargin(): number;
    set subtitleTopMargin(a: number);
    private fn;
    get subtitleRightMargin(): number;
    set subtitleRightMargin(a: number);
    private fl;
    get subtitleBottomMargin(): number;
    set subtitleBottomMargin(a: number);
    private ni;
    get subtitleTextColor(): string;
    set subtitleTextColor(a: string);
    private nl;
    get titleTextColor(): string;
    set titleTextColor(a: string);
    private fb;
    get leftMargin(): number;
    set leftMargin(a: number);
    private fu;
    get topMargin(): number;
    set topMargin(a: number);
    private fk;
    get rightMargin(): number;
    set rightMargin(a: number);
    private da;
    get bottomMargin(): number;
    set bottomMargin(a: number);
    private ji;
    get transitionDuration(): number;
    set transitionDuration(a: number);
    private no;
    get transitionEasingFunctionRef(): string;
    set transitionEasingFunctionRef(a: string);
    private jf;
    get highlightingTransitionDuration(): number;
    set highlightingTransitionDuration(a: number);
    private jh;
    get selectionTransitionDuration(): number;
    set selectionTransitionDuration(a: number);
    private je;
    get focusTransitionDuration(): number;
    set focusTransitionDuration(a: number);
    private nj;
    get subtitleTextStyle(): string;
    set subtitleTextStyle(a: string);
    private nm;
    get titleTextStyle(): string;
    set titleTextStyle(a: string);
    private ki;
    get dataToolTipGroupingMode(): string;
    set dataToolTipGroupingMode(a: string);
    private d7;
    get dataToolTipPositionOffsetX(): number;
    set dataToolTipPositionOffsetX(a: number);
    private d8;
    get dataToolTipPositionOffsetY(): number;
    set dataToolTipPositionOffsetY(a: number);
    private dh;
    get dataToolTipDefaultPositionOffsetX(): number;
    set dataToolTipDefaultPositionOffsetX(a: number);
    private di;
    get dataToolTipDefaultPositionOffsetY(): number;
    set dataToolTipDefaultPositionOffsetY(a: number);
    private kg;
    get dataToolTipGroupedPositionModeX(): string;
    set dataToolTipGroupedPositionModeX(a: string);
    private kh;
    get dataToolTipGroupedPositionModeY(): string;
    set dataToolTipGroupedPositionModeY(a: string);
    private b3;
    get dataToolTipShouldUpdateWhenSeriesDataChanges(): boolean;
    set dataToolTipShouldUpdateWhenSeriesDataChanges(a: boolean);
    private p;
    get dataToolTipIncludedSeries(): string[];
    set dataToolTipIncludedSeries(a: string[]);
    private m;
    get dataToolTipExcludedSeries(): string[];
    set dataToolTipExcludedSeries(a: string[]);
    private o;
    get dataToolTipIncludedColumns(): string[];
    set dataToolTipIncludedColumns(a: string[]);
    private l;
    get dataToolTipExcludedColumns(): string[];
    set dataToolTipExcludedColumns(a: string[]);
    private lv;
    get dataToolTipValueFormatAbbreviation(): string;
    set dataToolTipValueFormatAbbreviation(a: string);
    private jb;
    get dataToolTipValueFormatMaxFractions(): number;
    set dataToolTipValueFormatMaxFractions(a: number);
    private jc;
    get dataToolTipValueFormatMinFractions(): number;
    set dataToolTipValueFormatMinFractions(a: number);
    private lx;
    get dataToolTipValueFormatMode(): string;
    set dataToolTipValueFormatMode(a: string);
    private lw;
    get dataToolTipValueFormatCulture(): string;
    set dataToolTipValueFormatCulture(a: string);
    private b4;
    get dataToolTipValueFormatUseGrouping(): boolean;
    set dataToolTipValueFormatUseGrouping(a: boolean);
    private ly;
    get dataToolTipValueFormatString(): string;
    set dataToolTipValueFormatString(a: string);
    private q;
    get dataToolTipValueFormatSpecifiers(): FormatSpecifierDescription[];
    set dataToolTipValueFormatSpecifiers(a: FormatSpecifierDescription[]);
    private ev;
    get dataToolTipValueRowMarginBottom(): number;
    set dataToolTipValueRowMarginBottom(a: number);
    private ew;
    get dataToolTipValueRowMarginLeft(): number;
    set dataToolTipValueRowMarginLeft(a: number);
    private ex;
    get dataToolTipValueRowMarginRight(): number;
    set dataToolTipValueRowMarginRight(a: number);
    private ey;
    get dataToolTipValueRowMarginTop(): number;
    set dataToolTipValueRowMarginTop(a: number);
    private b5;
    get dataToolTipValueRowVisible(): boolean;
    set dataToolTipValueRowVisible(a: boolean);
    private l3;
    get dataToolTipValueTextWhenMissingData(): string;
    set dataToolTipValueTextWhenMissingData(a: string);
    private b6;
    get dataToolTipValueTextUseSeriesColors(): boolean;
    set dataToolTipValueTextUseSeriesColors(a: boolean);
    private e0;
    get dataToolTipValueTextMarginBottom(): number;
    set dataToolTipValueTextMarginBottom(a: number);
    private e1;
    get dataToolTipValueTextMarginLeft(): number;
    set dataToolTipValueTextMarginLeft(a: number);
    private e2;
    get dataToolTipValueTextMarginRight(): number;
    set dataToolTipValueTextMarginRight(a: number);
    private e3;
    get dataToolTipValueTextMarginTop(): number;
    set dataToolTipValueTextMarginTop(a: number);
    private lz;
    get dataToolTipValueTextColor(): string;
    set dataToolTipValueTextColor(a: string);
    private l0;
    get dataToolTipValueTextFontFamily(): string;
    set dataToolTipValueTextFontFamily(a: string);
    private ez;
    get dataToolTipValueTextFontSize(): number;
    set dataToolTipValueTextFontSize(a: number);
    private l1;
    get dataToolTipValueTextFontStyle(): string;
    set dataToolTipValueTextFontStyle(a: string);
    private l2;
    get dataToolTipValueTextFontWeight(): string;
    set dataToolTipValueTextFontWeight(a: string);
    private kp;
    get dataToolTipHeaderFormatString(): string;
    set dataToolTipHeaderFormatString(a: string);
    private n;
    get dataToolTipHeaderFormatSpecifiers(): FormatSpecifierDescription[];
    set dataToolTipHeaderFormatSpecifiers(a: FormatSpecifierDescription[]);
    private kn;
    get dataToolTipHeaderFormatCulture(): string;
    set dataToolTipHeaderFormatCulture(a: string);
    private ko;
    get dataToolTipHeaderFormatDate(): string;
    set dataToolTipHeaderFormatDate(a: string);
    private kq;
    get dataToolTipHeaderFormatTime(): string;
    set dataToolTipHeaderFormatTime(a: string);
    private kr;
    get dataToolTipHeaderText(): string;
    set dataToolTipHeaderText(a: string);
    private ks;
    get dataToolTipHeaderTextColor(): string;
    set dataToolTipHeaderTextColor(a: string);
    private dy;
    get dataToolTipHeaderTextMarginBottom(): number;
    set dataToolTipHeaderTextMarginBottom(a: number);
    private dz;
    get dataToolTipHeaderTextMarginLeft(): number;
    set dataToolTipHeaderTextMarginLeft(a: number);
    private d0;
    get dataToolTipHeaderTextMarginRight(): number;
    set dataToolTipHeaderTextMarginRight(a: number);
    private d1;
    get dataToolTipHeaderTextMarginTop(): number;
    set dataToolTipHeaderTextMarginTop(a: number);
    private dt;
    get dataToolTipHeaderRowMarginBottom(): number;
    set dataToolTipHeaderRowMarginBottom(a: number);
    private du;
    get dataToolTipHeaderRowMarginLeft(): number;
    set dataToolTipHeaderRowMarginLeft(a: number);
    private dv;
    get dataToolTipHeaderRowMarginRight(): number;
    set dataToolTipHeaderRowMarginRight(a: number);
    private dw;
    get dataToolTipHeaderRowMarginTop(): number;
    set dataToolTipHeaderRowMarginTop(a: number);
    private b2;
    get dataToolTipHeaderRowVisible(): boolean;
    set dataToolTipHeaderRowVisible(a: boolean);
    private kt;
    get dataToolTipHeaderTextFontFamily(): string;
    set dataToolTipHeaderTextFontFamily(a: string);
    private dx;
    get dataToolTipHeaderTextFontSize(): number;
    set dataToolTipHeaderTextFontSize(a: number);
    private ku;
    get dataToolTipHeaderTextFontStyle(): string;
    set dataToolTipHeaderTextFontStyle(a: string);
    private kv;
    get dataToolTipHeaderTextFontWeight(): string;
    set dataToolTipHeaderTextFontWeight(a: string);
    private kj;
    get dataToolTipGroupTextColor(): string;
    set dataToolTipGroupTextColor(a: string);
    private dp;
    get dataToolTipGroupTextMarginBottom(): number;
    set dataToolTipGroupTextMarginBottom(a: number);
    private dq;
    get dataToolTipGroupTextMarginLeft(): number;
    set dataToolTipGroupTextMarginLeft(a: number);
    private dr;
    get dataToolTipGroupTextMarginRight(): number;
    set dataToolTipGroupTextMarginRight(a: number);
    private ds;
    get dataToolTipGroupTextMarginTop(): number;
    set dataToolTipGroupTextMarginTop(a: number);
    private dj;
    get dataToolTipGroupRowMarginBottom(): number;
    set dataToolTipGroupRowMarginBottom(a: number);
    private dk;
    get dataToolTipGroupRowMarginLeft(): number;
    set dataToolTipGroupRowMarginLeft(a: number);
    private dl;
    get dataToolTipGroupRowMarginRight(): number;
    set dataToolTipGroupRowMarginRight(a: number);
    private dm;
    get dataToolTipGroupRowMarginTop(): number;
    set dataToolTipGroupRowMarginTop(a: number);
    private b1;
    get dataToolTipGroupRowVisible(): boolean;
    set dataToolTipGroupRowVisible(a: boolean);
    private kk;
    get dataToolTipGroupTextFontFamily(): string;
    set dataToolTipGroupTextFontFamily(a: string);
    private dn;
    get dataToolTipGroupTextFontSize(): number;
    set dataToolTipGroupTextFontSize(a: number);
    private kl;
    get dataToolTipGroupTextFontStyle(): string;
    set dataToolTipGroupTextFontStyle(a: string);
    private km;
    get dataToolTipGroupTextFontWeight(): string;
    set dataToolTipGroupTextFontWeight(a: string);
    private k7;
    get dataToolTipSummaryTitleTextColor(): string;
    set dataToolTipSummaryTitleTextColor(a: string);
    private k8;
    get dataToolTipSummaryTitleTextFontFamily(): string;
    set dataToolTipSummaryTitleTextFontFamily(a: string);
    private ee;
    get dataToolTipSummaryTitleTextFontSize(): number;
    set dataToolTipSummaryTitleTextFontSize(a: number);
    private k9;
    get dataToolTipSummaryTitleTextFontStyle(): string;
    set dataToolTipSummaryTitleTextFontStyle(a: string);
    private la;
    get dataToolTipSummaryTitleTextFontWeight(): string;
    set dataToolTipSummaryTitleTextFontWeight(a: string);
    private lb;
    get dataToolTipSummaryType(): string;
    set dataToolTipSummaryType(a: string);
    private k6;
    get dataToolTipSummaryTitleText(): string;
    set dataToolTipSummaryTitleText(a: string);
    private ef;
    get dataToolTipSummaryTitleTextMarginBottom(): number;
    set dataToolTipSummaryTitleTextMarginBottom(a: number);
    private eg;
    get dataToolTipSummaryTitleTextMarginLeft(): number;
    set dataToolTipSummaryTitleTextMarginLeft(a: number);
    private eh;
    get dataToolTipSummaryTitleTextMarginRight(): number;
    set dataToolTipSummaryTitleTextMarginRight(a: number);
    private ei;
    get dataToolTipSummaryTitleTextMarginTop(): number;
    set dataToolTipSummaryTitleTextMarginTop(a: number);
    private ea;
    get dataToolTipSummaryRowMarginBottom(): number;
    set dataToolTipSummaryRowMarginBottom(a: number);
    private eb;
    get dataToolTipSummaryRowMarginLeft(): number;
    set dataToolTipSummaryRowMarginLeft(a: number);
    private ec;
    get dataToolTipSummaryRowMarginRight(): number;
    set dataToolTipSummaryRowMarginRight(a: number);
    private ed;
    get dataToolTipSummaryRowMarginTop(): number;
    set dataToolTipSummaryRowMarginTop(a: number);
    private lh;
    get dataToolTipSummaryValueTextColor(): string;
    set dataToolTipSummaryValueTextColor(a: string);
    private li;
    get dataToolTipSummaryValueTextFontFamily(): string;
    set dataToolTipSummaryValueTextFontFamily(a: string);
    private ek;
    get dataToolTipSummaryValueTextFontSize(): number;
    set dataToolTipSummaryValueTextFontSize(a: number);
    private lj;
    get dataToolTipSummaryValueTextFontStyle(): string;
    set dataToolTipSummaryValueTextFontStyle(a: string);
    private lk;
    get dataToolTipSummaryValueTextFontWeight(): string;
    set dataToolTipSummaryValueTextFontWeight(a: string);
    private k1;
    get dataToolTipSummaryLabelText(): string;
    set dataToolTipSummaryLabelText(a: string);
    private k2;
    get dataToolTipSummaryLabelTextColor(): string;
    set dataToolTipSummaryLabelTextColor(a: string);
    private k3;
    get dataToolTipSummaryLabelTextFontFamily(): string;
    set dataToolTipSummaryLabelTextFontFamily(a: string);
    private d9;
    get dataToolTipSummaryLabelTextFontSize(): number;
    set dataToolTipSummaryLabelTextFontSize(a: number);
    private k4;
    get dataToolTipSummaryLabelTextFontStyle(): string;
    set dataToolTipSummaryLabelTextFontStyle(a: string);
    private k5;
    get dataToolTipSummaryLabelTextFontWeight(): string;
    set dataToolTipSummaryLabelTextFontWeight(a: string);
    private lc;
    get dataToolTipSummaryUnitsText(): string;
    set dataToolTipSummaryUnitsText(a: string);
    private ld;
    get dataToolTipSummaryUnitsTextColor(): string;
    set dataToolTipSummaryUnitsTextColor(a: string);
    private le;
    get dataToolTipSummaryUnitsTextFontFamily(): string;
    set dataToolTipSummaryUnitsTextFontFamily(a: string);
    private ej;
    get dataToolTipSummaryUnitsTextFontSize(): number;
    set dataToolTipSummaryUnitsTextFontSize(a: number);
    private lf;
    get dataToolTipSummaryUnitsTextFontStyle(): string;
    set dataToolTipSummaryUnitsTextFontStyle(a: string);
    private lg;
    get dataToolTipSummaryUnitsTextFontWeight(): string;
    set dataToolTipSummaryUnitsTextFontWeight(a: string);
    private dd;
    get dataToolTipBadgeMarginBottom(): number;
    set dataToolTipBadgeMarginBottom(a: number);
    private de;
    get dataToolTipBadgeMarginLeft(): number;
    set dataToolTipBadgeMarginLeft(a: number);
    private df;
    get dataToolTipBadgeMarginRight(): number;
    set dataToolTipBadgeMarginRight(a: number);
    private dg;
    get dataToolTipBadgeMarginTop(): number;
    set dataToolTipBadgeMarginTop(a: number);
    private kf;
    get dataToolTipBadgeShape(): string;
    set dataToolTipBadgeShape(a: string);
    private lp;
    get dataToolTipUnitsDisplayMode(): string;
    set dataToolTipUnitsDisplayMode(a: string);
    private lq;
    get dataToolTipUnitsText(): string;
    set dataToolTipUnitsText(a: string);
    private lr;
    get dataToolTipUnitsTextColor(): string;
    set dataToolTipUnitsTextColor(a: string);
    private er;
    get dataToolTipUnitsTextMarginBottom(): number;
    set dataToolTipUnitsTextMarginBottom(a: number);
    private es;
    get dataToolTipUnitsTextMarginLeft(): number;
    set dataToolTipUnitsTextMarginLeft(a: number);
    private et;
    get dataToolTipUnitsTextMarginRight(): number;
    set dataToolTipUnitsTextMarginRight(a: number);
    private eu;
    get dataToolTipUnitsTextMarginTop(): number;
    set dataToolTipUnitsTextMarginTop(a: number);
    private ls;
    get dataToolTipUnitsTextFontFamily(): string;
    set dataToolTipUnitsTextFontFamily(a: string);
    private eq;
    get dataToolTipUnitsTextFontSize(): number;
    set dataToolTipUnitsTextFontSize(a: number);
    private lt;
    get dataToolTipUnitsTextFontStyle(): string;
    set dataToolTipUnitsTextFontStyle(a: string);
    private lu;
    get dataToolTipUnitsTextFontWeight(): string;
    set dataToolTipUnitsTextFontWeight(a: string);
    private em;
    get dataToolTipTitleTextMarginBottom(): number;
    set dataToolTipTitleTextMarginBottom(a: number);
    private en;
    get dataToolTipTitleTextMarginLeft(): number;
    set dataToolTipTitleTextMarginLeft(a: number);
    private eo;
    get dataToolTipTitleTextMarginRight(): number;
    set dataToolTipTitleTextMarginRight(a: number);
    private ep;
    get dataToolTipTitleTextMarginTop(): number;
    set dataToolTipTitleTextMarginTop(a: number);
    private ll;
    get dataToolTipTitleTextColor(): string;
    set dataToolTipTitleTextColor(a: string);
    private lm;
    get dataToolTipTitleTextFontFamily(): string;
    set dataToolTipTitleTextFontFamily(a: string);
    private el;
    get dataToolTipTitleTextFontSize(): number;
    set dataToolTipTitleTextFontSize(a: number);
    private ln;
    get dataToolTipTitleTextFontStyle(): string;
    set dataToolTipTitleTextFontStyle(a: string);
    private lo;
    get dataToolTipTitleTextFontWeight(): string;
    set dataToolTipTitleTextFontWeight(a: string);
    private kw;
    get dataToolTipLabelDisplayMode(): string;
    set dataToolTipLabelDisplayMode(a: string);
    private kx;
    get dataToolTipLabelTextColor(): string;
    set dataToolTipLabelTextColor(a: string);
    private d3;
    get dataToolTipLabelTextMarginBottom(): number;
    set dataToolTipLabelTextMarginBottom(a: number);
    private d4;
    get dataToolTipLabelTextMarginLeft(): number;
    set dataToolTipLabelTextMarginLeft(a: number);
    private d5;
    get dataToolTipLabelTextMarginRight(): number;
    set dataToolTipLabelTextMarginRight(a: number);
    private d6;
    get dataToolTipLabelTextMarginTop(): number;
    set dataToolTipLabelTextMarginTop(a: number);
    private ky;
    get dataToolTipLabelTextFontFamily(): string;
    set dataToolTipLabelTextFontFamily(a: string);
    private d2;
    get dataToolTipLabelTextFontSize(): number;
    set dataToolTipLabelTextFontSize(a: number);
    private kz;
    get dataToolTipLabelTextFontStyle(): string;
    set dataToolTipLabelTextFontStyle(a: string);
    private k0;
    get dataToolTipLabelTextFontWeight(): string;
    set dataToolTipLabelTextFontWeight(a: string);
    private aj;
    get sortDescriptions(): ChartSortDescriptionDescription[];
    set sortDescriptions(a: ChartSortDescriptionDescription[]);
    private v;
    get groupSortDescriptions(): ChartSortDescriptionDescription[];
    set groupSortDescriptions(a: ChartSortDescriptionDescription[]);
    private u;
    get groupDescriptions(): ChartSortDescriptionDescription[];
    set groupDescriptions(a: ChartSortDescriptionDescription[]);
    private s;
    get filterExpressions(): FilterExpressionDescription[];
    set filterExpressions(a: FilterExpressionDescription[]);
    private w;
    get highlightFilterExpressions(): FilterExpressionDescription[];
    set highlightFilterExpressions(a: FilterExpressionDescription[]);
    private ak;
    get summaryDescriptions(): ChartSummaryDescriptionDescription[];
    set summaryDescriptions(a: ChartSummaryDescriptionDescription[]);
    private m5;
    get selectionMode(): string;
    set selectionMode(a: string);
    private l9;
    get focusMode(): string;
    set focusMode(a: string);
    private m4;
    get selectionBrush(): string;
    set selectionBrush(a: string);
    private l7;
    get focusBrush(): string;
    set focusBrush(a: string);
    private m3;
    get selectionBehavior(): string;
    set selectionBehavior(a: string);
    private ai;
    get selectedSeriesItems(): ChartSelectionDescription[];
    set selectedSeriesItems(a: ChartSelectionDescription[]);
    private t;
    get focusedSeriesItems(): ChartSelectionDescription[];
    set focusedSeriesItems(a: ChartSelectionDescription[]);
    private ac;
    get initialSortDescriptions(): ChartSortDescriptionDescription[];
    set initialSortDescriptions(a: ChartSortDescriptionDescription[]);
    private aa;
    get initialGroupSortDescriptions(): ChartSortDescriptionDescription[];
    set initialGroupSortDescriptions(a: ChartSortDescriptionDescription[]);
    private z;
    get initialGroupDescriptions(): ChartSortDescriptionDescription[];
    set initialGroupDescriptions(a: ChartSortDescriptionDescription[]);
    private y;
    get initialFilterExpressions(): FilterExpressionDescription[];
    set initialFilterExpressions(a: FilterExpressionDescription[]);
    private ab;
    get initialHighlightFilterExpressions(): FilterExpressionDescription[];
    set initialHighlightFilterExpressions(a: FilterExpressionDescription[]);
    private ad;
    get initialSummaryDescriptions(): ChartSummaryDescriptionDescription[];
    set initialSummaryDescriptions(a: ChartSummaryDescriptionDescription[]);
    private mn;
    get initialSorts(): string;
    set initialSorts(a: string);
    private ma;
    get groupSorts(): string;
    set groupSorts(a: string);
    private ml;
    get initialGroups(): string;
    set initialGroups(a: string);
    private mk;
    get initialFilter(): string;
    set initialFilter(a: string);
    private mm;
    get initialHighlightFilter(): string;
    set initialHighlightFilter(a: string);
    private mo;
    get initialSummaries(): string;
    set initialSummaries(a: string);
    private ke;
    get dataSourceRef(): string;
    set dataSourceRef(a: string);
    private bl;
    get dataSource(): BaseDataSourceDescription;
    set dataSource(a: BaseDataSourceDescription);
    private mb;
    get highlightedDataSourceRef(): string;
    set highlightedDataSourceRef(a: string);
    private bm;
    get highlightedDataSource(): BaseDataSourceDescription;
    set highlightedDataSource(a: BaseDataSourceDescription);
    private x;
    get includedProperties(): string[];
    set includedProperties(a: string[]);
    private r;
    get excludedProperties(): string[];
    set excludedProperties(a: string[]);
    private j;
    get brushes(): string[];
    set brushes(a: string[]);
    private ah;
    get outlines(): string[];
    set outlines(a: string[]);
    private h;
    get actualBrushes(): string[];
    set actualBrushes(a: string[]);
    private i;
    get actualOutlines(): string[];
    set actualOutlines(a: string[]);
    private ms;
    get legendRef(): string;
    set legendRef(a: string);
    private b9;
    get isHorizontalZoomEnabled(): boolean;
    set isHorizontalZoomEnabled(a: boolean);
    private cb;
    get isVerticalZoomEnabled(): boolean;
    set isVerticalZoomEnabled(a: boolean);
    private cd;
    get shouldDisplayMockData(): boolean;
    set shouldDisplayMockData(a: boolean);
    private cf;
    get shouldUseSkeletonStyleForMockData(): boolean;
    set shouldUseSkeletonStyleForMockData(a: boolean);
    private md;
    get highlightedValuesDisplayMode(): string;
    set highlightedValuesDisplayMode(a: string);
    private ca;
    get isSeriesHighlightingEnabled(): boolean;
    set isSeriesHighlightingEnabled(a: boolean);
    private mc;
    get highlightedLegendItemVisibility(): string;
    set highlightedLegendItemVisibility(a: string);
    private bp;
    get windowRect(): RectDescription;
    set windowRect(a: RectDescription);
    private j5;
    get chartTitle(): string;
    set chartTitle(a: string);
    private ng;
    get subtitle(): string;
    set subtitle(a: string);
    private nk;
    get titleAlignment(): string;
    set titleAlignment(a: string);
    private nh;
    get subtitleAlignment(): string;
    set subtitleAlignment(a: string);
    private nq;
    get unknownValuePlotting(): string;
    set unknownValuePlotting(a: string);
    private fj;
    get resolution(): number;
    set resolution(a: number);
    private fp;
    get thickness(): number;
    set thickness(a: number);
    private mw;
    get outlineMode(): string;
    set outlineMode(a: string);
    private mv;
    get markerOutlineMode(): string;
    set markerOutlineMode(a: string);
    private mu;
    get markerFillMode(): string;
    set markerFillMode(a: string);
    private fc;
    get markerFillOpacity(): number;
    set markerFillOpacity(a: number);
    private fd;
    get markerThickness(): number;
    set markerThickness(a: number);
    private ag;
    get markerTypes(): string[];
    set markerTypes(a: string[]);
    private mt;
    get markerAutomaticBehavior(): string;
    set markerAutomaticBehavior(a: string);
    private ae;
    get markerBrushes(): string[];
    set markerBrushes(a: string[]);
    private af;
    get markerOutlines(): string[];
    set markerOutlines(a: string[]);
    private jg;
    get markerMaxCount(): number;
    set markerMaxCount(a: number);
    private c9;
    get areaFillOpacity(): number;
    set areaFillOpacity(a: number);
    private bs;
    get animateSeriesWhenAxisRangeChanges(): boolean;
    set animateSeriesWhenAxisRangeChanges(a: boolean);
    private al;
    get trendLineBrushes(): string[];
    set trendLineBrushes(a: string[]);
    private np;
    get trendLineType(): string;
    set trendLineType(a: string);
    private fv;
    get trendLineThickness(): number;
    set trendLineThickness(a: number);
    private br;
    get alignsGridLinesToPixels(): boolean;
    set alignsGridLinesToPixels(a: boolean);
    private fg;
    get plotAreaMarginLeft(): number;
    set plotAreaMarginLeft(a: number);
    private fi;
    get plotAreaMarginTop(): number;
    set plotAreaMarginTop(a: number);
    private fh;
    get plotAreaMarginRight(): number;
    set plotAreaMarginRight(a: number);
    private ff;
    get plotAreaMarginBottom(): number;
    set plotAreaMarginBottom(a: number);
    private j6;
    get computedPlotAreaMarginMode(): string;
    set computedPlotAreaMarginMode(a: string);
    private m8;
    get seriesPlotAreaMarginHorizontalMode(): string;
    set seriesPlotAreaMarginHorizontalMode(a: string);
    private m9;
    get seriesPlotAreaMarginVerticalMode(): string;
    set seriesPlotAreaMarginVerticalMode(a: string);
    private mf;
    get highlightingMode(): string;
    set highlightingMode(a: string);
    private me;
    get highlightingBehavior(): string;
    set highlightingBehavior(a: string);
    private mp;
    get legendHighlightingMode(): string;
    set legendHighlightingMode(a: string);
    private mr;
    get legendItemBadgeShape(): string;
    set legendItemBadgeShape(a: string);
    private mq;
    get legendItemBadgeMode(): string;
    set legendItemBadgeMode(a: string);
    private jj;
    get trendLinePeriod(): number;
    set trendLinePeriod(a: number);
    private nn;
    get toolTipType(): string;
    set toolTipType(a: string);
    private kb;
    get crosshairsDisplayMode(): string;
    set crosshairsDisplayMode(a: string);
    private b0;
    get crosshairsSnapToData(): boolean;
    set crosshairsSnapToData(a: boolean);
    private kd;
    get crosshairsLineVerticalStroke(): string;
    set crosshairsLineVerticalStroke(a: string);
    private dc;
    get crosshairsLineThickness(): number;
    set crosshairsLineThickness(a: number);
    private kc;
    get crosshairsLineHorizontalStroke(): string;
    set crosshairsLineHorizontalStroke(a: string);
    private bz;
    get crosshairsAnnotationEnabled(): boolean;
    set crosshairsAnnotationEnabled(a: boolean);
    private j7;
    get crosshairsAnnotationXAxisBackground(): string;
    set crosshairsAnnotationXAxisBackground(a: string);
    private j9;
    get crosshairsAnnotationYAxisBackground(): string;
    set crosshairsAnnotationYAxisBackground(a: string);
    private j8;
    get crosshairsAnnotationXAxisTextColor(): string;
    set crosshairsAnnotationXAxisTextColor(a: string);
    private ka;
    get crosshairsAnnotationYAxisTextColor(): string;
    set crosshairsAnnotationYAxisTextColor(a: string);
    private i9;
    get crosshairsAnnotationXAxisPrecision(): number;
    set crosshairsAnnotationXAxisPrecision(a: number);
    private ja;
    get crosshairsAnnotationYAxisPrecision(): number;
    set crosshairsAnnotationYAxisPrecision(a: number);
    private cc;
    get shouldAvoidAxisAnnotationCollisions(): boolean;
    set shouldAvoidAxisAnnotationCollisions(a: boolean);
    private ce;
    get shouldPanOnMaximumZoom(): boolean;
    set shouldPanOnMaximumZoom(a: boolean);
    private b7;
    get finalValueAnnotationsVisible(): boolean;
    set finalValueAnnotationsVisible(a: boolean);
    private l5;
    get finalValueAnnotationsBackground(): string;
    set finalValueAnnotationsBackground(a: string);
    private l6;
    get finalValueAnnotationsTextColor(): string;
    set finalValueAnnotationsTextColor(a: string);
    private jd;
    get finalValueAnnotationsPrecision(): number;
    set finalValueAnnotationsPrecision(a: number);
    private bt;
    get autoCalloutsVisible(): boolean;
    set autoCalloutsVisible(a: boolean);
    private by;
    get calloutsVisible(): boolean;
    set calloutsVisible(a: boolean);
    private bu;
    get calloutStyleUpdatingEventEnabled(): boolean;
    set calloutStyleUpdatingEventEnabled(a: boolean);
    private cg;
    get useValueForAutoCalloutLabels(): boolean;
    set useValueForAutoCalloutLabels(a: boolean);
    private jw;
    get calloutCollisionMode(): string;
    set calloutCollisionMode(a: string);
    private bw;
    get calloutsUseItemColorForFill(): boolean;
    set calloutsUseItemColorForFill(a: boolean);
    private bx;
    get calloutsUseItemColorForOutline(): boolean;
    set calloutsUseItemColorForOutline(a: boolean);
    private bv;
    get calloutsUseAutoContrastingLabelColors(): boolean;
    set calloutsUseAutoContrastingLabelColors(a: boolean);
    private db;
    get calloutsStrokeThickness(): number;
    set calloutsStrokeThickness(a: number);
    private jy;
    get calloutsBackground(): string;
    set calloutsBackground(a: string);
    private i8;
    get calloutsAutoLabelPrecision(): number;
    set calloutsAutoLabelPrecision(a: number);
    private j0;
    get calloutsDataSourceRef(): string;
    set calloutsDataSourceRef(a: string);
    private k;
    get calloutsAllowedPositions(): string[];
    set calloutsAllowedPositions(a: string[]);
    private j3;
    get calloutsXMemberPath(): string;
    set calloutsXMemberPath(a: string);
    private j4;
    get calloutsYMemberPath(): string;
    set calloutsYMemberPath(a: string);
    private j1;
    get calloutsLabelMemberPath(): string;
    set calloutsLabelMemberPath(a: string);
    private jz;
    get calloutsContentMemberPath(): string;
    set calloutsContentMemberPath(a: string);
    private am;
    get valueLines(): string[];
    set valueLines(a: string[]);
    private an;
    get valueLinesBrushes(): string[];
    set valueLinesBrushes(a: string[]);
    private fw;
    get valueLinesThickness(): number;
    set valueLinesThickness(a: number);
    private mh;
    get horizontalViewScrollbarMode(): string;
    set horizontalViewScrollbarMode(a: string);
    private ns;
    get verticalViewScrollbarMode(): string;
    set verticalViewScrollbarMode(a: string);
    private mj;
    get horizontalViewScrollbarPosition(): string;
    set horizontalViewScrollbarPosition(a: string);
    private nu;
    get verticalViewScrollbarPosition(): string;
    set verticalViewScrollbarPosition(a: string);
    private mg;
    get horizontalViewScrollbarFill(): string;
    set horizontalViewScrollbarFill(a: string);
    private mi;
    get horizontalViewScrollbarOutline(): string;
    set horizontalViewScrollbarOutline(a: string);
    private e8;
    get horizontalViewScrollbarStrokeThickness(): number;
    set horizontalViewScrollbarStrokeThickness(a: number);
    private e7;
    get horizontalViewScrollbarMaxOpacity(): number;
    set horizontalViewScrollbarMaxOpacity(a: number);
    private e4;
    get horizontalViewScrollbarCornerRadius(): number;
    set horizontalViewScrollbarCornerRadius(a: number);
    private e5;
    get horizontalViewScrollbarHeight(): number;
    set horizontalViewScrollbarHeight(a: number);
    private e6;
    get horizontalViewScrollbarInset(): number;
    set horizontalViewScrollbarInset(a: number);
    private fa;
    get horizontalViewScrollbarTrackStartInset(): number;
    set horizontalViewScrollbarTrackStartInset(a: number);
    private e9;
    get horizontalViewScrollbarTrackEndInset(): number;
    set horizontalViewScrollbarTrackEndInset(a: number);
    private b8;
    get horizontalViewScrollbarShouldAddAutoTrackInsets(): boolean;
    set horizontalViewScrollbarShouldAddAutoTrackInsets(a: boolean);
    private nr;
    get verticalViewScrollbarFill(): string;
    set verticalViewScrollbarFill(a: string);
    private nt;
    get verticalViewScrollbarOutline(): string;
    set verticalViewScrollbarOutline(a: string);
    private f0;
    get verticalViewScrollbarStrokeThickness(): number;
    set verticalViewScrollbarStrokeThickness(a: number);
    private fz;
    get verticalViewScrollbarMaxOpacity(): number;
    set verticalViewScrollbarMaxOpacity(a: number);
    private fx;
    get verticalViewScrollbarCornerRadius(): number;
    set verticalViewScrollbarCornerRadius(a: number);
    private f3;
    get verticalViewScrollbarWidth(): number;
    set verticalViewScrollbarWidth(a: number);
    private fy;
    get verticalViewScrollbarInset(): number;
    set verticalViewScrollbarInset(a: number);
    private f2;
    get verticalViewScrollbarTrackStartInset(): number;
    set verticalViewScrollbarTrackStartInset(a: number);
    private f1;
    get verticalViewScrollbarTrackEndInset(): number;
    set verticalViewScrollbarTrackEndInset(a: number);
    private ch;
    get verticalViewScrollbarShouldAddAutoTrackInsets(): boolean;
    set verticalViewScrollbarShouldAddAutoTrackInsets(a: boolean);
    private f5;
    get windowRectMinWidth(): number;
    set windowRectMinWidth(a: number);
    private f4;
    get windowRectMinHeight(): number;
    set windowRectMinHeight(a: number);
    private f7;
    get windowSizeMinWidth(): number;
    set windowSizeMinWidth(a: number);
    private f6;
    get windowSizeMinHeight(): number;
    set windowSizeMinHeight(a: number);
    private m6;
    get seriesAddedRef(): string;
    set seriesAddedRef(a: string);
    private nf;
    get seriesRemovedRef(): string;
    set seriesRemovedRef(a: string);
    private nb;
    get seriesPointerEnterRef(): string;
    set seriesPointerEnterRef(a: string);
    private nc;
    get seriesPointerLeaveRef(): string;
    set seriesPointerLeaveRef(a: string);
    private nd;
    get seriesPointerMoveRef(): string;
    set seriesPointerMoveRef(a: string);
    private na;
    get seriesPointerDownRef(): string;
    set seriesPointerDownRef(a: string);
    private ne;
    get seriesPointerUpRef(): string;
    set seriesPointerUpRef(a: string);
    private m7;
    get seriesClickRef(): string;
    set seriesClickRef(a: string);
    private my;
    get plotAreaPointerEnterRef(): string;
    set plotAreaPointerEnterRef(a: string);
    private mz;
    get plotAreaPointerLeaveRef(): string;
    set plotAreaPointerLeaveRef(a: string);
    private m0;
    get plotAreaPointerMoveRef(): string;
    set plotAreaPointerMoveRef(a: string);
    private mx;
    get plotAreaPointerDownRef(): string;
    set plotAreaPointerDownRef(a: string);
    private m1;
    get plotAreaPointerUpRef(): string;
    set plotAreaPointerUpRef(a: string);
    private j2;
    get calloutStyleUpdatingRef(): string;
    set calloutStyleUpdatingRef(a: string);
    private jx;
    get calloutRenderStyleUpdatingRef(): string;
    set calloutRenderStyleUpdatingRef(a: string);
    private m2;
    get selectedSeriesItemsChangedRef(): string;
    set selectedSeriesItemsChangedRef(a: string);
    private l8;
    get focusedSeriesItemsChangedRef(): string;
    set focusedSeriesItemsChangedRef(a: string);
    private l4;
    get filterStringErrorsParsingRef(): string;
    set filterStringErrorsParsingRef(a: string);
}
