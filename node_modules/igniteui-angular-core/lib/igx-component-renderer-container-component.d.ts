import { Injector, ComponentFactoryResolver, Renderer2, NgZone, ViewContainerRef } from '@angular/core';
import { TypeDescriptionContext } from './IComponentRendererAdapter_combined';
import * as i0 from "@angular/core";
export declare class IgxComponentRendererContainerComponent {
    private _renderer;
    private _elRef;
    private _ngZone;
    private _componentFactoryResolver;
    private _injector;
    constructor(_renderer: Renderer2, _elRef: ViewContainerRef, _ngZone: NgZone, _componentFactoryResolver: ComponentFactoryResolver, _injector: Injector);
    _dynamicContent: ViewContainerRef;
    private listeners;
    private _currentRoot;
    private _currentRootRef;
    static isEvent(ev: any): boolean;
    determineInjector(origName: string, typeName: string, type: Function): any;
    getSpecificAnchor(origName: string, typeName: string, type: Function, context: TypeDescriptionContext): any;
    createObject(type: string, container: any, context: TypeDescriptionContext, portalChildren: boolean, nameContext: string): unknown;
    replaceRootItem(t: any, deferAttach: boolean, continueActions: (resumeRequired: boolean) => void): void;
    clearContainer(continueActions: (resumeRequired: boolean) => void): void;
    getRootObject(): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxComponentRendererContainerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxComponentRendererContainerComponent, "igx-component-renderer-container", never, {}, {}, never, never>;
}
