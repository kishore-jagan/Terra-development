import { MarkerSeriesDescription } from "./MarkerSeriesDescription";
import { FormatSpecifierDescription } from "./FormatSpecifierDescription";
import { Type } from "./type";
/**
 * @hidden
 */
export declare abstract class RadialBaseDescription extends MarkerSeriesDescription {
    static $t: Type;
    protected get_type(): string;
    constructor();
    private f5;
    get autoCalloutLabelPrecision(): number;
    set autoCalloutLabelPrecision(a: number);
    private f6;
    get autoCalloutPercentagePrecision(): number;
    set autoCalloutPercentagePrecision(a: number);
    private gc;
    get autoCalloutLabelValueSeparator(): string;
    set autoCalloutLabelValueSeparator(a: string);
    private gg;
    get legendRadialLabelMode(): string;
    set legendRadialLabelMode(a: string);
    private ge;
    get autoCalloutRadialLabelMode(): string;
    set autoCalloutRadialLabelMode(a: string);
    private gd;
    get autoCalloutOthersLabelFormat(): string;
    set autoCalloutOthersLabelFormat(a: string);
    private fn;
    get autoCalloutOthersLabelFormatSpecifiers(): FormatSpecifierDescription[];
    set autoCalloutOthersLabelFormatSpecifiers(a: FormatSpecifierDescription[]);
    private gj;
    get proportionalRadialLabelFormat(): string;
    set proportionalRadialLabelFormat(a: string);
    private fr;
    get proportionalRadialLabelFormatSpecifiers(): FormatSpecifierDescription[];
    set proportionalRadialLabelFormatSpecifiers(a: FormatSpecifierDescription[]);
    private gf;
    get legendProportionalRadialLabelFormat(): string;
    set legendProportionalRadialLabelFormat(a: string);
    private fo;
    get legendProportionalRadialLabelFormatSpecifiers(): FormatSpecifierDescription[];
    set legendProportionalRadialLabelFormatSpecifiers(a: FormatSpecifierDescription[]);
    private gi;
    get othersProportionalRadialLabelFormat(): string;
    set othersProportionalRadialLabelFormat(a: string);
    private fq;
    get othersProportionalRadialLabelFormatSpecifiers(): FormatSpecifierDescription[];
    set othersProportionalRadialLabelFormatSpecifiers(a: FormatSpecifierDescription[]);
    private gh;
    get othersLegendProportionalRadialLabelFormat(): string;
    set othersLegendProportionalRadialLabelFormat(a: string);
    private fp;
    get othersLegendProportionalRadialLabelFormatSpecifiers(): FormatSpecifierDescription[];
    set othersLegendProportionalRadialLabelFormatSpecifiers(a: FormatSpecifierDescription[]);
    private fz;
    get isCustomRadialStyleAllowed(): boolean;
    set isCustomRadialStyleAllowed(a: boolean);
    private fy;
    get isCustomRadialMarkerStyleAllowed(): boolean;
    set isCustomRadialMarkerStyleAllowed(a: boolean);
    private gk;
    get transitionInMode(): string;
    set transitionInMode(a: string);
    private f0;
    get isTransitionInEnabled(): boolean;
    set isTransitionInEnabled(a: boolean);
    private f9;
    get angleAxisRef(): string;
    set angleAxisRef(a: string);
    private gl;
    get valueAxisRef(): string;
    set valueAxisRef(a: string);
    private fx;
    get clipSeriesToBounds(): boolean;
    set clipSeriesToBounds(a: boolean);
    private gb;
    get assigningRadialStyleRef(): string;
    set assigningRadialStyleRef(a: string);
    private ga;
    get assigningRadialMarkerStyleRef(): string;
    set assigningRadialMarkerStyleRef(a: string);
}
