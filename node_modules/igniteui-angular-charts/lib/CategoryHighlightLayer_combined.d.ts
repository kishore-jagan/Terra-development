import { AnnotationLayer } from "./AnnotationLayer";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { DependencyProperty } from "igniteui-angular-core";
import { Series } from "./Series";
import { CategoryHighlightLayerFrame } from "./CategoryHighlightLayerFrame";
import { Type } from "igniteui-angular-core";
import { SeriesView } from "./SeriesView";
import { Axis } from "./Axis";
import { Frame } from "./Frame";
import { CategoryHighlightFrameRect } from "./CategoryHighlightFrameRect";
import { List$1 } from "igniteui-angular-core";
import { Rect } from "igniteui-angular-core";
import { Pool$1 } from "igniteui-angular-core";
import { Rectangle } from "igniteui-angular-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { Brush } from "igniteui-angular-core";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class CategoryHighlightLayer extends AnnotationLayer {
    static $t: Type;
    protected bi(): Series;
    protected get_ep(): boolean;
    constructor();
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    protected zq: CategoryHighlightLayerView;
    zp: CategoryAxisBase;
    zs: boolean;
    get zt(): number;
    set zt(a: number);
    static readonly z0: DependencyProperty;
    protected yg(a: Axis, b: boolean): void;
    private zr;
    protected yj(a: Frame, b: SeriesView): void;
    private zy;
    zx(a: Rect, b: CategoryHighlightLayerFrame, c: Axis): void;
    protected ym(a: Frame, b: SeriesView): void;
    protected f8(): boolean;
    zz(a: CategoryHighlightFrameRect, b: Rectangle): void;
    protected q5(a: any, b: string, c: any, d: any): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CategoryHighlightLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CategoryHighlightLayer);
    protected b7: CategoryHighlightLayer;
    b8: Pool$1<Rectangle>;
    au(): void;
    protected b9: List$1<Rectangle>;
    private cg;
    private cb;
    private cd;
    private cc;
    ce(a: Brush): Brush;
    cf(a: Brush): Brush;
    ca(a: Rectangle, b: number, c: number, d: number, e: number): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
}
