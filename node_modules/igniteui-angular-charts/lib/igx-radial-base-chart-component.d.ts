import { HorizontalAlignment } from "igniteui-angular-core";
import { VerticalAlignment } from "igniteui-angular-core";
import { Visibility } from "igniteui-angular-core";
import { ValueAxisLabelLocation } from "./ValueAxisLabelLocation";
import { AngleAxisLabelLocation } from "./AngleAxisLabelLocation";
import { IgxDomainChartComponent } from "./igx-domain-chart-component";
import { RadialBaseChart } from "./RadialBaseChart";
import * as i0 from "@angular/core";
/**
 * Represents a base class for domain charts with X/Y axes
*/
export declare abstract class IgxRadialBaseChartComponent extends IgxDomainChartComponent {
    /**
                                 * @hidden
                                 */
    get i(): RadialBaseChart;
    constructor();
    /**
     * Gets or sets function which takes an context object and returns a formatted label for the X-axis.
    */
    get angleAxisFormatLabel(): (item: any) => string;
    set angleAxisFormatLabel(v: (item: any) => string);
    /**
     * Gets or sets function which takes a context object and returns a formatted label for the Y-axis.
    */
    get valueAxisFormatLabel(): (item: any) => string;
    set valueAxisFormatLabel(v: (item: any) => string);
    /**
     * Gets or sets the left margin of labels on the X-axis
    */
    get angleAxisLabelLeftMargin(): number;
    set angleAxisLabelLeftMargin(v: number);
    static ngAcceptInputType_angleAxisLabelLeftMargin: number | string;
    /**
     * Gets or sets the top margin of labels on the X-axis
    */
    get angleAxisLabelTopMargin(): number;
    set angleAxisLabelTopMargin(v: number);
    static ngAcceptInputType_angleAxisLabelTopMargin: number | string;
    /**
     * Gets or sets the right margin of labels on the X-axis
    */
    get angleAxisLabelRightMargin(): number;
    set angleAxisLabelRightMargin(v: number);
    static ngAcceptInputType_angleAxisLabelRightMargin: number | string;
    /**
     * Gets or sets the bottom margin of labels on the X-axis
    */
    get angleAxisLabelBottomMargin(): number;
    set angleAxisLabelBottomMargin(v: number);
    static ngAcceptInputType_angleAxisLabelBottomMargin: number | string;
    /**
     * Gets or sets the left margin of labels on the Y-axis
    */
    get valueAxisLabelLeftMargin(): number;
    set valueAxisLabelLeftMargin(v: number);
    static ngAcceptInputType_valueAxisLabelLeftMargin: number | string;
    /**
     * Gets or sets the top margin of labels on the Y-axis
    */
    get valueAxisLabelTopMargin(): number;
    set valueAxisLabelTopMargin(v: number);
    static ngAcceptInputType_valueAxisLabelTopMargin: number | string;
    /**
     * Gets or sets the right margin of labels on the Y-axis
    */
    get valueAxisLabelRightMargin(): number;
    set valueAxisLabelRightMargin(v: number);
    static ngAcceptInputType_valueAxisLabelRightMargin: number | string;
    /**
     * Gets or sets the bottom margin of labels on the Y-axis
    */
    get valueAxisLabelBottomMargin(): number;
    set valueAxisLabelBottomMargin(v: number);
    static ngAcceptInputType_valueAxisLabelBottomMargin: number | string;
    /**
     * Gets or sets color of labels on the X-axis
    */
    get angleAxisLabelTextColor(): string;
    set angleAxisLabelTextColor(v: string);
    /**
     * Gets or sets color of labels on the Y-axis
    */
    get valueAxisLabelTextColor(): string;
    set valueAxisLabelTextColor(v: string);
    /**
     * Gets the actual color of labels on the X-axis
    */
    get actualAngleAxisLabelTextColor(): string;
    set actualAngleAxisLabelTextColor(v: string);
    /**
     * Gets the actual color of labels on the Y-axis
    */
    get actualValueAxisLabelTextColor(): string;
    set actualValueAxisLabelTextColor(v: string);
    /**
     * Gets or sets the margin around a title on the X-axis
    */
    get angleAxisTitleMargin(): number;
    set angleAxisTitleMargin(v: number);
    static ngAcceptInputType_angleAxisTitleMargin: number | string;
    /**
     * Gets or sets the margin around a title on the Y-axis
    */
    get valueAxisTitleMargin(): number;
    set valueAxisTitleMargin(v: number);
    static ngAcceptInputType_valueAxisTitleMargin: number | string;
    /**
     * Gets or sets the left margin of a title on the X-axis
    */
    get angleAxisTitleLeftMargin(): number;
    set angleAxisTitleLeftMargin(v: number);
    static ngAcceptInputType_angleAxisTitleLeftMargin: number | string;
    /**
     * Gets or sets the left margin of a title on the Y-axis
    */
    get valueAxisTitleLeftMargin(): number;
    set valueAxisTitleLeftMargin(v: number);
    static ngAcceptInputType_valueAxisTitleLeftMargin: number | string;
    /**
     * Gets or sets the top margin of a title on the X-axis
    */
    get angleAxisTitleTopMargin(): number;
    set angleAxisTitleTopMargin(v: number);
    static ngAcceptInputType_angleAxisTitleTopMargin: number | string;
    /**
     * Gets or sets the top margin of a title on the Y-axis
    */
    get valueAxisTitleTopMargin(): number;
    set valueAxisTitleTopMargin(v: number);
    static ngAcceptInputType_valueAxisTitleTopMargin: number | string;
    /**
     * Gets or sets the right margin of a title on the X-axis
    */
    get angleAxisTitleRightMargin(): number;
    set angleAxisTitleRightMargin(v: number);
    static ngAcceptInputType_angleAxisTitleRightMargin: number | string;
    /**
     * Gets or sets the right margin of a title on the Y-axis
    */
    get valueAxisTitleRightMargin(): number;
    set valueAxisTitleRightMargin(v: number);
    static ngAcceptInputType_valueAxisTitleRightMargin: number | string;
    /**
     * Gets or sets the bottom margin of a title on the X-axis
    */
    get angleAxisTitleBottomMargin(): number;
    set angleAxisTitleBottomMargin(v: number);
    static ngAcceptInputType_angleAxisTitleBottomMargin: number | string;
    /**
     * Gets or sets the bottom margin of a title on the Y-axis
    */
    get valueAxisTitleBottomMargin(): number;
    set valueAxisTitleBottomMargin(v: number);
    static ngAcceptInputType_valueAxisTitleBottomMargin: number | string;
    /**
     * Gets or sets color of title on the X-axis
    */
    get angleAxisTitleTextColor(): string;
    set angleAxisTitleTextColor(v: string);
    /**
     * Gets or sets color of title on the Y-axis
    */
    get valueAxisTitleTextColor(): string;
    set valueAxisTitleTextColor(v: string);
    /**
     * Gets or sets CSS font property for labels on X-axis
    */
    get angleAxisLabelTextStyle(): string;
    set angleAxisLabelTextStyle(v: string);
    /**
     * Gets or sets CSS font property for labels on Y-axis
    */
    get valueAxisLabelTextStyle(): string;
    set valueAxisLabelTextStyle(v: string);
    /**
     * Gets or sets CSS font property for title on X-axis
    */
    get angleAxisTitleTextStyle(): string;
    set angleAxisTitleTextStyle(v: string);
    /**
     * Gets or sets CSS font property for title on Y-axis
    */
    get valueAxisTitleTextStyle(): string;
    set valueAxisTitleTextStyle(v: string);
    /**
     * Gets or sets the format for labels along the X-axis.
    */
    get angleAxisLabel(): any;
    set angleAxisLabel(v: any);
    /**
     * Gets or sets the property or string from which the labels are derived.
    */
    get valueAxisLabel(): any;
    set valueAxisLabel(v: any);
    /**
     * Gets or sets the color to apply to major gridlines along the X-axis.
    */
    get angleAxisMajorStroke(): string;
    set angleAxisMajorStroke(v: string);
    /**
     * Gets or sets the color to apply to major gridlines along the Y-axis.
    */
    get valueAxisMajorStroke(): string;
    set valueAxisMajorStroke(v: string);
    /**
     * Gets or sets the thickness to apply to major gridlines along the X-axis.
    */
    get angleAxisMajorStrokeThickness(): number;
    set angleAxisMajorStrokeThickness(v: number);
    static ngAcceptInputType_angleAxisMajorStrokeThickness: number | string;
    /**
     * Gets or sets the thickness to apply to major gridlines along the Y-axis.
    */
    get valueAxisMajorStrokeThickness(): number;
    set valueAxisMajorStrokeThickness(v: number);
    static ngAcceptInputType_valueAxisMajorStrokeThickness: number | string;
    /**
     * Gets or sets the thickness to apply to minor gridlines along the X-axis.
    */
    get angleAxisMinorStrokeThickness(): number;
    set angleAxisMinorStrokeThickness(v: number);
    static ngAcceptInputType_angleAxisMinorStrokeThickness: number | string;
    /**
     * Gets or sets the thickness to apply to minor gridlines along the Y-axis.
    */
    get valueAxisMinorStrokeThickness(): number;
    set valueAxisMinorStrokeThickness(v: number);
    static ngAcceptInputType_valueAxisMinorStrokeThickness: number | string;
    /**
     * Gets or sets the color to apply to stripes along the X-axis.
    */
    get angleAxisStrip(): string;
    set angleAxisStrip(v: string);
    /**
     * Gets or sets the color to apply to stripes along the Y-axis.
    */
    get valueAxisStrip(): string;
    set valueAxisStrip(v: string);
    /**
     * Gets or sets the color to apply to the X-axis line.
    */
    get angleAxisStroke(): string;
    set angleAxisStroke(v: string);
    /**
     * Gets or sets the color to apply to the Y-axis line.
    */
    get valueAxisStroke(): string;
    set valueAxisStroke(v: string);
    /**
     * Gets or sets the thickness to apply to the X-axis line.
    */
    get angleAxisStrokeThickness(): number;
    set angleAxisStrokeThickness(v: number);
    static ngAcceptInputType_angleAxisStrokeThickness: number | string;
    /**
     * Gets or sets the thickness to apply to the Y-axis line.
    */
    get valueAxisStrokeThickness(): number;
    set valueAxisStrokeThickness(v: number);
    static ngAcceptInputType_valueAxisStrokeThickness: number | string;
    /**
     * Gets or sets the length of tickmarks along the X-axis.
    */
    get angleAxisTickLength(): number;
    set angleAxisTickLength(v: number);
    static ngAcceptInputType_angleAxisTickLength: number | string;
    /**
     * Gets or sets the length of tickmarks along the Y-axis.
    */
    get valueAxisTickLength(): number;
    set valueAxisTickLength(v: number);
    static ngAcceptInputType_valueAxisTickLength: number | string;
    /**
     * Gets or sets the color to apply to tickmarks along the X-axis.
    */
    get angleAxisTickStroke(): string;
    set angleAxisTickStroke(v: string);
    /**
     * Gets or sets the color to apply to tickmarks along the Y-axis.
    */
    get valueAxisTickStroke(): string;
    set valueAxisTickStroke(v: string);
    /**
     * Gets or sets the thickness to apply to tickmarks along the X-axis.
    */
    get angleAxisTickStrokeThickness(): number;
    set angleAxisTickStrokeThickness(v: number);
    static ngAcceptInputType_angleAxisTickStrokeThickness: number | string;
    /**
     * Gets or sets the thickness to apply to tickmarks along the Y-axis.
    */
    get valueAxisTickStrokeThickness(): number;
    set valueAxisTickStrokeThickness(v: number);
    static ngAcceptInputType_valueAxisTickStrokeThickness: number | string;
    /**
     * Gets or sets the Text to display below the X-axis.
    */
    get angleAxisTitle(): string;
    set angleAxisTitle(v: string);
    /**
     * Gets or sets the Text to display to the left of the Y-axis.
    */
    get valueAxisTitle(): string;
    set valueAxisTitle(v: string);
    /**
     * Gets or sets the color to apply to minor gridlines along the X-axis.
    */
    get angleAxisMinorStroke(): string;
    set angleAxisMinorStroke(v: string);
    /**
     * Gets or sets the color to apply to minor gridlines along the Y-axis.
    */
    get valueAxisMinorStroke(): string;
    set valueAxisMinorStroke(v: string);
    /**
     * Gets or sets the angle of rotation for labels along the X-axis.
    */
    get angleAxisLabelAngle(): number;
    set angleAxisLabelAngle(v: number);
    static ngAcceptInputType_angleAxisLabelAngle: number | string;
    /**
     * Gets or sets the angle of rotation for labels along the Y-axis.
    */
    get valueAxisLabelAngle(): number;
    set valueAxisLabelAngle(v: number);
    static ngAcceptInputType_valueAxisLabelAngle: number | string;
    /**
     * Gets or sets the distance between the X-axis and the bottom of the chart.
    */
    get angleAxisExtent(): number;
    set angleAxisExtent(v: number);
    static ngAcceptInputType_angleAxisExtent: number | string;
    /**
     * Gets or sets the distance between the Y-axis and the left edge of the chart.
    */
    get valueAxisExtent(): number;
    set valueAxisExtent(v: number);
    static ngAcceptInputType_valueAxisExtent: number | string;
    /**
     * Gets or sets the angle of rotation for the X-axis title.
    */
    get angleAxisTitleAngle(): number;
    set angleAxisTitleAngle(v: number);
    static ngAcceptInputType_angleAxisTitleAngle: number | string;
    /**
     * Gets or sets the angle of rotation for the Y-axis title.
    */
    get valueAxisTitleAngle(): number;
    set valueAxisTitleAngle(v: number);
    static ngAcceptInputType_valueAxisTitleAngle: number | string;
    /**
     * Gets or sets whether to invert the direction of the X-axis by placing the first data items on the right side of the chart.
    */
    get angleAxisInverted(): boolean;
    set angleAxisInverted(v: boolean);
    static ngAcceptInputType_angleAxisInverted: boolean | string;
    /**
     * Gets or sets whether to invert the direction of the Y-axis by placing the minimum numeric value at the top of the chart.
    */
    get valueAxisInverted(): boolean;
    set valueAxisInverted(v: boolean);
    static ngAcceptInputType_valueAxisInverted: boolean | string;
    /**
     * Gets or sets Horizontal alignment of the X-axis title.
    */
    get angleAxisTitleAlignment(): HorizontalAlignment;
    set angleAxisTitleAlignment(v: HorizontalAlignment);
    static ngAcceptInputType_angleAxisTitleAlignment: HorizontalAlignment | string;
    /**
     * Gets or sets Vertical alignment of the Y-axis title.
    */
    get valueAxisTitleAlignment(): VerticalAlignment;
    set valueAxisTitleAlignment(v: VerticalAlignment);
    static ngAcceptInputType_valueAxisTitleAlignment: VerticalAlignment | string;
    /**
     * Gets or sets Horizontal alignment of X-axis labels.
    */
    get angleAxisLabelHorizontalAlignment(): HorizontalAlignment;
    set angleAxisLabelHorizontalAlignment(v: HorizontalAlignment);
    static ngAcceptInputType_angleAxisLabelHorizontalAlignment: HorizontalAlignment | string;
    /**
     * Gets or sets Horizontal alignment of Y-axis labels.
    */
    get valueAxisLabelHorizontalAlignment(): HorizontalAlignment;
    set valueAxisLabelHorizontalAlignment(v: HorizontalAlignment);
    static ngAcceptInputType_valueAxisLabelHorizontalAlignment: HorizontalAlignment | string;
    /**
     * Gets or sets Vertical alignment of X-axis labels.
    */
    get angleAxisLabelVerticalAlignment(): VerticalAlignment;
    set angleAxisLabelVerticalAlignment(v: VerticalAlignment);
    static ngAcceptInputType_angleAxisLabelVerticalAlignment: VerticalAlignment | string;
    /**
     * Gets or sets Vertical alignment of Y-axis labels.
    */
    get valueAxisLabelVerticalAlignment(): VerticalAlignment;
    set valueAxisLabelVerticalAlignment(v: VerticalAlignment);
    static ngAcceptInputType_valueAxisLabelVerticalAlignment: VerticalAlignment | string;
    /**
     * Gets or sets Visibility of X-axis labels.
    */
    get angleAxisLabelVisibility(): Visibility;
    set angleAxisLabelVisibility(v: Visibility);
    static ngAcceptInputType_angleAxisLabelVisibility: Visibility | string;
    /**
     * Gets or sets Visibility of Y-axis labels.
    */
    get valueAxisLabelVisibility(): Visibility;
    set valueAxisLabelVisibility(v: Visibility);
    static ngAcceptInputType_valueAxisLabelVisibility: Visibility | string;
    /**
     * Gets or sets location of Y-axis labels, relative to the plot area.
    */
    get valueAxisLabelLocation(): ValueAxisLabelLocation;
    set valueAxisLabelLocation(v: ValueAxisLabelLocation);
    static ngAcceptInputType_valueAxisLabelLocation: ValueAxisLabelLocation | string;
    /**
     * Gets or sets location of X-axis labels, relative to the plot area.
    */
    get angleAxisLabelLocation(): AngleAxisLabelLocation;
    set angleAxisLabelLocation(v: AngleAxisLabelLocation);
    static ngAcceptInputType_angleAxisLabelLocation: AngleAxisLabelLocation | string;
    /**
     * Gets or sets the format string for the X axis label.
    */
    get angleAxisLabelFormat(): string;
    set angleAxisLabelFormat(v: string);
    /**
     * Gets or sets the format specifiers to use with the AngleAxisLabelFormat string.
    */
    get angleAxisLabelFormatSpecifiers(): any[];
    set angleAxisLabelFormatSpecifiers(v: any[]);
    static ngAcceptInputType_angleAxisLabelFormatSpecifiers: any[] | string;
    /**
     * Gets or sets the format string for the Y axis label.
    */
    get valueAxisLabelFormat(): string;
    set valueAxisLabelFormat(v: string);
    /**
     * Gets or sets the format specifiers to use with the ValueAxisLabelFormat string.
    */
    get valueAxisLabelFormatSpecifiers(): any[];
    set valueAxisLabelFormatSpecifiers(v: any[]);
    static ngAcceptInputType_valueAxisLabelFormatSpecifiers: any[] | string;
    findByName(name: string): any;
    /**
     * Called by the UI framework to provide a UI container for rendering this control.
    
    * @param container  * The UI container element.
    */
    provideContainer(container: any): void;
    /**
     * Converts the given visual location to a data value.
    
    * @param unscaledValue  * The x-coordinate of the location to scale.
    */
    getScaledAngle(unscaledValue: number): number;
    /**
     * Converts the given data value to a visual location.
    
    * @param scaledValue  * The data value to un-scale.
    */
    getUnscaledAngle(scaledValue: number): number;
    /**
     * Converts the given visual location to a data value.
    
    * @param unscaledValue  * The y-coordinate of the location to scale.
    */
    getScaledValue(unscaledValue: number): number;
    /**
     * Converts the given data value to a visual location.
    
    * @param scaledValue  * The data value to un-scale.
    */
    getUnscaledValue(scaledValue: number): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxRadialBaseChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxRadialBaseChartComponent, "ng-component", never, { "angleAxisFormatLabel": "angleAxisFormatLabel"; "valueAxisFormatLabel": "valueAxisFormatLabel"; "angleAxisLabelLeftMargin": "angleAxisLabelLeftMargin"; "angleAxisLabelTopMargin": "angleAxisLabelTopMargin"; "angleAxisLabelRightMargin": "angleAxisLabelRightMargin"; "angleAxisLabelBottomMargin": "angleAxisLabelBottomMargin"; "valueAxisLabelLeftMargin": "valueAxisLabelLeftMargin"; "valueAxisLabelTopMargin": "valueAxisLabelTopMargin"; "valueAxisLabelRightMargin": "valueAxisLabelRightMargin"; "valueAxisLabelBottomMargin": "valueAxisLabelBottomMargin"; "angleAxisLabelTextColor": "angleAxisLabelTextColor"; "valueAxisLabelTextColor": "valueAxisLabelTextColor"; "actualAngleAxisLabelTextColor": "actualAngleAxisLabelTextColor"; "actualValueAxisLabelTextColor": "actualValueAxisLabelTextColor"; "angleAxisTitleMargin": "angleAxisTitleMargin"; "valueAxisTitleMargin": "valueAxisTitleMargin"; "angleAxisTitleLeftMargin": "angleAxisTitleLeftMargin"; "valueAxisTitleLeftMargin": "valueAxisTitleLeftMargin"; "angleAxisTitleTopMargin": "angleAxisTitleTopMargin"; "valueAxisTitleTopMargin": "valueAxisTitleTopMargin"; "angleAxisTitleRightMargin": "angleAxisTitleRightMargin"; "valueAxisTitleRightMargin": "valueAxisTitleRightMargin"; "angleAxisTitleBottomMargin": "angleAxisTitleBottomMargin"; "valueAxisTitleBottomMargin": "valueAxisTitleBottomMargin"; "angleAxisTitleTextColor": "angleAxisTitleTextColor"; "valueAxisTitleTextColor": "valueAxisTitleTextColor"; "angleAxisLabelTextStyle": "angleAxisLabelTextStyle"; "valueAxisLabelTextStyle": "valueAxisLabelTextStyle"; "angleAxisTitleTextStyle": "angleAxisTitleTextStyle"; "valueAxisTitleTextStyle": "valueAxisTitleTextStyle"; "angleAxisLabel": "angleAxisLabel"; "valueAxisLabel": "valueAxisLabel"; "angleAxisMajorStroke": "angleAxisMajorStroke"; "valueAxisMajorStroke": "valueAxisMajorStroke"; "angleAxisMajorStrokeThickness": "angleAxisMajorStrokeThickness"; "valueAxisMajorStrokeThickness": "valueAxisMajorStrokeThickness"; "angleAxisMinorStrokeThickness": "angleAxisMinorStrokeThickness"; "valueAxisMinorStrokeThickness": "valueAxisMinorStrokeThickness"; "angleAxisStrip": "angleAxisStrip"; "valueAxisStrip": "valueAxisStrip"; "angleAxisStroke": "angleAxisStroke"; "valueAxisStroke": "valueAxisStroke"; "angleAxisStrokeThickness": "angleAxisStrokeThickness"; "valueAxisStrokeThickness": "valueAxisStrokeThickness"; "angleAxisTickLength": "angleAxisTickLength"; "valueAxisTickLength": "valueAxisTickLength"; "angleAxisTickStroke": "angleAxisTickStroke"; "valueAxisTickStroke": "valueAxisTickStroke"; "angleAxisTickStrokeThickness": "angleAxisTickStrokeThickness"; "valueAxisTickStrokeThickness": "valueAxisTickStrokeThickness"; "angleAxisTitle": "angleAxisTitle"; "valueAxisTitle": "valueAxisTitle"; "angleAxisMinorStroke": "angleAxisMinorStroke"; "valueAxisMinorStroke": "valueAxisMinorStroke"; "angleAxisLabelAngle": "angleAxisLabelAngle"; "valueAxisLabelAngle": "valueAxisLabelAngle"; "angleAxisExtent": "angleAxisExtent"; "valueAxisExtent": "valueAxisExtent"; "angleAxisTitleAngle": "angleAxisTitleAngle"; "valueAxisTitleAngle": "valueAxisTitleAngle"; "angleAxisInverted": "angleAxisInverted"; "valueAxisInverted": "valueAxisInverted"; "angleAxisTitleAlignment": "angleAxisTitleAlignment"; "valueAxisTitleAlignment": "valueAxisTitleAlignment"; "angleAxisLabelHorizontalAlignment": "angleAxisLabelHorizontalAlignment"; "valueAxisLabelHorizontalAlignment": "valueAxisLabelHorizontalAlignment"; "angleAxisLabelVerticalAlignment": "angleAxisLabelVerticalAlignment"; "valueAxisLabelVerticalAlignment": "valueAxisLabelVerticalAlignment"; "angleAxisLabelVisibility": "angleAxisLabelVisibility"; "valueAxisLabelVisibility": "valueAxisLabelVisibility"; "valueAxisLabelLocation": "valueAxisLabelLocation"; "angleAxisLabelLocation": "angleAxisLabelLocation"; "angleAxisLabelFormat": "angleAxisLabelFormat"; "angleAxisLabelFormatSpecifiers": "angleAxisLabelFormatSpecifiers"; "valueAxisLabelFormat": "valueAxisLabelFormat"; "valueAxisLabelFormatSpecifiers": "valueAxisLabelFormatSpecifiers"; }, {}, never, never>;
}
