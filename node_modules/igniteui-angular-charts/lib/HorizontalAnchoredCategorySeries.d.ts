import { AnchoredCategorySeries } from "./AnchoredCategorySeries";
import { IHorizontalAnchoredCategorySeriesInteractionManager } from "./IHorizontalAnchoredCategorySeriesInteractionManager";
import { Type, Point } from "igniteui-angular-core";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { NumericYAxis } from "./NumericYAxis";
import { NumericAxisBase } from "./NumericAxisBase";
import { CategoryMode } from "./CategoryMode";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-angular-core";
import { ScalerParams } from "./ScalerParams";
import { FastItemsSourceEventAction } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare abstract class HorizontalAnchoredCategorySeries extends AnchoredCategorySeries {
    static $t: Type;
    private aby;
    get abz(): IHorizontalAnchoredCategorySeriesInteractionManager;
    o0(): void;
    ci(): SeriesPlotAreaMarginHorizontalMode;
    cj(): SeriesPlotAreaMarginVerticalMode;
    xAxis: CategoryAxisBase;
    yAxis: NumericYAxis;
    protected b0(): SeriesHitTestMode;
    yk(): CategoryAxisBase;
    y0(): NumericAxisBase;
    wj(a: Point): Rect;
    private acc;
    protected ab4(a: Point, b: Point, c: boolean): boolean;
    aj(a: Point): Point[][];
    ak(a: Point): Point[][];
    gu(a: Point, b: boolean): boolean;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    i3(a: Point, b: boolean, c: boolean): number;
    j8(a: Point, b: boolean): number;
    j6(a: Point, b: boolean): number;
    im(a: Point, b: number, c: Axis, d: ScalerParams, e: number): number;
    v6(a: Point, b: boolean, c: boolean): Point;
    fetchXAxis(): Axis;
    fetchYAxis(): Axis;
    aa8(a: Axis): void;
    aa9(a: Axis): void;
    zg(): boolean;
    protected abu: CategoryAxisBase;
    protected ab0: NumericAxisBase;
    ab8(a: CategoryAxisBase): void;
    ab9(a: NumericYAxis): void;
    ye(a: number, b: number): any[];
    protected q5(a: any, b: string, c: any, d: any): void;
    protected o9(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    ab2(a: any): boolean;
    ab3(a: any): boolean;
    private abw;
    get abx(): CategoryMode;
    set abx(a: CategoryMode);
    get useHighMarkerFidelity(): boolean;
    static $$p: string[];
}
