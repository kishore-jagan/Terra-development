import { AxisRangeChangedEventArgs as AxisRangeChangedEventArgs_internal } from "./AxisRangeChangedEventArgs";
/**
 * Provides data for Axis RangeChanged events.
*
* The `AxisRangeChangedEventArgs` event fire when the axis range changes.
*/
export declare class IgxAxisRangeChangedEventArgs {
    protected createImplementation(): AxisRangeChangedEventArgs_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    get i(): AxisRangeChangedEventArgs_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets the minimum value before the range changed. The reported minimum is the effective,
     * not the set value.
    *
    * The `OldMinimumValue` property is used to gets the minimum value before the range changed.
    */
    get oldMinimumValue(): number;
    set oldMinimumValue(v: number);
    static ngAcceptInputType_oldMinimumValue: number | string;
    /**
     * Gets the minimum value after the range changed. The reported minimum is the effective,
     * not the set value.
    *
    * The `MinimumValue` property is used to getsthe minimum value after the range changed.
    *
    * ```ts
    *   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) :void {
    * 	let maxVal= e.maximumValue
    * 	let minVal= e.minimumValue
    *
    *     }
    * ```
    */
    get minimumValue(): number;
    set minimumValue(v: number);
    static ngAcceptInputType_minimumValue: number | string;
    /**
     * Gets the maximum value before the range changed. The reported maximum is the effective,
     * not the set value.
    *
    * The `OldMaximumValue` property is used to gets the maximum value before the range changed.
    */
    get oldMaximumValue(): number;
    set oldMaximumValue(v: number);
    static ngAcceptInputType_oldMaximumValue: number | string;
    /**
     * Gets the maximum value after the range changed. The reported maximum is the effective,
     * not the set value.
    *
    * The `MaximumValue` property is used to gets the maximum value after the range changed.
    *
    * ```ts
    *   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) :void {
    * 	let maxVal= e.maximumValue
    * 	let minVal= e.minimumValue
    *
    *     }
    * ```
    */
    get maximumValue(): number;
    set maximumValue(v: number);
    static ngAcceptInputType_maximumValue: number | string;
}
