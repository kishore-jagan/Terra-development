import { IgDataTemplate } from "igniteui-angular-core";
import { IgxStyle } from "igniteui-angular-core";
import { MarkerType } from "./MarkerType";
import { CollisionAvoidanceType } from "./CollisionAvoidanceType";
import { MarkerOutlineMode } from "./MarkerOutlineMode";
import { MarkerFillMode } from "./MarkerFillMode";
import { IgxShapeSeriesBaseComponent } from "./igx-shape-series-base-component";
import { ScatterPolygonSeries } from "./ScatterPolygonSeries";
import * as i0 from "@angular/core";
/**
 * Series class which renders polygons as Paths based on lists of points in the ItemsSource.
*/
export declare class IgxScatterPolygonSeriesComponent extends IgxShapeSeriesBaseComponent {
    protected createImplementation(): ScatterPolygonSeries;
    /**
                                 * @hidden
                                 */
    get i(): ScatterPolygonSeries;
    constructor();
    /**
     * Gets whether the current series shows a polygon shape.
    */
    get isPolygon(): boolean;
    static ngAcceptInputType_isPolygon: boolean | string;
    /**
     * Overridden by derived series classes to indicate when marker-less display is preferred or not.
    */
    get isMarkerlessDisplayPreferred(): boolean;
    static ngAcceptInputType_isMarkerlessDisplayPreferred: boolean | string;
    /**
     * Returns whether the current series supports visual markers.
    */
    get hasMarkers(): boolean;
    static ngAcceptInputType_hasMarkers: boolean | string;
    get hasVisibleMarkers(): boolean;
    static ngAcceptInputType_hasVisibleMarkers: boolean | string;
    /**
     * The default style to apply to all Shapes in the series.
    */
    get shapeStyle(): IgxStyle;
    set shapeStyle(v: IgxStyle);
    /**
     * Gets or sets the marker type for the current series object.
     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.
    */
    get markerType(): MarkerType;
    set markerType(v: MarkerType);
    static ngAcceptInputType_markerType: MarkerType | string;
    /**
     * Gets or sets the MarkerTemplate for the current series object.
    */
    get markerTemplate(): IgDataTemplate;
    set markerTemplate(v: IgDataTemplate);
    /**
     * Gets or sets thickness of the marker outline
    */
    get markerThickness(): number;
    set markerThickness(v: number);
    static ngAcceptInputType_markerThickness: number | string;
    /**
     * Gets the effective marker template for the current series object.
    */
    get actualMarkerTemplate(): IgDataTemplate;
    set actualMarkerTemplate(v: IgDataTemplate);
    /**
     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.
    */
    get markerBrush(): string;
    set markerBrush(v: string);
    /**
     * Gets the effective marker brush for the current series object.
    */
    get actualMarkerBrush(): string;
    set actualMarkerBrush(v: string);
    /**
     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.
    */
    get markerOutline(): string;
    set markerOutline(v: string);
    /**
     * Gets the effective marker outline for the current series object.
    */
    get actualMarkerOutline(): string;
    set actualMarkerOutline(v: string);
    /**
     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.
    */
    get markerCollisionAvoidance(): CollisionAvoidanceType;
    set markerCollisionAvoidance(v: CollisionAvoidanceType);
    static ngAcceptInputType_markerCollisionAvoidance: CollisionAvoidanceType | string;
    /**
     * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.
    */
    get markerOutlineMode(): MarkerOutlineMode;
    set markerOutlineMode(v: MarkerOutlineMode);
    static ngAcceptInputType_markerOutlineMode: MarkerOutlineMode | string;
    /**
     * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.
    */
    get markerFillMode(): MarkerFillMode;
    set markerFillMode(v: MarkerFillMode);
    static ngAcceptInputType_markerFillMode: MarkerFillMode | string;
    findByName(name: string): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxScatterPolygonSeriesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxScatterPolygonSeriesComponent, "igx-scatter-polygon-series", never, { "shapeStyle": "shapeStyle"; "markerType": "markerType"; "markerTemplate": "markerTemplate"; "markerThickness": "markerThickness"; "actualMarkerTemplate": "actualMarkerTemplate"; "markerBrush": "markerBrush"; "actualMarkerBrush": "actualMarkerBrush"; "markerOutline": "markerOutline"; "actualMarkerOutline": "actualMarkerOutline"; "markerCollisionAvoidance": "markerCollisionAvoidance"; "markerOutlineMode": "markerOutlineMode"; "markerFillMode": "markerFillMode"; }, {}, never, never>;
}
