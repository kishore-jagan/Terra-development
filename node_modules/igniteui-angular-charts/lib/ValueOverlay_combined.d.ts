import { Series } from "./Series";
import { IHasCategoryModePreference } from "./IHasCategoryModePreference";
import { Axis } from "./Axis";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { Type, Point } from "igniteui-angular-core";
import { Brush } from "igniteui-angular-core";
import { Thickness } from "igniteui-angular-core";
import { SeriesView } from "./SeriesView";
import { Rect } from "igniteui-angular-core";
import { AxisRange } from "./AxisRange";
import { Geometry } from "igniteui-angular-core";
import { FastItemsSourceEventAction } from "igniteui-angular-core";
import { CategoryMode } from "./CategoryMode";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class ValueOverlay extends Series implements IHasCategoryModePreference {
    static $t: Type;
    protected bi(): Series;
    constructor();
    wq: Axis;
    w9: number;
    w7: number;
    w8: number;
    w4: number;
    i3(a: Point, b: boolean, c: boolean): number;
    w5(a: Point, b: Point): number;
    v6(a: Point, b: boolean, c: boolean): Point;
    j1(a: Point): number;
    kl(a: Point): any;
    gb(a: any): boolean;
    ax(a: Axis): AxisRange;
    ro(a: boolean): void;
    w6(): number;
    xr(a: number, b: ValueOverlayView): void;
    hc(a: Rect, b: Rect, c: SeriesView): boolean;
    protected sl(a: Rect, b: Rect): void;
    protected sk(a: Rect, b: Rect): void;
    protected o9(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected q5(a: any, b: string, c: any, d: any): void;
    p6(): void;
    o3(a: boolean, b: SeriesView): void;
    private wv;
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    get categoryAxis(): CategoryAxisBase;
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    private wt;
    rp(a: Rect, b: RenderSurface): void;
    getOffsetValue(): number;
    getCategoryWidth(): number;
    wu: boolean;
    ws: (item: any) => string;
    x9: Brush;
    x7: Brush;
    wy: number;
    xa: number;
    x8: Brush;
    get ya(): Thickness;
    w0: number;
    w2: number;
    w1: number;
    wz: number;
    w3: number;
    ai(): Axis[];
    private wr;
    private wx;
    private ww;
    protected xs(a: number, b: boolean): void;
    protected get_isValueOverlay(): boolean;
    xn(a: number): string;
    get xp(): string;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ValueOverlayView extends SeriesView {
    static $t: Type;
    constructor(a: ValueOverlay);
    private b2;
    protected bd(): void;
    protected be(): void;
    b1(a: Geometry): void;
    b0(): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
}
