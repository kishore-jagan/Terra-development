import { AxisAngleLabelMode } from "./AxisAngleLabelMode";
import { IgxNumericAxisBaseComponent } from "./igx-numeric-axis-base-component";
import { NumericAngleAxis } from "./NumericAngleAxis";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent angle based axis for polar series.
*/
export declare class IgxNumericAngleAxisComponent extends IgxNumericAxisBaseComponent {
    protected createImplementation(): NumericAngleAxis;
    /**
                                 * @hidden
                                 */
    get i(): NumericAngleAxis;
    constructor();
    /**
     * Gets if the current axis is of angular axis type
    */
    get isAngular(): boolean;
    static ngAcceptInputType_isAngular: boolean | string;
    /**
     * Indicates the angle in degress that the chart's 0th angle should be offset.
    */
    get startAngleOffset(): number;
    set startAngleOffset(v: number);
    static ngAcceptInputType_startAngleOffset: number | string;
    /**
     * Indicates the mode axis labels will operate in.
    */
    get labelMode(): AxisAngleLabelMode;
    set labelMode(v: AxisAngleLabelMode);
    static ngAcceptInputType_labelMode: AxisAngleLabelMode | string;
    /**
     * Gets the scaled angle value in radians based on the raw input.
    
    * @param unscaledAngle  * The unscaled angle.
    */
    getScaledAngle(unscaledAngle: number): number;
    /**
     * Gets the raw axis value back from the angle that would be used on the chart.
    
    * @param scaledAngle  * The chart angle value.
    */
    getUnscaledAngle(scaledAngle: number): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxNumericAngleAxisComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxNumericAngleAxisComponent, "igx-numeric-angle-axis", never, { "startAngleOffset": "startAngleOffset"; "labelMode": "labelMode"; }, {}, never, never>;
}
