import { Series } from "./Series";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { IFastItemColumn$1 } from "igniteui-angular-core";
import { Color } from "igniteui-angular-core";
import { Type, Point } from "igniteui-angular-core";
import { Rect } from "igniteui-angular-core";
import { Axis } from "./Axis";
import { SeriesView } from "./SeriesView";
import { ProgressiveLoadStatusEventArgs } from "./ProgressiveLoadStatusEventArgs";
import { FastItemsSourceEventAction } from "igniteui-angular-core";
import { AxisRange } from "./AxisRange";
import { RenderSurface } from "./RenderSurface";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class HighDensityScatterSeries extends Series {
    static $t: Type;
    protected bi(): Series;
    protected get_fm(): boolean;
    protected ji(): number;
    constructor();
    protected get_fu(): boolean;
    wx: NumericXAxis;
    wz: NumericYAxis;
    y0: string;
    protected get w4(): IFastItemColumn$1<number>;
    protected set w4(a: IFastItemColumn$1<number>);
    private w3;
    yw: string;
    y4: string;
    yy: string;
    y6: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    ko(a: any, b: string): any;
    mb(a: string): string;
    y8: string;
    protected get w6(): IFastItemColumn$1<number>;
    protected set w6(a: IFastItemColumn$1<number>);
    private w5;
    xd: boolean;
    xc: boolean;
    x8: number;
    x7: number;
    z6: Color;
    z5: Color;
    yk: number;
    private zn;
    protected q5(a: any, b: string, c: any, d: any): void;
    private zh;
    xb(a: any): boolean;
    xa(a: any): boolean;
    private zd;
    private ye;
    private w7;
    private xt;
    private xs;
    private xr;
    private xq;
    private xp;
    private xo;
    private xn;
    private xm;
    private get xx();
    private get xw();
    private get xv();
    private get xu();
    private wv;
    private w0;
    private w1;
    private ww;
    private wy;
    private w9;
    hc(a: Rect, b: Rect, c: SeriesView): boolean;
    private yf;
    get yl(): number;
    set yl(a: number);
    ro(a: boolean): void;
    private zf;
    private yh;
    private yb;
    private ya;
    protected o9(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    private zc;
    private zi;
    private zg;
    progressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void;
    private za;
    private ze;
    private xe;
    private zp;
    private xk;
    private xj;
    private xl;
    private x0;
    private xy;
    private xz;
    private x1;
    private x3;
    private x5;
    private x4;
    private x2;
    private xg;
    private xh;
    private xi;
    private xf;
    private zk;
    gb(a: any): boolean;
    private zm;
    private yi;
    private yj;
    private x6;
    private zl;
    private zj;
    private yd;
    private yc;
    private ws;
    private yg;
    private zb;
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    protected wu: HighDensityScatterSeriesView;
    ax(a: Axis): AxisRange;
    private w8;
    protected sk(a: Rect, b: Rect): void;
    protected sl(a: Rect, b: Rect): void;
    private _itemIndexes;
    private wt;
    private wq;
    kl(a: Point): any;
    private ym;
    zo(a: number[], b: number, c: number): void;
    protected get_g5(): boolean;
    protected set_g5(a: boolean): void;
    o3(a: boolean, b: SeriesView): void;
    rp(a: Rect, b: RenderSurface): void;
    private w2;
    rm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void;
    o0(): void;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class HighDensityScatterSeriesView extends SeriesView {
    static $t: Type;
    constructor(a: HighDensityScatterSeries);
    au(): void;
    cd(): void;
    protected b2: HighDensityScatterSeries;
    private b0;
    private b8;
    private b7;
    private b5;
    private b6;
    private b3;
    b9(): void;
    b1(): number[];
    cc(): void;
    cb(a: () => void): void;
    protected a8(a: RenderingContext, b: boolean): void;
    b4(a: Color, b: Color): boolean;
    ca(): void;
    an(a: any): void;
}
