import { MarkerSeries } from "./MarkerSeries";
import { Point, Type } from "igniteui-angular-core";
import { PolarAxisInfoCache } from "./PolarAxisInfoCache";
import { SeriesRenderer$2 } from "./SeriesRenderer$2";
import { PolarFrame } from "./PolarFrame";
import { DependencyProperty } from "igniteui-angular-core";
import { IFastItemColumn$1 } from "igniteui-angular-core";
import { Series } from "./Series";
import { NumericAngleAxis } from "./NumericAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { TrendLineType } from "igniteui-angular-core";
import { Brush } from "igniteui-angular-core";
import { PenLineCap } from "igniteui-angular-core";
import { DoubleCollection } from "igniteui-angular-core";
import { ScatterItemSearchMode } from "./ScatterItemSearchMode";
import { HighlightingInfo } from "igniteui-angular-core";
import { SeriesView } from "./SeriesView";
import { List$1 } from "igniteui-angular-core";
import { SeriesPointOfInterest } from "./SeriesPointOfInterest";
import { Axis } from "./Axis";
import { Rect } from "igniteui-angular-core";
import { Marker } from "./Marker";
import { MarkerSeriesView } from "./MarkerSeriesView";
import { PolarAxes } from "./PolarAxes";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { FastItemsSourceEventAction } from "igniteui-angular-core";
import { AxisRange } from "./AxisRange";
import { OwnedPoint } from "./OwnedPoint";
import { HashPool$2 } from "igniteui-angular-core";
import { MarkerManagerBase } from "./MarkerManagerBase";
import { PolarTrendLineManager } from "./PolarTrendLineManager";
import { AssigningPolarStyleEventArgs } from "./AssigningPolarStyleEventArgs";
import { AssigningPolarMarkerStyleEventArgs } from "./AssigningPolarMarkerStyleEventArgs";
import { AssigningSeriesStyleEventArgsBase } from "./AssigningSeriesStyleEventArgsBase";
import { SeriesRenderManager } from "./SeriesRenderManager";
import { RenderSurface } from "./RenderSurface";
import { IDictionary$2 } from "igniteui-angular-core";
import { AssigningSeriesShapeStyleEventArgsBase } from "./AssigningSeriesShapeStyleEventArgsBase";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare abstract class PolarBase extends MarkerSeries {
    static $t: Type;
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    yp: PolarBaseView;
    private yq;
    o0(): void;
    protected get_fn(): boolean;
    d9(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number): boolean;
    constructor();
    private aay;
    private aa0;
    private yh;
    yo: PolarAxisInfoCache;
    private ab7;
    private ab6;
    private ab5;
    y2: SeriesRenderer$2<PolarFrame, PolarBaseView>;
    aab: string;
    aat: string;
    aag: string;
    aae: string;
    protected f9(): boolean;
    protected zq(): boolean;
    protected hr(): List$1<SeriesLayerPropertyOverlay>;
    private aa2;
    private aa1;
    protected get zb(): IFastItemColumn$1<number>;
    protected set zb(a: IFastItemColumn$1<number>);
    private y9;
    protected get zc(): IFastItemColumn$1<number>;
    protected set zc(a: IFastItemColumn$1<number>);
    private za;
    yl: NumericAngleAxis;
    ym: NumericRadiusAxis;
    zr: boolean;
    z1: number;
    y3: TrendLineType;
    ab0: Brush;
    get abz(): Brush;
    set abz(a: Brush);
    static readonly aba: DependencyProperty;
    zz: number;
    ab2: PenLineCap;
    ab1: DoubleCollection;
    z2: number;
    z3: number;
    zh: boolean;
    yu: PolarFrame;
    yw: PolarFrame;
    ys: PolarFrame;
    yt(): PolarFrame;
    yn: PolarAxes;
    p6(): void;
    protected o9(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    protected sk(a: Rect, b: Rect): void;
    protected sl(a: Rect, b: Rect): void;
    hc(a: Rect, b: Rect, c: SeriesView): boolean;
    ro(a: boolean): void;
    private ab4;
    ax(a: Axis): AxisRange;
    gb(a: any): boolean;
    kl(a: Point): any;
    j1(a: Point): number;
    ip(a: Point): number;
    protected zv(a: Point): number;
    protected zu(a: Point): number;
    private zi;
    private zs;
    private zy;
    protected zx(a: Point): number;
    protected zw(a: Point): number;
    v6(a: Point, b: boolean, c: boolean): Point;
    ai(): Axis[];
    ko(a: any, b: string): any;
    mb(a: string): string;
    protected q5(a: any, b: string, c: any, d: any): void;
    private yy;
    get yz(): ScatterItemSearchMode;
    set yz(a: ScatterItemSearchMode);
    protected y0(): ScatterItemSearchMode;
    protected get_zl(): boolean;
    protected get zl(): boolean;
    protected zn(): boolean;
    protected zm(): boolean;
    y1: ScatterItemSearchMode;
    z0: number;
    zg(a: any): boolean;
    zf(a: any): boolean;
    o3(a: boolean, b: SeriesView): void;
    private yi;
    aax(a: PolarFrame, b: number, c: Rect, d: Rect): void;
    aa5(a: PolarFrame, b: PolarBaseView): void;
    zk: boolean;
    zj: boolean;
    protected ze: boolean;
    protected zd: boolean;
    protected get_fc(): boolean;
    private y7;
    private y8;
    protected y5(a: any, b: Point, c: HighlightingInfo): HighlightingInfo;
    protected y6(a: any, b: Point, c: HighlightingInfo): HighlightingInfo;
    protected y4(a: any, b: Point, c: HighlightingInfo): HighlightingInfo;
    de(a: any, b: Point, c: boolean): HighlightingInfo;
    df(a: any, b: Point, c: boolean): HighlightingInfo;
    assigningPolarStyle: (sender: any, args: AssigningPolarStyleEventArgs) => void;
    assigningPolarMarkerStyle: (sender: any, args: AssigningPolarMarkerStyleEventArgs) => void;
    protected zp(): boolean;
    protected zo(): boolean;
    aa9(a: PolarFrame, b: PolarBaseView): void;
    yf(a: number, b: number): any[];
    protected yg(a: number, b: number): any[];
    protected yx: PolarSeriesRenderManager;
    aaz(a: PolarBaseView, b: PolarFrame): void;
    protected aa4(a: number, b: number, c: boolean): void;
    protected aa3(a: number, b: number, c: boolean): void;
    protected aa7(a: AssigningPolarStyleEventArgs): void;
    protected aa6(a: AssigningPolarMarkerStyleEventArgs): void;
    private aaw;
    protected sb(): void;
    yv: PolarFrame;
    rp(a: Rect, b: RenderSurface): void;
    private yr;
    rm(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void;
    aa8(a: IDictionary$2<any, OwnedPoint>, b: HashPool$2<any, Marker>): void;
    ye(a: HashPool$2<any, Marker>, b: Rect, c: Rect): Point[];
    zt(a: HashPool$2<any, Marker>): List$1<number>;
    ab3(a: number): Point;
    protected pv(a: any): void;
    aap: string;
    z7: string;
    aar: string;
    z9: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class PolarSeriesRenderManager extends SeriesRenderManager {
    static $t: Type;
    protected c(): AssigningSeriesStyleEventArgsBase;
    protected a(): AssigningSeriesShapeStyleEventArgsBase;
    aw: AssigningPolarMarkerStyleEventArgs;
    ax: AssigningPolarStyleEventArgs;
    ay(a: PolarBase, b: boolean, c: (orderedStartIndex: number, orderedEndIndex: number) => any[]): void;
    az(a: Series, b: boolean, c: (orderedStartIndex: number, orderedEndIndex: number) => any[]): void;
    a0(a: AssigningSeriesStyleEventArgsBase, b: number, c: number, d: boolean): void;
}
/**
 * @hidden
 */
export declare class PolarBaseView extends MarkerSeriesView {
    static $t: Type;
    protected cz: PolarBase;
    cy: MarkerManagerBase;
    constructor(a: PolarBase);
    c0: PolarTrendLineManager;
    au(): void;
    c4(a: (arg1: Marker) => void): void;
    protected cx(): MarkerManagerBase;
    protected c5(a: IDictionary$2<any, OwnedPoint>): void;
    protected cw(): Point[];
    protected c2(): List$1<number>;
    c3(a: Rect, b: Rect, c: Rect, d: Rect): void;
    c6(): void;
    c1: HashPool$2<any, Marker>;
    cj(a: (arg1: Marker) => void): void;
    protected a7(a: RenderingContext, b: boolean): void;
    protected c7(): Rect;
    getDefaultTooltipTemplate(): string;
}
