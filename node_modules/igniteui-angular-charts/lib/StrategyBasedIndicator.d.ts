import { FinancialIndicator } from "./FinancialIndicator";
import { IndicatorCalculationStrategy } from "./IndicatorCalculationStrategy";
import { Type, IList$1 } from "igniteui-angular-core";
import { DependencyProperty } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { FinancialCalculationDataSource } from "./FinancialCalculationDataSource";
/**
 * @hidden
 */
export declare abstract class StrategyBasedIndicator extends FinancialIndicator {
    static $t: Type;
    constructor();
    protected ab1(): void;
    protected abm: IndicatorCalculationStrategy;
    protected abstract get abn(): IndicatorCalculationStrategy;
    protected abstract get ab0(): Type;
    static abq: List$1<string>;
    protected abt(): number;
    ab2(a: number): void;
    protected abv(): number;
    protected abs(): number;
    static ab6(a: number, b: Type, c: string): DependencyProperty;
    protected static ab5(a: number, b: Type): DependencyProperty;
    protected static ab3(a: number, b: Type): DependencyProperty;
    protected static ab7(a: number, b: Type): DependencyProperty;
    protected aaz(a: number, b: number): IList$1<string>;
    protected aaw(a: number, b: number): boolean;
    protected abp(a: FinancialCalculationDataSource): boolean;
    private abo;
    protected abu(a: number): number;
    protected xb(a: number, b: number): FinancialCalculationDataSource;
    protected abr(): number;
    protected static ab4(a: number, b: Type): DependencyProperty;
    protected q5(a: any, b: string, c: any, d: any): void;
}
