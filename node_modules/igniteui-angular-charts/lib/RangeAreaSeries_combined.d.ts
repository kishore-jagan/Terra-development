import { HorizontalRangeCategorySeries } from "./HorizontalRangeCategorySeries";
import { Series } from "./Series";
import { SeriesView } from "./SeriesView";
import { Point, Type } from "igniteui-angular-core";
import { CategoryMode } from "./CategoryMode";
import { CategoryAxisBase } from "./CategoryAxisBase";
import { CategoryFrame } from "./CategoryFrame";
import { CategorySeriesView } from "./CategorySeriesView";
import { List$1 } from "igniteui-angular-core";
import { Polyline } from "igniteui-angular-core";
import { Polygon } from "igniteui-angular-core";
import { RangeCategorySeriesView } from "./RangeCategorySeriesView";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class RangeAreaSeries extends HorizontalRangeCategorySeries {
    static $t: Type;
    protected bi(): Series;
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    abj: RangeAreaSeriesView;
    protected get_et(): boolean;
    protected get_es(): boolean;
    protected abk(a: Point, b: Point, c: Point, d: boolean): boolean;
    gu(a: Point, b: boolean): boolean;
    constructor();
    preferredCategoryMode(a: CategoryAxisBase): CategoryMode;
    o3(a: boolean, b: SeriesView): void;
    z4(a: CategoryFrame, b: CategorySeriesView): void;
    get useHighMarkerFidelity(): boolean;
}
/**
 * @hidden
 */
export declare class RangeAreaSeriesView extends RangeCategorySeriesView {
    static $t: Type;
    protected c7: RangeAreaSeries;
    constructor(a: RangeAreaSeries);
    au(): void;
    private df;
    private db;
    private dg;
    get dh(): Polyline;
    get dc(): Polygon;
    get di(): Polyline;
    c8(): void;
    c9(a: number, b: List$1<number[]>, c: boolean): void;
    private de;
    private dd;
    private da;
    protected be(): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
}
