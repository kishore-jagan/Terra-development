import { OnDestroy, Renderer2, ElementRef, NgZone } from '@angular/core';
import { IgxLegendBaseComponent } from './igx-legend-base-component';
import { ItemLegend } from "./ItemLegend";
import { LegendOrientation } from './LegendOrientation';
import * as i0 from "@angular/core";
/**
 * Represents a legend that displays an item for each point in the series.
*
* You can use the `ItemLegend` to display a legend item for each data member bound to the `BubbleSeries`
*/
export declare class IgxItemLegendComponent extends IgxLegendBaseComponent implements OnDestroy {
    private renderer;
    private elRef;
    private ngZone;
    container: Element;
    constructor(renderer: Renderer2, elRef: ElementRef, ngZone: NgZone);
    private _wrapper;
    ngOnDestroy(): void;
    protected createImplementation(): ItemLegend;
    get i(): ItemLegend;
    createItemwiseLegendItems(legendItems: any, series: any): void;
    exportVisualData(): any;
    exportSerializedVisualData(): any;
    /**
 * Gets whether or not this legend supports itemwise visuals
*/
    get isItemwise(): boolean;
    static ngAcceptInputType_isItemwise: boolean | string;
    /**
     * Gets or sets the current Legend object's orientation.
    */
    get orientation(): LegendOrientation;
    set orientation(v: LegendOrientation);
    static ngAcceptInputType_orientation: LegendOrientation | string;
    /**
     * Gets or sets color of text
    */
    get textColor(): string;
    set textColor(v: string);
    /**
     * Gets or sets style of text.
    */
    get textStyle(): string;
    set textStyle(v: string);
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxItemLegendComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxItemLegendComponent, "igx-item-legend", never, { "orientation": "orientation"; "textColor": "textColor"; "textStyle": "textStyle"; }, {}, never, never>;
}
