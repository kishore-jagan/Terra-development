import { Series } from "./Series";
import { Point, Type } from "igniteui-angular-core";
import { AnnotationAppearanceMode } from "./AnnotationAppearanceMode";
import { DoubleCollection } from "igniteui-angular-core";
import { Frame } from "./Frame";
import { SeriesView } from "./SeriesView";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { NotifyCollectionChangedEventArgs } from "igniteui-angular-core";
import { Axis } from "./Axis";
import { Brush } from "igniteui-angular-core";
import { Rect } from "igniteui-angular-core";
import { Tuple$2 } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare abstract class AnnotationLayer extends Series {
    static $t: Type;
    constructor();
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    protected xa(a: Series): boolean;
    protected w2: AnnotationLayerView;
    xc: boolean;
    xd: boolean;
    zn: Point;
    w7: boolean;
    protected get_ez(): boolean;
    wt: AnnotationAppearanceMode;
    wq: AnnotationAppearanceMode;
    xq: number;
    xf: number;
    w0: AnnotationAppearanceMode;
    wr: AnnotationAppearanceMode;
    w1: AnnotationAppearanceMode;
    ws: AnnotationAppearanceMode;
    xp: number;
    xe: number;
    xr: number;
    xg: number;
    zk: DoubleCollection;
    ze: DoubleCollection;
    zl: DoubleCollection;
    zf: DoubleCollection;
    protected b0(): SeriesHitTestMode;
    protected get_fe(): boolean;
    protected get_isUsableInLegend(): boolean;
    protected q5(a: any, b: string, c: any, d: any): void;
    protected zo: Point;
    private yq;
    private yp;
    private yl;
    private yk;
    protected w8(a: Axis): boolean;
    private ye;
    protected w9(a: Series): boolean;
    private yo;
    protected yg(a: Axis, b: boolean): void;
    protected yh(a: Series, b: boolean): void;
    private yn;
    private yd;
    protected zc(): Brush;
    protected zd(): Brush;
    protected yf(a: NotifyCollectionChangedEventArgs): void;
    protected yi(a: NotifyCollectionChangedEventArgs): void;
    protected w4: Frame;
    protected w3: Frame;
    protected w5: Frame;
    protected sl(a: Rect, b: Rect): void;
    protected sk(a: Rect, b: Rect): void;
    ro(a: boolean): void;
    protected get_eq(): boolean;
    protected yj(a: Frame, b: SeriesView): void;
    protected ym(a: Frame, b: SeriesView): void;
    protected yc(a: Series): Tuple$2<boolean, Point>;
    protected qn(a: Point): void;
    zm: Point;
    hc(a: Rect, b: Rect, c: SeriesView): boolean;
    protected xn(): number;
    protected xm(): number;
    protected xo(): number;
    protected wx(): AnnotationAppearanceMode;
    protected wy(): AnnotationAppearanceMode;
    protected wz(): AnnotationAppearanceMode;
    protected zi(): DoubleCollection;
    protected zj(): DoubleCollection;
    protected wu(): AnnotationAppearanceMode;
    protected wv(): AnnotationAppearanceMode;
    protected ww(): AnnotationAppearanceMode;
    protected xh(): number;
    protected xk(): number;
    protected xj(): number;
    protected xi(): number;
    protected xl(): number;
    protected zg(): DoubleCollection;
    protected zh(): DoubleCollection;
    protected yr(): void;
    protected get_g8(): boolean;
    private w6;
    get xb(): boolean;
    set xb(a: boolean);
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class AnnotationLayerView extends SeriesView {
    static $t: Type;
    constructor(a: AnnotationLayer);
    protected b0: AnnotationLayer;
    private b1;
    private b2;
    private b6;
    b3(): void;
    b5(): void;
    b4(): void;
}
