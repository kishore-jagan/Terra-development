import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { PercentageVolumeOscillatorIndicator } from "./PercentageVolumeOscillatorIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent Percentage Volume Oscillator (PVO) series.
 * Default required members: Volume
*
* You can use the `PercentageVolumeOscillatorIndicator` to show the percentage difference volume.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
*     <igx-percentage-volume-oscillator-indicator
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		openMemberPath="open"
* 		highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close">
*     </igx-percentage-volume-oscillator-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxPercentageVolumeOscillatorIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export declare class IgxPercentageVolumeOscillatorIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
    protected createImplementation(): PercentageVolumeOscillatorIndicator;
    /**
                                 * @hidden
                                 */
    get i(): PercentageVolumeOscillatorIndicator;
    constructor();
    /**
     * Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object.
     * The typical, and initial, value for short PVO periods is 10.
    *
    * You can use the `ShortPeriod` to set the short moving average period.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data" >
    *     <igx-category-x-axis
    * 		label="label"
    * 		#xAxis>
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis
    * 		#yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-percentage-volume-oscillator-indicator
    * 		#series
    * 		[xAxis]="xAxis"
    * 		[yAxis]="yAxis"
    * 		openMemberPath="open"
    * 		highMemberPath="high"
    * 		lowMemberPath="low"
    * 		closeMemberPath="close"
    * 		shortPeriod="10">
    *     </igx-percentage-volume-oscillator-indicator>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.shortPeriod = 30;
    * ```
    */
    get shortPeriod(): number;
    set shortPeriod(v: number);
    static ngAcceptInputType_shortPeriod: number | string;
    /**
     * Gets or sets the short moving average period for the current PercentageVolumeOscillatorIndicator object.
     * The typical, and initial, value for long PVO periods is 30.
    *
    * You can use the `LongPeriod` to set the long moving average period.
    *
    * ```html
    * <igx-data-chart
    *     [dataSource]="data" >
    *     <igx-category-x-axis
    * 		label="label"
    * 		#xAxis>
    *     </igx-category-x-axis>
    *     <igx-numeric-y-axis
    * 		#yAxis>
    *     </igx-numeric-y-axis>
    *     <igx-percentage-volume-oscillator-indicator
    * 		#series
    * 		[xAxis]="xAxis"
    * 		[yAxis]="yAxis"
    * 		openMemberPath="open"
    * 		highMemberPath="high"
    * 		lowMemberPath="low"
    * 		closeMemberPath="close"
    * 		longPeriod="30">
    *     </igx-percentage-volume-oscillator-indicator>
    * </igx-data-chart>
    * ```
    *
    * ```ts
    * this.series.longPeriod = 30;
    * ```
    */
    get longPeriod(): number;
    set longPeriod(v: number);
    static ngAcceptInputType_longPeriod: number | string;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxPercentageVolumeOscillatorIndicatorComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxPercentageVolumeOscillatorIndicatorComponent, "igx-percentage-volume-oscillator-indicator", never, { "shortPeriod": "shortPeriod"; "longPeriod": "longPeriod"; }, {}, never, never>;
}
