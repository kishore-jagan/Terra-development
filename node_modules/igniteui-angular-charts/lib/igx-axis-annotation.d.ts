import { AxisAnnotation as AxisAnnotation_internal } from "./AxisAnnotation";
/**
 * Represents an axis annotation
*/
export declare class IgxAxisAnnotation {
    protected createImplementation(): AxisAnnotation_internal;
    protected _implementation: any;
    /**
     * @hidden
     */
    get i(): AxisAnnotation_internal;
    private onImplementationCreated;
    constructor();
    protected _provideImplementation(i: any): void;
    /**
     * Gets or sets the value at which this annotation is displayed on the axis.
    */
    get value(): any;
    set value(v: any);
    /**
     * Gets or sets the text that should be displayed for the annotation. Leave null to display the value automatically.
    */
    get text(): string;
    set text(v: string);
    /**
     * Gets or sets the corner radius to use for the axis annotation borders.
    */
    get backgroundCornerRadius(): number;
    set backgroundCornerRadius(v: number);
    static ngAcceptInputType_backgroundCornerRadius: number | string;
    /**
     * Gets or sets the label format string to use for the label.
    */
    get labelFormat(): string;
    set labelFormat(v: string);
    /**
     * Gets or sets the format specifiers to use with the LabelFormat string.
    */
    get labelFormatSpecifiers(): any[];
    set labelFormatSpecifiers(v: any[]);
    static ngAcceptInputType_labelFormatSpecifiers: any[] | string;
    /**
     * Sets or gets a function which takes an object that produces a formatted label for the value of this annotation.
    */
    get formatLabel(): (item: any) => string;
    set formatLabel(v: (item: any) => string);
    /**
     * Gets or sets the color to use for the text in the annotation.
    */
    get textColor(): string;
    set textColor(v: string);
    /**
     * Gets or sets the background to use for tha axis annotation box.
    */
    get background(): string;
    set background(v: string);
    /**
     * Gets or sets the Outline to use for tha axis annotation box.
    */
    get outline(): string;
    set outline(v: string);
    /**
     * Gets or sets the border stroke thickness to use for tha axis annotation box.
    */
    get strokeThickness(): number;
    set strokeThickness(v: number);
    static ngAcceptInputType_strokeThickness: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    get backgroundPaddingLeft(): number;
    set backgroundPaddingLeft(v: number);
    static ngAcceptInputType_backgroundPaddingLeft: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    get backgroundPaddingTop(): number;
    set backgroundPaddingTop(v: number);
    static ngAcceptInputType_backgroundPaddingTop: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    get backgroundPaddingRight(): number;
    set backgroundPaddingRight(v: number);
    static ngAcceptInputType_backgroundPaddingRight: number | string;
    /**
     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.
    */
    get backgroundPaddingBottom(): number;
    set backgroundPaddingBottom(v: number);
    static ngAcceptInputType_backgroundPaddingBottom: number | string;
    findByName(name: string): any;
    resetCachedExtent(): void;
    resolveLabelValue(): string;
    protected _zoneRunner: (act: () => void) => void;
    protected _runInZone(act: () => void): void;
}
