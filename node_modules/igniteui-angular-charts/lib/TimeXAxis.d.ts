import { TimeAxisBase } from "./TimeAxisBase";
import { ITimeRangeSelectorAxis } from "./ITimeRangeSelectorAxis";
import { TimeAxisBreakCollection } from "./TimeAxisBreakCollection";
import { TimeAxisLabellingMode } from "./TimeAxisLabellingMode";
import { TimeAxisLabelFormatCollection } from "./TimeAxisLabelFormatCollection";
import { TimeAxisIntervalCollection } from "./TimeAxisIntervalCollection";
import { Type, IList$1, EventArgs } from "igniteui-angular-core";
import { TimeAxisLabelFormat } from "./TimeAxisLabelFormat";
import { ScalerParams } from "./ScalerParams";
import { Rect } from "igniteui-angular-core";
import { CultureInfo } from "igniteui-angular-core";
import { TimeRepetitionLevel } from "./TimeRepetitionLevel";
/**
 * @hidden
 */
export declare class TimeXAxis extends TimeAxisBase implements ITimeRangeSelectorAxis {
    static $t: Type;
    constructor();
    protected get_cl(): boolean;
    ek(a: number, b: ScalerParams): number;
    private og;
    ho(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    protected startCursor(): void;
    protected resetCursor(): void;
    private oi;
    en(a: number, b: ScalerParams): number;
    private oh;
    private ns;
    get breaks(): TimeAxisBreakCollection;
    private n1;
    get n2(): TimeAxisLabellingMode;
    set n2(a: TimeAxisLabellingMode);
    private nz;
    get labelFormats(): TimeAxisLabelFormatCollection;
    protected hx(a: any, b: string, c: any, d: any): void;
    protected ir(a: Rect, b: Rect): void;
    protected iq(a: Rect, b: Rect): void;
    c3(): boolean;
    private _omission;
    private get omission();
    private set omission(value);
    private o1;
    private nq;
    private n5;
    private ob;
    private o0;
    ge(a: number): string;
    f0(a: any): any;
    static ol(a: Date, b: boolean, c: Date, d: TimeAxisLabellingMode, e: number, f: IList$1<TimeAxisLabelFormat>, g: CultureInfo): any;
    static oq(a: Date, b: boolean, c: Date, d: TimeAxisLabellingMode, e: number, f: IList$1<TimeAxisLabelFormat>, g: CultureInfo): string;
    private static n3;
    protected get_mn(): boolean;
    protected set_mn(a: boolean): void;
    private nx;
    get intervals(): TimeAxisIntervalCollection;
    private oo;
    static op(a: number, b: TimeRepetitionLevel, c: TimeAxisLabellingMode): string;
    private static np;
    private static nr;
    private nv;
    private nw;
    private om;
    protected ia(a: boolean): void;
    private n4;
    private n6;
    private oz;
    private oa;
    get visibleMinimum(): Date;
    set visibleMinimum(a: Date);
    private n8;
    get od(): Date;
    set od(a: Date);
    private n7;
    get oc(): Date;
    set oc(a: Date);
    private n9;
    private nu;
    get visibleMaximum(): Date;
    set visibleMaximum(a: Date);
    protected nk(): void;
    k7(a: Rect, b: Rect, c: Rect, d: number, e: number): number;
    i$f(a: number): number;
    private oj;
    private ok;
    private o2;
    private o4;
    private o3;
    protected get_cc(): boolean;
    getWindowRectForSelection(a: Date, b: Date): Rect;
    getCategorySize(a: Rect, b: Rect, c: Rect): number;
    private ox;
    static ow(a: (arg1: number) => Date, b: number): number;
    private ov;
    protected ng(): void;
    static os(a: number): string;
    itemLabelFormat(): string;
    visibleRangeChanged: (sender: any, e: EventArgs) => void;
    protected m2(a: Rect, b: Rect, c: Rect, d: Rect): number;
    protected m5(a: Rect, b: Rect, c: Rect, d: Rect): number;
    get isVertical(): boolean;
    j$d(a: number, b: ScalerParams): number;
    j$c(a: number, b: ScalerParams): number;
    j$e(a: IList$1<number[]>, b: IList$1<number>, c: number, d: number, e: ScalerParams): void;
    j$f(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    j$g(a: IList$1<number>, b: number, c: number, d: ScalerParams): void;
    get j$b(): boolean;
    j$a(): number[];
    get i$a(): boolean;
}
