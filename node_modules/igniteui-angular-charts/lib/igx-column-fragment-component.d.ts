import { IgRect } from "igniteui-angular-core";
import { IgPoint } from "igniteui-angular-core";
import { IgxCategoryAxisBaseComponent } from "./igx-category-axis-base-component";
import { IgxNumericAxisBaseComponent } from "./igx-numeric-axis-base-component";
import { IgxFragmentBaseComponent } from "./igx-fragment-base-component";
import { ColumnFragment } from "./ColumnFragment";
import * as i0 from "@angular/core";
/**
 * Represents one part of a StackedColumnSeries.
*/
export declare class IgxColumnFragmentComponent extends IgxFragmentBaseComponent {
    protected createImplementation(): ColumnFragment;
    /**
                                 * @hidden
                                 */
    get i(): ColumnFragment;
    constructor();
    /**
     * Gets whether the current series shows a column shape.
    */
    get isColumn(): boolean;
    static ngAcceptInputType_isColumn: boolean | string;
    /**
     * Overridden by derived series classes to indicate when marker-less display is preferred or not.
    */
    get isMarkerlessDisplayPreferred(): boolean;
    static ngAcceptInputType_isMarkerlessDisplayPreferred: boolean | string;
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.
    */
    get radiusX(): number;
    set radiusX(v: number);
    static ngAcceptInputType_radiusX: number | string;
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.
    */
    get radiusY(): number;
    set radiusY(v: number);
    static ngAcceptInputType_radiusY: number | string;
    /**
     * Gets or sets the effective x-axis for this series.
    */
    get fragmentXAxis(): IgxCategoryAxisBaseComponent;
    /**
     * Gets or sets the effective y-axis for this series.
    */
    get fragmentYAxis(): IgxNumericAxisBaseComponent;
    protected _styling(container: any, component: any, parent?: any): void;
    /**
     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.
    
    * @param world  * The world coordinate for which to get a value bounding box for
    */
    getSeriesValueBoundingBox(world: IgPoint): IgRect;
    /**
     * Gets the item that is the best match for the specified world coordinates.
    
    * @param world  * The world coordinates to use.
    */
    getItem(world: IgPoint): any;
    /**
     * Gets the index of the item that resides at the provided world coordinates.
    
    * @param world  * The world coordinates of the requested item.
    */
    getItemIndex(world: IgPoint): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxColumnFragmentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxColumnFragmentComponent, "igx-column-fragment", never, { "radiusX": "radiusX"; "radiusY": "radiusY"; }, {}, never, never>;
}
