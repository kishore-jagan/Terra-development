import { DataPieBaseChart } from "./DataPieBaseChart";
import { Type } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { DataSeriesType } from "igniteui-angular-core";
import { IDataSeriesAdapterRule } from "igniteui-angular-core";
import { DomainType } from "./DomainType";
import { DataPieChartType } from "./DataPieChartType";
import { CategoryTransitionInMode } from "./CategoryTransitionInMode";
import { TransitionInSpeedType } from "./TransitionInSpeedType";
import { Series } from "./Series";
import { DataSeries } from "igniteui-angular-core";
import { XamDataChart } from "./XamDataChart";
import { MarkerType } from "./MarkerType";
/**
 * @hidden
 */
export declare class DataPieChart extends DataPieBaseChart {
    static $t: Type;
    protected ux(): void;
    protected uz(a: Series, b: number): void;
    protected vo(a: string, b: any, c: any): void;
    private akc;
    get ake(): number;
    set ake(a: number);
    private akd;
    get akf(): number;
    set akf(a: number);
    private aj6;
    get aj8(): (time: number) => number;
    set aj8(a: (time: number) => number);
    private aj7;
    get aj9(): (time: number) => number;
    set aj9(a: (time: number) => number);
    akh(): string;
    constructor();
    protected get_hy(): List$1<DataSeriesType>;
    protected get hy(): List$1<DataSeriesType>;
    protected get_hx(): List$1<IDataSeriesAdapterRule>;
    protected get hx(): List$1<IDataSeriesAdapterRule>;
    protected get_ahd(): boolean;
    protected bi(a: DataSeries): DataSeriesType;
    protected dg(a: DataSeries, b: DataSeriesType): Series;
    protected us(a: XamDataChart, b: any): void;
    protected uy(a: Series, b: number): void;
    protected t3(a: Series, b: number): void;
    protected c5(a: Series): MarkerType;
    protected vl(a: string, b: any, c: any): void;
    protected get_cf(): DomainType;
    get cf(): DomainType;
    private aj2;
    get aj3(): DataPieChartType;
    set aj3(a: DataPieChartType);
    private aka;
    get akb(): boolean;
    set akb(a: boolean);
    private aj0;
    get aj1(): CategoryTransitionInMode;
    set aj1(a: CategoryTransitionInMode);
    private aj4;
    get aj5(): TransitionInSpeedType;
    set aj5(a: TransitionInSpeedType);
}
