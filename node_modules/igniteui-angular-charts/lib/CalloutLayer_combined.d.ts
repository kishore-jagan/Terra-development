import { AnnotationLayer } from "./AnnotationLayer";
import { DependencyProperty } from "igniteui-angular-core";
import { IFastItemColumn$1 } from "igniteui-angular-core";
import { Base, Type, Point } from "igniteui-angular-core";
import { Series } from "./Series";
import { CalloutPlacementPositionsCollection } from "./CalloutPlacementPositionsCollection";
import { LabelCollisionPlacementPositions } from "igniteui-angular-core";
import { HighlightedValueLabelMode } from "igniteui-angular-core";
import { AutoCalloutVisibilityMode } from "./AutoCalloutVisibilityMode";
import { Brush } from "igniteui-angular-core";
import { Thickness } from "igniteui-angular-core";
import { CalloutCollisionMode } from "igniteui-angular-core";
import { FontInfo } from "igniteui-angular-core";
import { Rect } from "igniteui-angular-core";
import { CalloutLayerFrame } from "./CalloutLayerFrame";
import { CalloutAnnotationWrapper } from "./CalloutAnnotationWrapper";
import { FastItemsSourceEventAction } from "igniteui-angular-core";
import { CalloutLabelUpdatingEventArgs } from "./CalloutLabelUpdatingEventArgs";
import { CalloutSeriesSelectingEventArgs } from "./CalloutSeriesSelectingEventArgs";
import { CalloutStyleUpdatingEventArgs } from "./CalloutStyleUpdatingEventArgs";
import { CalloutRenderStyleUpdatingEventArgs } from "./CalloutRenderStyleUpdatingEventArgs";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Size } from "igniteui-angular-core";
import { CalloutContentUpdatingEventArgs } from "./CalloutContentUpdatingEventArgs";
import { DataContext } from "igniteui-angular-core";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { HashPool$2 } from "igniteui-angular-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { RenderingContext } from "igniteui-angular-core";
import { TextBlock } from "igniteui-angular-core";
import { Visibility } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class CalloutLayer extends AnnotationLayer {
    static $t: Type;
    protected bi(): Series;
    protected get_em(): boolean;
    constructor();
    private ada;
    private adj;
    private adb;
    protected o9(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    gd(a: boolean): boolean;
    private aa6;
    private ado;
    private adp;
    calloutStyleUpdating: (sender: any, args: CalloutStyleUpdatingEventArgs) => void;
    calloutRenderStyleUpdating: (sender: any, args: CalloutRenderStyleUpdatingEventArgs) => void;
    acr: string;
    ko(a: any, b: string): any;
    mb(a: string): string;
    get aah(): IFastItemColumn$1<any>;
    set aah(a: IFastItemColumn$1<any>);
    private aac;
    ac5: string;
    get aai(): IFastItemColumn$1<any>;
    set aai(a: IFastItemColumn$1<any>);
    private aad;
    ac8: string;
    get aaj(): IFastItemColumn$1<any>;
    set aaj(a: IFastItemColumn$1<any>);
    private aae;
    acl: string;
    get aag(): IFastItemColumn$1<any>;
    set aag(a: IFastItemColumn$1<any>);
    private aab;
    aaw: boolean;
    aco: string;
    zq: any[];
    acd: string;
    get aaf(): IFastItemColumn$1<any>;
    set aaf(a: IFastItemColumn$1<any>);
    private aaa;
    private aa7;
    private aba;
    private add;
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    protected z0: CalloutLayerView;
    private abb;
    act: string;
    z7: Series;
    aca: string;
    private z1;
    get z2(): CalloutPlacementPositionsCollection;
    set z2(a: CalloutPlacementPositionsCollection);
    zp: LabelCollisionPlacementPositions[];
    aav: boolean;
    aa0: boolean;
    aa3: boolean;
    gs(a: Series): boolean;
    aaz: boolean;
    aa1: boolean;
    aa2: boolean;
    aa4: boolean;
    z6: HighlightedValueLabelMode;
    get zv(): AutoCalloutVisibilityMode;
    set zv(a: AutoCalloutVisibilityMode);
    get zu(): AutoCalloutVisibilityMode;
    set zu(a: AutoCalloutVisibilityMode);
    static readonly ad6: DependencyProperty;
    abe: number;
    aay: boolean;
    aax: boolean;
    abn: number;
    aey: Brush;
    aew: Brush;
    aeu: Brush;
    aet: Brush;
    abo: number;
    aex: Brush;
    aev: Brush;
    get ae2(): Thickness;
    abg: number;
    abi: number;
    abh: number;
    abf: number;
    zx: CalloutCollisionMode;
    abj: number;
    abk: number;
    acw: string;
    private z8;
    get z9(): FontInfo;
    protected yh(a: Series, b: boolean): void;
    protected yj(a: Frame, b: SeriesView): void;
    private aa8;
    private aa5;
    private aak;
    private ae0;
    protected sl(a: Rect, b: Rect): void;
    protected sk(a: Rect, b: Rect): void;
    private aar;
    private abm;
    private aez;
    get ae1(): Rect;
    set ae1(a: Rect);
    private aap;
    private adk;
    private adf;
    private aal;
    private abp;
    private abq;
    private aam;
    private adc;
    private aan;
    private abl;
    private abc;
    private abr;
    protected xa(a: Series): boolean;
    ql(): void;
    private aaq;
    adi(): void;
    calloutContentUpdating: (sender: any, args: CalloutContentUpdatingEventArgs) => void;
    calloutLabelUpdating: (sender: any, args: CalloutLabelUpdatingEventArgs) => void;
    calloutSeriesSelecting: (sender: any, args: CalloutSeriesSelectingEventArgs) => void;
    private aa9;
    private adl;
    private aat;
    private aau;
    private abd;
    private aas;
    protected b0(): SeriesHitTestMode;
    a1(a: Point, b: boolean): DataContext;
    gu(a: Point, b: boolean): boolean;
    protected adn(a: CalloutLayerFrame, b: boolean): void;
    protected ym(a: Frame, b: SeriesView): void;
    protected f8(): boolean;
    private zs;
    protected q5(a: any, b: string, c: any, d: any): void;
    private zw;
    private zr;
    private adm;
    private aao;
    private zt;
    private adg;
    private ade;
    private adh;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class CalloutLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: CalloutLayer);
    protected b7: CalloutLayer;
    private cc;
    au(): void;
    private b9;
    private cf;
    private ch;
    private cg;
    cb: HashPool$2<CalloutAnnotationWrapper, CalloutView>;
    cq(a: Brush): Brush;
    protected a8(a: RenderingContext, b: boolean): void;
    protected ca(): FontInfo;
    an(a: any): void;
    private cd;
    cs(a: TextBlock): Size;
    private ce;
    private b8;
    cr(a: any, b: Thickness): Size;
    cj(a: CalloutView, b: number, c: number): void;
    ck(a: CalloutView, b: CalloutAnnotationWrapper, c: any): void;
    cl(a: Series, b: Brush): Brush;
    co(): Brush;
    cm(): Brush;
    cp(a: Series, b: Brush): Brush;
    cn(a: Series, b: Brush): Brush;
    ci(): void;
}
/**
 * @hidden
 */
export declare class CalloutView extends Base {
    static $t: Type;
    constructor(a: CalloutLayerView);
    private a;
    y: Visibility;
    j(a: RenderingContext): void;
    private l;
    private t;
    private q;
    private s;
    get r(): Point;
    set r(a: Point);
    get p(): Brush;
    set p(a: Brush);
    get o(): Brush;
    set o(a: Brush);
    get n(): Brush;
    set n(a: Brush);
    get m(): Brush;
    set m(a: Brush);
    get e(): number;
    set e(a: number);
    private w;
    private v;
    get x(): Thickness;
    set x(a: Thickness);
    private c;
    get d(): number;
    set d(a: number);
    get h(): any;
    set h(a: any);
    f: number;
    g: number;
    u(): Size;
    private b;
    k(a: Series, b: CalloutAnnotationWrapper, c: any): void;
    i(a: CalloutLayer, b: FontInfo, c: any): void;
}
