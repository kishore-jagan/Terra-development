import { AnnotationLayer } from "./AnnotationLayer";
import { Series } from "./Series";
import { Type } from "igniteui-angular-core";
import { SeriesView } from "./SeriesView";
import { Frame } from "./Frame";
import { Pool$1 } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { DataContext } from "igniteui-angular-core";
import { Size } from "igniteui-angular-core";
import { AnnotationLayerView } from "./AnnotationLayerView";
import { PointerTooltip } from "./PointerTooltip";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class ItemToolTipLayer extends AnnotationLayer {
    static $t: Type;
    protected bi(): Series;
    protected get_ep(): boolean;
    constructor();
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    protected zp: ItemToolTipLayerView;
    protected get_e0(): boolean;
    zw: string;
    gs(a: Series): boolean;
    zq: Series;
    zt: boolean;
    zs: boolean;
    protected q5(a: any, b: string, c: any, d: any): void;
    protected yh(a: Series, b: boolean): void;
    protected xa(a: Series): boolean;
    protected yj(a: Frame, b: SeriesView): void;
    private z0;
    private zr;
    private z1;
    private zu;
    p2(): void;
    p3(): void;
    protected ym(a: Frame, b: SeriesView): void;
    protected f8(): boolean;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class ItemToolTipLayerView extends AnnotationLayerView {
    static $t: Type;
    constructor(a: ItemToolTipLayer);
    protected b7: ItemToolTipLayer;
    b8: Pool$1<any>;
    au(): void;
    ak(): void;
    protected ca: List$1<PointerTooltip>;
    private cb;
    private cd;
    private cf;
    private ce;
    private _htmlTest;
    protected get htmlTest(): any;
    protected set htmlTest(a: any);
    b9(a: Series, b: any, c: any, d: DataContext): boolean;
    ck(a: any, b: any, c: DataContext): Size;
    ci(a: any, b: number, c: number, d: number, e: number): void;
    cg(a: any): void;
    protected a8(a: RenderingContext, b: boolean): void;
    an(a: any): void;
    ch(a: boolean): void;
    cj(): void;
}
