import { IgRect } from "igniteui-angular-core";
import { IgPoint } from "igniteui-angular-core";
import { IgxVerticalAnchoredCategorySeriesComponent } from "./igx-vertical-anchored-category-series-component";
import { BarSeries } from "./BarSeries";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent bar series.
*/
export declare class IgxBarSeriesComponent extends IgxVerticalAnchoredCategorySeriesComponent {
    protected createImplementation(): BarSeries;
    /**
                                 * @hidden
                                 */
    get i(): BarSeries;
    constructor();
    /**
     * Gets whether the current series shows a bar shape.
    */
    get isBar(): boolean;
    static ngAcceptInputType_isBar: boolean | string;
    /**
     * Overridden by derived series classes to indicate when marker-less display is preferred or not.
    */
    get isMarkerlessDisplayPreferred(): boolean;
    static ngAcceptInputType_isMarkerlessDisplayPreferred: boolean | string;
    /**
     * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.
    */
    get radiusX(): number;
    set radiusX(v: number);
    static ngAcceptInputType_radiusX: number | string;
    /**
     * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.
    */
    get radiusY(): number;
    set radiusY(v: number);
    static ngAcceptInputType_radiusY: number | string;
    /**
     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.
    
    * @param world  * The world coordinate for which to get a value bounding box for
    */
    getSeriesValueBoundingBox(world: IgPoint): IgRect;
    /**
     * Scrolls the series to display the item for the specified data item.
     * The series is scrolled by the minimum amount required to place the specified data item within
     * the central 80% of the visible axis.
    
    * @param item  * The data item (item) to scroll to.
    */
    scrollIntoView(item: any): boolean;
    /**
     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.
    
    */
    getItemSpan(): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<IgxBarSeriesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IgxBarSeriesComponent, "igx-bar-series", never, { "radiusX": "radiusX"; "radiusY": "radiusY"; }, {}, never, never>;
}
