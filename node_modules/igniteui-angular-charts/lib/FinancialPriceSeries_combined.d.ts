import { FinancialSeries } from "./FinancialSeries";
import { ITrendLineSeries } from "./ITrendLineSeries";
import { TrendLineType } from "igniteui-angular-core";
import { DependencyProperty } from "igniteui-angular-core";
import { Brush } from "igniteui-angular-core";
import { PenLineCap } from "igniteui-angular-core";
import { DoubleCollection } from "igniteui-angular-core";
import { PriceDisplayType } from "./PriceDisplayType";
import { Series } from "./Series";
import { SeriesView } from "./SeriesView";
import { Type, Point } from "igniteui-angular-core";
import { CategoryFrame } from "./CategoryFrame";
import { FastItemsSourceEventAction } from "igniteui-angular-core";
import { FinancialSeriesView } from "./FinancialSeriesView";
import { FinancialBucketCalculator } from "./FinancialBucketCalculator";
import { ITrendLineManager } from "./ITrendLineManager";
import { Axis } from "./Axis";
import { SeriesHitTestMode } from "./SeriesHitTestMode";
import { Rect } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { AxisRange } from "./AxisRange";
import { Pool$1 } from "igniteui-angular-core";
import { Path } from "igniteui-angular-core";
import { Thickness } from "igniteui-angular-core";
import { SeriesPlotAreaMarginHorizontalMode } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode } from "./SeriesPlotAreaMarginVerticalMode";
import { GeometryGroup } from "igniteui-angular-core";
import { LegendItemBadgeShape } from "igniteui-angular-core";
import { ValueLayerValueMode } from "./ValueLayerValueMode";
import { RenderingContext } from "igniteui-angular-core";
/**
 * @hidden
 */
export declare class FinancialPriceSeries extends FinancialSeries implements ITrendLineSeries {
    static $t: Type;
    protected bi(): Series;
    protected get_e7(): boolean;
    protected ji(): number;
    protected cq(): SeriesView;
    qx(a: SeriesView): void;
    aat: FinancialPriceSeriesView;
    constructor();
    trendLineType: TrendLineType;
    trendLineBrush: Brush;
    get ab5(): Brush;
    set ab5(a: Brush);
    static readonly abn: DependencyProperty;
    trendLineThickness: number;
    ab8: PenLineCap;
    ab7: DoubleCollection;
    trendLinePeriod: number;
    aa0: number;
    protected o9(a: FastItemsSourceEventAction, b: number, c: number, d: string): void;
    aau: PriceDisplayType;
    protected b0(): SeriesHitTestMode;
    wh(a: Point): Rect;
    private aas;
    an(a: Point): Rect[];
    gu(a: Point, b: boolean): boolean;
    protected gx(a: Point, b: boolean): boolean;
    protected q5(a: any, b: string, c: any, d: any): void;
    private abm;
    ax(a: Axis): AxisRange;
    ay(a: Rect): AxisRange;
    iw(): number;
    gb(a: any): boolean;
    hc(a: Rect, b: Rect, c: SeriesView): boolean;
    z4(a: CategoryFrame, b: FinancialSeriesView): void;
    o3(a: boolean, b: SeriesView): void;
    protected sk(a: Rect, b: Rect): void;
    wn(a: SeriesPlotAreaMarginHorizontalMode, b: SeriesPlotAreaMarginVerticalMode): Thickness;
    protected get_eb(): boolean;
    z6(a: CategoryFrame, b: FinancialSeriesView): void;
    iu(): number;
    private abk;
    private aay;
    private abj;
    kv(a: any, b: Point): any;
    protected sb(): void;
    protected pv(a: any): void;
    ab6: Brush;
    vr(): Brush;
    rx(a: Brush, b: Brush): void;
    protected bd(a: LegendItemBadgeShape): LegendItemBadgeShape;
    aba: string;
    aa6: string;
    aa1: string;
    abf: string;
    abc: string;
    aa8: string;
    aa3: string;
    abh: string;
    getDataLegendSeriesContextAt(a: number, b: number): any;
    private aav;
    private aaw;
    aax: number;
    private abl;
    ap(a: ValueLayerValueMode): number[];
    v9(a: ValueLayerValueMode): Point;
    wa(a: number[]): Point;
    static $$p: string[];
}
/**
 * @hidden
 */
export declare class FinancialPriceSeriesView extends FinancialSeriesView {
    static $t: Type;
    protected b6: FinancialPriceSeries;
    constructor(a: FinancialPriceSeries);
    b9: Pool$1<Path>;
    cr(): Path;
    protected cc: List$1<Path>;
    ch(a: Path): void;
    cj(a: Path): void;
    ci(a: Path): void;
    protected b1(): FinancialBucketCalculator;
    au(): void;
    private cq;
    private cp;
    private b7;
    get b8(): ITrendLineManager;
    set b8(a: ITrendLineManager);
    get ca(): boolean;
    ck(): void;
    ce(): void;
    cd(): void;
    cn(): GeometryGroup;
    cm(): GeometryGroup;
    cl(): void;
    protected bd(): void;
    protected be(): void;
    protected ac(a: number): any;
    private co;
    protected ab(a: number): any;
    protected a8(a: RenderingContext, b: boolean): void;
    protected a7(a: RenderingContext, b: boolean): void;
    an(a: any): void;
    cf(): void;
    cb: boolean;
    cg(): void;
}
