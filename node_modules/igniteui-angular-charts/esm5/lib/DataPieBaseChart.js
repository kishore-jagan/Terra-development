/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { RadialBaseChart } from "./RadialBaseChart";
import { ProportionalCategoryAngleAxis } from "./ProportionalCategoryAngleAxis";
import { NumericRadiusAxis } from "./NumericRadiusAxis";
import { typeCast, runOn, delegateCombine, enumGetBox, markType } from "igniteui-angular-core";
import { PieChartSweepDirection_$type } from "./PieChartSweepDirection";
import { CalloutCollisionMode_$type } from "igniteui-angular-core";
import { OthersCategoryType_$type } from "igniteui-angular-core";
import { AxisRangeBufferMode_$type } from "./AxisRangeBufferMode";
import { RadialLabelMode_$type } from "igniteui-angular-core";
import { CollisionAvoidanceType_$type } from "./CollisionAvoidanceType";
import { RadialBase } from "./RadialBase";
import { RadialPieSeries } from "./RadialPieSeries";
import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { isNaN_ } from "igniteui-angular-core";
/**
 * @hidden
 */
var DataPieBaseChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DataPieBaseChart, _super);
    function DataPieBaseChart() {
        var _this = _super.call(this) || this;
        _this.aic = null;
        _this.agk = null;
        _this.ah8 = null;
        _this.agi = null;
        _this.aia = null;
        _this.agj = null;
        _this.ah7 = null;
        _this.agh = null;
        _this.ahj = 0;
        _this.agz = 0;
        _this.agr = 6;
        _this.ajx = null;
        _this.ajw = null;
        _this.aid = null;
        _this.ah6 = null;
        _this.agx = 1;
        _this.ahk = 3;
        _this.ah9 = null;
        _this.ah5 = null;
        _this.aha = true;
        _this.agp = 0;
        _this.ahh = 0;
        _this.ahi = 0;
        _this.ahn = 0;
        _this.ahb = false;
        _this.ah3 = 10;
        _this.ahp = NaN;
        _this.aho = NaN;
        _this.ahq = 0;
        _this.ahl = NaN;
        _this.ahm = NaN;
        _this.aib = " - ";
        _this.ag4 = 0;
        _this.ag3 = 0;
        _this.ag8 = true;
        _this.ag9 = true;
        _this.agt = 0;
        return _this;
    }
    DataPieBaseChart.prototype.ajs = function (a) {
        this.ajt(function (b, c) { return a(b); });
    };
    DataPieBaseChart.prototype.ajt = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.fr) {
                a(c, b);
            }
        }
    };
    DataPieBaseChart.prototype.ajq = function (a) {
        this.ajr(function (b, c) { return a(b); });
    };
    DataPieBaseChart.prototype.ajr = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.fr) {
                a(c, b);
            }
        }
    };
    DataPieBaseChart.prototype.wg = function () {
        var a = this.bj.dataSeries != null ? this.bj.dataSeries.count : 0;
        _super.prototype.wg.call(this);
        if (this.aij != null) {
            var b = this.aij;
            this.angleAxis.f1 = b;
        }
        else {
            this.angleAxis.f1 = this.ab2 == null ? RadialBaseChart.adj(this.angleAxis, this.bj.dataSeries) : this.ab2;
        }
        this.angleAxis.itemsSource = this.dataChart != null && this.dataChart.series.count > 0 ? this.dataChart.series._inner[0].itemsSource : null;
        if (this.ajn != null) {
            this.angleAxis.og = this.ajn;
        }
        else {
            this.angleAxis.og = (this.dataChart != null && this.dataChart.series.count > 0 && typeCast(RadialPieSeries.$, this.dataChart.series._inner[0]) !== null) ? this.dataChart.series._inner[0].acm : null;
        }
    };
    DataPieBaseChart.prototype.c6 = function (a, b) {
        if (this.c9 == null || this.c9.count == 0) {
            return 13;
        }
        var c = _super.prototype.c6.call(this, a, b);
        if (c == 1) {
            return 13;
        }
        return c;
    };
    DataPieBaseChart.prototype.we = function (a) {
    };
    DataPieBaseChart.prototype.hc = function (a) {
        if (!_super.prototype.hc.call(this, a)) {
            return false;
        }
        return true;
    };
    DataPieBaseChart.prototype.wh = function () {
        this.valueAxis.lj = this.ahg;
        this.valueAxis.ma = this.ah4;
    };
    Object.defineProperty(DataPieBaseChart.prototype, "angleAxis", {
        get: function () {
            return this.ag1;
        },
        set: function (a) {
            var b = this.angleAxis;
            if (a != b) {
                this.ag1 = a;
                this.vl("AngleAxis", b, this.angleAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "valueAxis", {
        get: function () {
            return this.agv;
        },
        set: function (a) {
            var b = this.valueAxis;
            if (a != b) {
                this.agv = a;
                this.vl("ValueAxis", b, this.valueAxis);
            }
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChart.prototype.get_ahd = function () {
        return false;
    };
    Object.defineProperty(DataPieBaseChart.prototype, "ahd", {
        get: function () {
            return this.get_ahd();
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChart.prototype.dg = function (a, b) {
        var c = null;
        if (b == 34) {
            c = this.ag7(a, b);
        }
        if (a.index > 0) {
            if (!this.ahd) {
                if (c != null) {
                    c.o0();
                }
                return null;
            }
        }
        return c;
    };
    DataPieBaseChart.prototype.uy = function (a, b) {
        _super.prototype.uy.call(this, a, b);
        if (this.g0(a) && this.ci.isCalloutLayer(a)) {
            if (this.ajz != null) {
                this.ci.setCalloutLightColor(a, this.ajz);
            }
            if (this.ajy != null) {
                this.ci.setCalloutDarkColor(a, this.ajy);
            }
            var c = this.ak;
            if (this.ags != 0) {
                c = this.ags;
            }
            this.ci.setCollisionMode(a, c);
        }
    };
    DataPieBaseChart.prototype.ag7 = function (a, b) {
        var c = null;
        if (b == 34) {
            c = this.di(34);
        }
        else {
            c = this.di(34);
        }
        if (this.ajn != null) {
            c.acm = this.ajn;
        }
        else {
            c.acm = a.getMemberPathFor(0);
        }
        if (this.ail != null) {
            c.adl = this.ail;
        }
        c.yr = this.angleAxis;
        c.yw = this.valueAxis;
        c.g7 = true;
        c.ab6 = true;
        c.aas = this.ai7;
        c.yj = this.ago;
        c.aap = this.ai0;
        c.yi = this.agn;
        c.aai = this.air;
        c.yg = this.agm;
        c.aam = this.ain;
        c.yh = this.agl;
        c.y5 = this.ag6;
        c.y6 = this.ag5;
        c.z4 = this.ai5;
        return c;
    };
    DataPieBaseChart.prototype.zm = function () {
        return this.angleAxis;
    };
    DataPieBaseChart.prototype.zn = function () {
        return this.valueAxis;
    };
    DataPieBaseChart.prototype.t9 = function () {
        this.angleAxis = new ProportionalCategoryAngleAxis();
        this.angleAxis.name = "angleAxis";
        var a = this.angleAxis;
        a.propertyChanged = delegateCombine(a.propertyChanged, runOn(this, this.aju));
        this.angleAxis.k2 = 0;
        this.valueAxis = new NumericRadiusAxis();
        this.valueAxis.name = "valueAxis";
        var b = this.valueAxis;
        b.propertyChanged = delegateCombine(b.propertyChanged, runOn(this, this.ajv));
        if (this.angleAxis.az == null) {
            this.angleAxis.az = new AxisLabelSettings();
        }
        if (this.valueAxis.az == null) {
            this.valueAxis.az = new AxisLabelSettings();
        }
    };
    DataPieBaseChart.prototype.aju = function (a, b) {
        switch (b.propertyName) {
            case "ActualMinimumValue":
                this.v2("AngleAxisActualMinimum");
                break;
            case "ActualMaximumValue":
                this.v2("AngleAxisActualMaximum");
                break;
        }
    };
    DataPieBaseChart.prototype.ajv = function (a, b) {
        switch (b.propertyName) {
            case "ActualMinimumValue":
                this.v2("ValueAxisActualMinimum");
                break;
            case "ActualMaximumValue":
                this.v2("ValueAxisActualMaximum");
                break;
        }
    };
    DataPieBaseChart.prototype.t3 = function (a, b) {
        var c = typeCast(RadialBase.$, a);
        if (c != null) {
            c.w2 = this.c6(a, b);
        }
    };
    DataPieBaseChart.prototype.aet = function (a) {
        _super.prototype.aet.call(this, a);
        a.lb = this.ahe;
        a.le = this.ahf;
        a.ny = this.aht;
        if (!isNaN_(this.ahv)) {
            a.nz = this.ahv;
        }
        else {
            a.nz = 0.65;
        }
    };
    DataPieBaseChart.prototype.aer = function (a) {
        _super.prototype.aer.call(this, a);
        a.oa = this.aiw;
        a.nu = this.agy;
        a.n7 = this.ahu;
        if (!isNaN_(this.ahw)) {
            a.nb = this.ahw;
        }
        if (this.ag0 != 0) {
            if (this.ag0 == 1) {
                a.ch = false;
            }
            else {
                a.ch = true;
            }
        }
    };
    DataPieBaseChart.prototype.vl = function (a, b, c) {
        var _this = this;
        _super.prototype.vl.call(this, a, b, c);
        switch (a) {
            case "SliceLabelPositionMode":
                this.uk(function (d) {
                    if (d.em) {
                        _this.ci.setCollisionMode(d, _this.ags);
                    }
                });
                break;
            case "SliceLabelContentSeparator":
                this.ajq(function (d) { return d.z4 = _this.ai5; });
                break;
            case "SliceLabelContentMode":
                this.ajq(function (d) { return d.y5 = _this.ag6; });
                break;
            case "LegendSliceLabelContentMode":
                this.ajq(function (d) { return d.y6 = _this.ag5; });
                break;
            case "SliceLabelFormat":
                this.ajq(function (d) { return d.aas = _this.ai7; });
                break;
            case "SliceLabelFormatSpecifiers":
                this.ajq(function (d) { return d.yj = _this.ago; });
                break;
            case "OthersSliceLabelFormat":
                this.ajq(function (d) { return d.aap = _this.ai0; });
                break;
            case "OthersSliceLabelFormatSpecifiers":
                this.ajq(function (d) { return d.yi = _this.agn; });
                break;
            case "LegendSliceLabelFormat":
                this.ajq(function (d) { return d.aai = _this.ai7; });
                break;
            case "LegendSliceLabelFormatSpecifiers":
                this.ajq(function (d) { return d.yg = _this.ago; });
                break;
            case "LegendOthersSliceLabelFormat":
                this.ajq(function (d) { return d.aam = _this.ain; });
                break;
            case "LegendOthersSliceLabelFormatSpecifiers":
                this.ajq(function (d) { return d.yh = _this.agl; });
                break;
            case "SweepDirection":
                if (this.angleAxis != null) {
                    if (this.ag0 != 0) {
                        if (this.ag0 == 1) {
                            this.angleAxis.ch = false;
                        }
                        else {
                            this.angleAxis.ch = true;
                        }
                    }
                    else {
                        this.angleAxis.ch = this.zy;
                    }
                }
                break;
            case "StartAngle":
                if (this.angleAxis != null) {
                    this.angleAxis.nb = isNaN_(this.ahw) ? 0 : this.ahw;
                }
                break;
            case "RadiusExtent":
                if (this.valueAxis != null) {
                    this.valueAxis.nz = isNaN_(this.ahv) ? 0.65 : this.ahv;
                }
                break;
            case "OthersCategoryText":
                if (this.angleAxis != null) {
                    this.angleAxis.oa = this.aiw;
                }
                break;
            case "OthersCategoryType":
                if (this.angleAxis != null) {
                    this.angleAxis.nu = this.agy;
                }
                break;
            case "OthersCategoryThreshold":
                if (this.angleAxis != null) {
                    this.angleAxis.n7 = this.ahu;
                }
                break;
            case "InnerExtent":
                if (this.valueAxis != null) {
                    this.valueAxis.ny = this.aht;
                }
                break;
            case "LightSliceLabelColor":
                this.ui(function (d) {
                    if (d.em) {
                        _this.ci.setCalloutLightColor(d, _this.ajz);
                    }
                });
                break;
            case "DarkSliceLabelColor":
                this.ui(function (d) {
                    if (d.em) {
                        _this.ci.setCalloutDarkColor(d, _this.ajy);
                    }
                });
                break;
            case "ValueMemberPath":
                if (c != null) {
                    this.um(function (d) {
                        if (typeCast(AnchoredRadialSeries.$, d) !== null) {
                            var e = d;
                            e.acm = _this.ajn;
                        }
                    });
                    this.angleAxis.og = this.ajn;
                }
                else {
                    this.vr();
                }
                break;
            case "LabelMemberPath":
                if (c != null) {
                    var d = this.aij;
                    this.angleAxis.f1 = d;
                }
                else {
                    this.vr();
                }
                break;
            case "AngleAxisInterval":
                this.angleAxis.m8 = this.ahr;
                break;
            case "ValueAxisInterval":
                this.valueAxis.l2 = this.ahz;
                break;
            case "ValueAxisFavorLabellingScaleEnd":
                this.valueAxis.le = this.ahf;
                break;
            case "ValueAxisAutoRangeBufferMode":
                this.valueAxis.kv = this.agq;
                break;
            case "AngleAxisMinorInterval":
                this.angleAxis.m9 = this.ahs;
                break;
            case "ValueAxisMinorInterval":
                this.valueAxis.l7 = this.ah2;
                break;
            case "ValueAxisIsLogarithmic":
                this.valueAxis.lj = this.ahg;
                break;
            case "ValueAxisLogarithmBase":
                this.valueAxis.ma = this.ah4;
                break;
            case "ValueAxisMinimumValue":
                this.valueAxis.l6 = this.ah1;
                break;
            case "ValueAxisMaximumValue":
                this.valueAxis.l5 = this.ah0;
                break;
            case "MarkerCollision":
                this.un(function (e, f) { return _this.t3(e, f); });
                break;
            case "ValueAxisAbbreviateLargeNumbers":
                this.ae0(function (e) { return e.lb = _this.ahe; });
                break;
        }
    };
    Object.defineProperty(DataPieBaseChart.prototype, "ai7", {
        get: function () {
            return this.aic;
        },
        set: function (a) {
            var b = this.ai7;
            if (a != b) {
                this.aic = a;
                this.vl("SliceLabelFormat", b, this.ai7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ago", {
        get: function () {
            return this.agk;
        },
        set: function (a) {
            var b = this.ago;
            if (a != b) {
                this.agk = a;
                this.vl("SliceLabelFormatSpecifiers", b, this.ago);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "air", {
        get: function () {
            return this.ah8;
        },
        set: function (a) {
            var b = this.air;
            if (a != b) {
                this.ah8 = a;
                this.vl("LegendSliceLabelFormat", b, this.air);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "agm", {
        get: function () {
            return this.agi;
        },
        set: function (a) {
            var b = this.agm;
            if (a != b) {
                this.agi = a;
                this.vl("LegendSliceLabelFormatSpecifiers", b, this.agm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ai0", {
        get: function () {
            return this.aia;
        },
        set: function (a) {
            var b = this.ai0;
            if (a != b) {
                this.aia = a;
                this.vl("OthersSliceLabelFormat", b, this.ai0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "agn", {
        get: function () {
            return this.agj;
        },
        set: function (a) {
            var b = this.agn;
            if (a != b) {
                this.agj = a;
                this.vl("OthersSliceLabelFormatSpecifiers", b, this.agn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ain", {
        get: function () {
            return this.ah7;
        },
        set: function (a) {
            var b = this.ain;
            if (a != b) {
                this.ah7 = a;
                this.vl("LegendOthersSliceLabelFormat", b, this.ain);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "agl", {
        get: function () {
            return this.agh;
        },
        set: function (a) {
            var b = this.agl;
            if (a != b) {
                this.agh = a;
                this.vl("LegendOthersSliceLabelFormatSpecifiers", b, this.agl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aht", {
        get: function () {
            return this.ahj;
        },
        set: function (a) {
            var b = this.aht;
            if (a != b) {
                this.ahj = a;
                this.vl("InnerExtent", b, this.aht);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag0", {
        get: function () {
            return this.agz;
        },
        set: function (a) {
            var b = this.ag0;
            if (a != b) {
                this.agz = a;
                this.vl("SweepDirection", enumGetBox(PieChartSweepDirection_$type, b), enumGetBox(PieChartSweepDirection_$type, this.ag0));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ags", {
        get: function () {
            return this.agr;
        },
        set: function (a) {
            var b = this.ags;
            if (a != b) {
                this.agr = a;
                this.vl("SliceLabelPositionMode", enumGetBox(CalloutCollisionMode_$type, b), enumGetBox(CalloutCollisionMode_$type, this.ags));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajz", {
        get: function () {
            return this.ajx;
        },
        set: function (a) {
            var b = this.ajz;
            if (a != b) {
                this.ajx = a;
                this.vl("LightSliceLabelColor", b, this.ajz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajy", {
        get: function () {
            return this.ajw;
        },
        set: function (a) {
            var b = this.ajy;
            if (a != b) {
                this.ajw = a;
                this.vl("DarkSliceLabelColor", b, this.ajy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ajn", {
        get: function () {
            return this.aid;
        },
        set: function (a) {
            var b = this.ajn;
            if (a != b) {
                this.aid = a;
                this.vl("ValueMemberPath", b, this.ajn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ail", {
        get: function () {
            return this.ah6;
        },
        set: function (a) {
            var b = this.ah6;
            if (a != b) {
                this.ah6 = a;
                this.vl("LegendLabelMemberPath", b, this.ah6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "agy", {
        get: function () {
            return this.agx;
        },
        set: function (a) {
            var b = this.agy;
            if (a != b) {
                this.agx = a;
                this.vl("OthersCategoryType", enumGetBox(OthersCategoryType_$type, b), enumGetBox(OthersCategoryType_$type, this.agy));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahu", {
        get: function () {
            return this.ahk;
        },
        set: function (a) {
            var b = this.ahu;
            if (a != b) {
                this.ahk = a;
                this.vl("OthersCategoryThreshold", b, this.ahu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aiw", {
        get: function () {
            return this.ah9;
        },
        set: function (a) {
            var b = this.aiw;
            if (a != b) {
                this.ah9 = a;
                this.vl("OthersCategoryText", b, this.aiw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "aij", {
        get: function () {
            return this.ah5;
        },
        set: function (a) {
            var b = this.aij;
            if (a != b) {
                this.ah5 = a;
                this.vl("LabelMemberPath", b, this.aij);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahf", {
        get: function () {
            return this.aha;
        },
        set: function (a) {
            var b = this.ahf;
            if (a != b) {
                this.aha = a;
                this.vl("ValueAxisFavorLabellingScaleEnd", b, this.ahf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "agq", {
        get: function () {
            return this.agp;
        },
        set: function (a) {
            var b = this.agq;
            if (a != b) {
                this.agp = a;
                this.vl("ValueAxisAutoRangeBufferMode", enumGetBox(AxisRangeBufferMode_$type, b), enumGetBox(AxisRangeBufferMode_$type, this.agq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahr", {
        get: function () {
            return this.ahh;
        },
        set: function (a) {
            var b = this.ahr;
            if (a != b) {
                this.ahh = a;
                this.vl("AngleAxisInterval", b, this.ahr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahs", {
        get: function () {
            return this.ahi;
        },
        set: function (a) {
            var b = this.ahs;
            if (a != b) {
                this.ahi = a;
                this.vl("AngleAxisMinorInterval", b, this.ahs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahz", {
        get: function () {
            return this.ahn;
        },
        set: function (a) {
            var b = this.ahz;
            if (a != b) {
                this.ahn = a;
                this.vl("ValueAxisInterval", b, this.ahz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahg", {
        get: function () {
            return this.ahb;
        },
        set: function (a) {
            var b = this.ahg;
            if (a != b) {
                this.ahb = a;
                this.vl("ValueAxisIsLogarithmic", b, this.ahg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ah4", {
        get: function () {
            return this.ah3;
        },
        set: function (a) {
            var b = this.ah4;
            if (a != b) {
                this.ah3 = a;
                this.vl("ValueAxisLogarithmBase", b, this.ah4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ah1", {
        get: function () {
            return this.ahp;
        },
        set: function (a) {
            var b = this.ah1;
            if (a != b) {
                this.ahp = a;
                this.vl("ValueAxisMinimumValue", b, this.ah1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ah0", {
        get: function () {
            return this.aho;
        },
        set: function (a) {
            var b = this.ah0;
            if (a != b) {
                this.aho = a;
                this.vl("ValueAxisMaximumValue", b, this.ah0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ah2", {
        get: function () {
            return this.ahq;
        },
        set: function (a) {
            var b = this.ah2;
            if (a != b) {
                this.ahq = a;
                this.vl("ValueAxisMinorInterval", b, this.ah2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahy", {
        get: function () {
            return this.valueAxis.ly;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahx", {
        get: function () {
            return this.valueAxis.lx;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahv", {
        get: function () {
            return this.ahl;
        },
        set: function (a) {
            var b = this.ahv;
            if (a != b) {
                this.ahl = a;
                this.vl("RadiusExtent", b, this.ahv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahw", {
        get: function () {
            return this.ahm;
        },
        set: function (a) {
            var b = this.ahw;
            if (a != b) {
                this.ahm = a;
                this.vl("StartAngle", b, this.ahw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ai5", {
        get: function () {
            return this.aib;
        },
        set: function (a) {
            var b = this.ai5;
            if (a != b) {
                this.aib = a;
                this.vl("SliceLabelContentSeparator", b, this.ai5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag6", {
        get: function () {
            return this.ag4;
        },
        set: function (a) {
            var b = this.ag6;
            if (a != b) {
                this.ag4 = a;
                this.vl("SliceLabelContentMode", enumGetBox(RadialLabelMode_$type, b), enumGetBox(RadialLabelMode_$type, this.ag6));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ag5", {
        get: function () {
            return this.ag3;
        },
        set: function (a) {
            var b = this.ag5;
            if (a != b) {
                this.ag3 = a;
                this.vl("LegendSliceLabelContentMode", enumGetBox(RadialLabelMode_$type, b), enumGetBox(RadialLabelMode_$type, this.ag5));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahc", {
        get: function () {
            return this.ag8;
        },
        set: function (a) {
            var b = this.ahc;
            if (a != b) {
                this.ag8 = a;
                this.vl("AngleAxisFavorLabellingScaleEnd", b, this.ahc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "ahe", {
        get: function () {
            return this.ag9;
        },
        set: function (a) {
            var b = this.ahe;
            if (a != b) {
                this.ag9 = a;
                this.vl("ValueAxisAbbreviateLargeNumbers", b, this.ahe);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DataPieBaseChart.prototype, "agu", {
        get: function () {
            return this.agt;
        },
        set: function (a) {
            var b = this.agt;
            if (a != b) {
                this.agt = a;
                this.vl("MarkerCollision", enumGetBox(CollisionAvoidanceType_$type, b), enumGetBox(CollisionAvoidanceType_$type, this.agt));
            }
        },
        enumerable: false,
        configurable: true
    });
    DataPieBaseChart.$t = markType(DataPieBaseChart, 'DataPieBaseChart', RadialBaseChart.$);
    return DataPieBaseChart;
}(RadialBaseChart));
export { DataPieBaseChart };
