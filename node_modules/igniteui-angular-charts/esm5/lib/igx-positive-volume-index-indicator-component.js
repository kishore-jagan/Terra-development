import { __extends } from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PositiveVolumeIndexIndicator } from "./PositiveVolumeIndexIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent Positive Volume Index (PVI) indicator series.
 * Default required members: Close, Volume
*
* You can use the `PositiveVolumeIndexIndicator` with the 'NegativeVolumeIndexIndicator' to identify bull markets.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
*     <igx-positive-volume-index-indicator
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		openMemberPath="open"
* 		highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close">
*     </igx-positive-volume-index-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxPositiveVolumeIndexIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
var IgxPositiveVolumeIndexIndicatorComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxPositiveVolumeIndexIndicatorComponent, _super);
    function IgxPositiveVolumeIndexIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxPositiveVolumeIndexIndicatorComponent.prototype.createImplementation = function () {
        return new PositiveVolumeIndexIndicator();
    };
    Object.defineProperty(IgxPositiveVolumeIndexIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxPositiveVolumeIndexIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPositiveVolumeIndexIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxPositiveVolumeIndexIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxPositiveVolumeIndexIndicatorComponent, selector: "igx-positive-volume-index-indicator", providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxPositiveVolumeIndexIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxPositiveVolumeIndexIndicatorComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPositiveVolumeIndexIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-positive-volume-index-indicator',
                    template: "",
                    providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxPositiveVolumeIndexIndicatorComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
