import { __extends } from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxSplineFragmentBaseComponent } from "./igx-spline-fragment-base-component";
import { IgxSplineSeriesBaseComponent } from "./igx-spline-series-base-component";
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxAnchoredCategorySeriesComponent } from "./igx-anchored-category-series-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { SplineFragment } from "./SplineFragment";
import * as i0 from "@angular/core";
/**
 * Represents one part of a StackedSplineSeries.
*/
var IgxSplineFragmentComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxSplineFragmentComponent, _super);
    function IgxSplineFragmentComponent() {
        return _super.call(this) || this;
    }
    IgxSplineFragmentComponent.prototype.createImplementation = function () {
        return new SplineFragment();
    };
    Object.defineProperty(IgxSplineFragmentComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxSplineFragmentComponent.prototype, "isSpline", {
        /**
         * Gets whether the current series shows a spline shape.
        */
        get: function () {
            return this.i.fy;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxSplineFragmentComponent.prototype, "isAreaOrLine", {
        /**
         * Gets whether the current series shows an area or line shape.
        */
        get: function () {
            return this.i.et;
        },
        enumerable: false,
        configurable: true
    });
    IgxSplineFragmentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxSplineFragmentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxSplineFragmentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxSplineFragmentComponent, selector: "igx-spline-fragment", providers: [{ provide: IgxSplineFragmentBaseComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxSplineSeriesBaseComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxSplineFragmentComponent;
}(IgxSplineFragmentBaseComponent));
export { IgxSplineFragmentComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxSplineFragmentComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-spline-fragment',
                    template: "",
                    providers: [{ provide: IgxSplineFragmentBaseComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxSplineSeriesBaseComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxSplineFragmentComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
