/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { UltimateOscillatorIndicatorCalculationStrategy } from "./UltimateOscillatorIndicatorCalculationStrategy";
import { markType } from "igniteui-angular-core";
/**
 * @hidden
 */
var UltimateOscillatorIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(UltimateOscillatorIndicator, _super);
    function UltimateOscillatorIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UltimateOscillatorIndicator.prototype.bi = function () {
        return new UltimateOscillatorIndicator();
    };
    UltimateOscillatorIndicator.prototype.get_abn = function () {
        return new UltimateOscillatorIndicatorCalculationStrategy();
    };
    Object.defineProperty(UltimateOscillatorIndicator.prototype, "abn", {
        get: function () {
            return this.get_abn();
        },
        enumerable: false,
        configurable: true
    });
    UltimateOscillatorIndicator.prototype.get_ab0 = function () {
        return UltimateOscillatorIndicator.$;
    };
    Object.defineProperty(UltimateOscillatorIndicator.prototype, "ab0", {
        get: function () {
            return this.get_ab0();
        },
        enumerable: false,
        configurable: true
    });
    UltimateOscillatorIndicator.$t = markType(UltimateOscillatorIndicator, 'UltimateOscillatorIndicator', StrategyBasedIndicator.$);
    return UltimateOscillatorIndicator;
}(StrategyBasedIndicator));
export { UltimateOscillatorIndicator };
