/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { DomainChart } from "./DomainChart";
import { fromEnum, enumGetBox, markType } from "igniteui-angular-core";
import { HorizontalAlignment_$type } from "igniteui-angular-core";
import { VerticalAlignment_$type } from "igniteui-angular-core";
import { Visibility_$type } from "igniteui-angular-core";
import { ValueAxisLabelLocation_$type } from "./ValueAxisLabelLocation";
import { AngleAxisLabelLocation_$type } from "./AngleAxisLabelLocation";
import { AxisLabelSettings } from "./AxisLabelSettings";
import { AxisDefaults } from "./AxisDefaults";
import { TitleSettings } from "./TitleSettings";
import { ScalerParams } from "./ScalerParams";
import { DeviceUtils } from "igniteui-angular-core";
/**
 * @hidden
 */
var RadialBaseChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialBaseChart, _super);
    function RadialBaseChart() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.zo = null;
        _this.zp = null;
        _this.z3 = 0;
        _this.z5 = 5;
        _this.z4 = 0;
        _this.z2 = 5;
        _this.aak = 5;
        _this.aam = 0;
        _this.aal = 5;
        _this.aaj = 0;
        _this.afd = null;
        _this.afk = null;
        _this.afb = null;
        _this.afc = null;
        _this.aae = 0;
        _this.aav = 0;
        _this.aad = NaN;
        _this.aau = NaN;
        _this.aag = NaN;
        _this.aax = NaN;
        _this.aaf = NaN;
        _this.aaw = NaN;
        _this.aac = NaN;
        _this.aat = NaN;
        _this.afj = null;
        _this.afq = null;
        _this.ab5 = null;
        _this.ab9 = null;
        _this.ab7 = null;
        _this.acb = null;
        _this.ab0 = null;
        _this.ab1 = null;
        _this.afe = null;
        _this.afl = null;
        _this.z6 = DeviceUtils.g(1);
        _this.aan = DeviceUtils.g(1);
        _this.z7 = DeviceUtils.g(1);
        _this.aao = DeviceUtils.g(1);
        _this.afg = null;
        _this.afn = null;
        _this.afh = null;
        _this.afo = null;
        _this.z8 = DeviceUtils.g(1);
        _this.aap = DeviceUtils.g(1);
        _this.z9 = DeviceUtils.g(8);
        _this.aaq = 0;
        _this.afi = null;
        _this.afp = null;
        _this.aaa = DeviceUtils.g(1);
        _this.aar = DeviceUtils.g(1);
        _this.ab6 = null;
        _this.aca = null;
        _this.aff = null;
        _this.afm = null;
        _this.z1 = 0;
        _this.aai = 0;
        _this.z0 = NaN;
        _this.aah = NaN;
        _this.aab = 0;
        _this.aas = -90;
        _this.zw = false;
        _this.zx = false;
        _this.ae6 = 1;
        _this.af9 = 1;
        _this.ae5 = 1;
        _this.ae7 = 2;
        _this.af7 = 0;
        _this.af8 = 1;
        _this.agd = 0;
        _this.age = 0;
        _this.zu = 4;
        _this.zk = 4;
        _this.ab4 = null;
        _this.zg = null;
        _this.ab8 = null;
        _this.zh = null;
        return _this;
    }
    RadialBaseChart.prototype.provideContainer = function (a) {
        if (a != null) {
            var b = this.zm();
            var c = this.zn();
            if (b != null) {
                b.provideRenderer(a);
            }
            if (c != null) {
                c.provideRenderer(a);
            }
        }
        _super.prototype.provideContainer.call(this, a);
    };
    RadialBaseChart.prototype.ux = function () {
        _super.prototype.ux.call(this);
        var a = this.zm();
        var b = this.zn();
        if (a != null && a.az != null) {
            this.aft = a.az.textColor;
        }
        if (b != null && b.az != null) {
            this.af0 = b.az.textColor;
        }
        this.afy = AxisDefaults.j;
        this.af5 = AxisDefaults.j;
        this.afu = AxisDefaults.h;
        this.af1 = AxisDefaults.h;
        this.afx = AxisDefaults.g;
        this.af4 = AxisDefaults.g;
    };
    RadialBaseChart.prototype.vo = function (a, b, c) {
        var _this = this;
        _super.prototype.vo.call(this, a, b, c);
        switch (a) {
            case "AngleAxisLabelLeftMargin":
                this.aex(function (d) { return d.leftMargin = _this.aa1; });
                break;
            case "AngleAxisLabelTopMargin":
                this.aex(function (d) { return d.topMargin = _this.aa3; });
                break;
            case "AngleAxisLabelRightMargin":
                this.aex(function (d) { return d.rightMargin = _this.aa2; });
                break;
            case "AngleAxisLabelBottomMargin":
                this.aex(function (d) { return d.bottomMargin = _this.aa0; });
                break;
            case "ValueAxisLabelLeftMargin":
                this.ae2(function (d) { return d.leftMargin = _this.abm; });
                break;
            case "ValueAxisLabelTopMargin":
                this.ae2(function (d) { return d.topMargin = _this.abo; });
                break;
            case "ValueAxisLabelRightMargin":
                this.ae2(function (d) { return d.rightMargin = _this.abn; });
                break;
            case "ValueAxisLabelBottomMargin":
                this.ae2(function (d) { return d.bottomMargin = _this.abl; });
                break;
            case "ActualItemsSource":
            case "ShouldDisplayMockData":
            case "ShouldUseSkeletonStyleForMockData":
                this.afr = this.yg(this.aft);
                this.afs = this.yg(this.af0);
                break;
            case "AngleAxisLabelTextColor":
                this.afr = this.yg(this.aft);
                break;
            case "ValueAxisLabelTextColor":
                this.afs = this.yg(this.af0);
                break;
            case "ActualAngleAxisLabelTextColor":
                this.aex(function (d) { return d.textColor = _this.afr; });
                break;
            case "ActualValueAxisLabelTextColor":
                this.ae2(function (d) { return d.textColor = _this.afs; });
                break;
            case "AngleAxisTitleMargin":
                this.aez(function (d) { return d.margin = _this.abc; });
                break;
            case "ValueAxisTitleMargin":
                this.ae4(function (d) { return d.margin = _this.abx; });
                break;
            case "AngleAxisTitleLeftMargin":
                this.aez(function (d) { return d.leftMargin = _this.abb; });
                break;
            case "ValueAxisTitleLeftMargin":
                this.ae4(function (d) { return d.leftMargin = _this.abw; });
                break;
            case "AngleAxisTitleTopMargin":
                this.aez(function (d) { return d.topMargin = _this.abe; });
                break;
            case "ValueAxisTitleTopMargin":
                this.ae4(function (d) { return d.topMargin = _this.abz; });
                break;
            case "AngleAxisTitleRightMargin":
                this.aez(function (d) { return d.rightMargin = _this.abd; });
                break;
            case "ValueAxisTitleRightMargin":
                this.ae4(function (d) { return d.rightMargin = _this.aby; });
                break;
            case "AngleAxisTitleBottomMargin":
                this.aez(function (d) { return d.bottomMargin = _this.aba; });
                break;
            case "ValueAxisTitleBottomMargin":
                this.ae4(function (d) { return d.bottomMargin = _this.abv; });
                break;
            case "AngleAxisTitleTextColor":
                this.aez(function (d) { return d.textColor = _this.afz; });
                break;
            case "ValueAxisTitleTextColor":
                this.ae4(function (d) { return d.textColor = _this.af6; });
                break;
            case "AngleAxisFormatLabel":
                this.aev(function (d) { return d.au = _this.zq; });
                break;
            case "ValueAxisFormatLabel":
                this.ae0(function (d) { return d.au = _this.zr; });
                break;
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "zq", {
        get: function () {
            return this.zo;
        },
        set: function (a) {
            var b = this.zq;
            if (a != b) {
                this.zo = a;
                this.vl("AngleAxisFormatLabel", b, this.zq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "zr", {
        get: function () {
            return this.zp;
        },
        set: function (a) {
            var b = this.zr;
            if (a != b) {
                this.zp = a;
                this.vl("ValueAxisFormatLabel", b, this.zr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa1", {
        get: function () {
            return this.z3;
        },
        set: function (a) {
            var b = this.aa1;
            if (a != b) {
                this.z3 = a;
                this.vl("AngleAxisLabelLeftMargin", b, this.aa1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa3", {
        get: function () {
            return this.z5;
        },
        set: function (a) {
            var b = this.aa3;
            if (a != b) {
                this.z5 = a;
                this.vl("AngleAxisLabelTopMargin", b, this.aa3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa2", {
        get: function () {
            return this.z4;
        },
        set: function (a) {
            var b = this.aa2;
            if (a != b) {
                this.z4 = a;
                this.vl("AngleAxisLabelRightMargin", b, this.aa2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa0", {
        get: function () {
            return this.z2;
        },
        set: function (a) {
            var b = this.aa0;
            if (a != b) {
                this.z2 = a;
                this.vl("AngleAxisLabelBottomMargin", b, this.aa0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abm", {
        get: function () {
            return this.aak;
        },
        set: function (a) {
            var b = this.abm;
            if (a != b) {
                this.aak = a;
                this.vl("ValueAxisLabelLeftMargin", b, this.abm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abo", {
        get: function () {
            return this.aam;
        },
        set: function (a) {
            var b = this.abo;
            if (a != b) {
                this.aam = a;
                this.vl("ValueAxisLabelTopMargin", b, this.abo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abn", {
        get: function () {
            return this.aal;
        },
        set: function (a) {
            var b = this.abn;
            if (a != b) {
                this.aal = a;
                this.vl("ValueAxisLabelRightMargin", b, this.abn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abl", {
        get: function () {
            return this.aaj;
        },
        set: function (a) {
            var b = this.abl;
            if (a != b) {
                this.aaj = a;
                this.vl("ValueAxisLabelBottomMargin", b, this.abl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aft", {
        get: function () {
            return this.afd;
        },
        set: function (a) {
            var b = this.aft;
            if (a != b) {
                this.afd = a;
                this.vl("AngleAxisLabelTextColor", b, this.aft);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af0", {
        get: function () {
            return this.afk;
        },
        set: function (a) {
            var b = this.af0;
            if (a != b) {
                this.afk = a;
                this.vl("ValueAxisLabelTextColor", b, this.af0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afr", {
        get: function () {
            return this.afb;
        },
        set: function (a) {
            var b = this.afb;
            if (a != b) {
                this.afb = a;
                this.vl("ActualAngleAxisLabelTextColor", b, this.afr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afs", {
        get: function () {
            return this.afc;
        },
        set: function (a) {
            var b = this.afc;
            if (a != b) {
                this.afc = a;
                this.vl("ActualValueAxisLabelTextColor", b, this.afs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abc", {
        get: function () {
            return this.aae;
        },
        set: function (a) {
            var b = this.abc;
            if (a != b) {
                this.aae = a;
                this.vl("AngleAxisTitleMargin", b, this.abc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abx", {
        get: function () {
            return this.aav;
        },
        set: function (a) {
            var b = this.abx;
            if (a != b) {
                this.aav = a;
                this.vl("ValueAxisTitleMargin", b, this.abx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abb", {
        get: function () {
            return this.aad;
        },
        set: function (a) {
            var b = this.abb;
            if (a != b) {
                this.aad = a;
                this.vl("AngleAxisTitleLeftMargin", b, this.abb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abw", {
        get: function () {
            return this.aau;
        },
        set: function (a) {
            var b = this.abw;
            if (a != b) {
                this.aau = a;
                this.vl("ValueAxisTitleLeftMargin", b, this.abw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abe", {
        get: function () {
            return this.aag;
        },
        set: function (a) {
            var b = this.abe;
            if (a != b) {
                this.aag = a;
                this.vl("AngleAxisTitleTopMargin", b, this.abe);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abz", {
        get: function () {
            return this.aax;
        },
        set: function (a) {
            var b = this.abz;
            if (a != b) {
                this.aax = a;
                this.vl("ValueAxisTitleTopMargin", b, this.abz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abd", {
        get: function () {
            return this.aaf;
        },
        set: function (a) {
            var b = this.abd;
            if (a != b) {
                this.aaf = a;
                this.vl("AngleAxisTitleRightMargin", b, this.abd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aby", {
        get: function () {
            return this.aaw;
        },
        set: function (a) {
            var b = this.aby;
            if (a != b) {
                this.aaw = a;
                this.vl("ValueAxisTitleRightMargin", b, this.aby);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aba", {
        get: function () {
            return this.aac;
        },
        set: function (a) {
            var b = this.aba;
            if (a != b) {
                this.aac = a;
                this.vl("AngleAxisTitleBottomMargin", b, this.aba);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abv", {
        get: function () {
            return this.aat;
        },
        set: function (a) {
            var b = this.abv;
            if (a != b) {
                this.aat = a;
                this.vl("ValueAxisTitleBottomMargin", b, this.abv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afz", {
        get: function () {
            return this.afj;
        },
        set: function (a) {
            var b = this.afz;
            if (a != b) {
                this.afj = a;
                this.vl("AngleAxisTitleTextColor", b, this.afz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af6", {
        get: function () {
            return this.afq;
        },
        set: function (a) {
            var b = this.af6;
            if (a != b) {
                this.afq = a;
                this.vl("ValueAxisTitleTextColor", b, this.af6);
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.vp = function (a, b, c) {
        var _this = this;
        _super.prototype.vp.call(this, a, b, c);
        switch (a) {
            case "AngleAxisLabelTextStyle":
                this.aex(function (d) { return d.textStyle = _this.acs; });
                break;
            case "ValueAxisLabelTextStyle":
                this.ae2(function (d) { return d.textStyle = _this.ady; });
                break;
            case "AngleAxisTitleTextStyle":
                this.aez(function (d) { return d.textStyle = _this.adg; });
                break;
            case "ValueAxisTitleTextStyle":
                this.ae4(function (d) { return d.textStyle = _this.aem; });
                break;
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "acs", {
        get: function () {
            return this.ab5;
        },
        set: function (a) {
            var b = this.acs;
            if (a != b) {
                this.ab5 = a;
                this.vl("AngleAxisLabelTextStyle", b, this.acs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ady", {
        get: function () {
            return this.ab9;
        },
        set: function (a) {
            var b = this.ady;
            if (a != b) {
                this.ab9 = a;
                this.vl("ValueAxisLabelTextStyle", b, this.ady);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "adg", {
        get: function () {
            return this.ab7;
        },
        set: function (a) {
            var b = this.adg;
            if (a != b) {
                this.ab7 = a;
                this.vl("AngleAxisTitleTextStyle", b, this.adg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aem", {
        get: function () {
            return this.acb;
        },
        set: function (a) {
            var b = this.aem;
            if (a != b) {
                this.acb = a;
                this.vl("ValueAxisTitleTextStyle", b, this.aem);
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.aes = function (a) {
        var _this = this;
        this.aep(a, function (b) { return b.leftMargin = _this.aa1; });
        this.aep(a, function (b) { return b.topMargin = _this.aa3; });
        this.aep(a, function (b) { return b.rightMargin = _this.aa2; });
        this.aep(a, function (b) { return b.bottomMargin = _this.aa0; });
        this.aep(a, function (b) { return b.textColor = _this.afr; });
        this.aeq(a, function (b) { return b.textColor = _this.afz; });
        this.aeq(a, function (b) { return b.leftMargin = _this.abb; });
        this.aeq(a, function (b) { return b.topMargin = _this.abe; });
        this.aeq(a, function (b) { return b.rightMargin = _this.abd; });
        this.aeq(a, function (b) { return b.bottomMargin = _this.aba; });
        this.aep(a, function (b) { return b.textStyle = _this.acs; });
        this.aeq(a, function (b) { return b.textStyle = _this.adg; });
    };
    RadialBaseChart.prototype.aeu = function (a) {
        var _this = this;
        this.aep(a, function (b) { return b.leftMargin = _this.abm; });
        this.aep(a, function (b) { return b.topMargin = _this.abo; });
        this.aep(a, function (b) { return b.rightMargin = _this.abn; });
        this.aep(a, function (b) { return b.bottomMargin = _this.abl; });
        this.aep(a, function (b) { return b.textColor = _this.afs; });
        this.aeq(a, function (b) { return b.textColor = _this.af6; });
        this.aeq(a, function (b) { return b.leftMargin = _this.abw; });
        this.aeq(a, function (b) { return b.topMargin = _this.abz; });
        this.aeq(a, function (b) { return b.rightMargin = _this.aby; });
        this.aeq(a, function (b) { return b.bottomMargin = _this.abv; });
        this.aep(a, function (b) { return b.textStyle = _this.ady; });
        this.aeq(a, function (b) { return b.textStyle = _this.aem; });
    };
    RadialBaseChart.prototype.wf = function (a) {
        var b = this.bi(a);
        var c = this.dg(a, b);
        if (c == null) {
            return;
        }
        c.itemsSource = this.h2(a);
        if (a.highlightedData != null) {
            c.highlightedItemsSource = this.h3(a);
        }
        c.name = this.qk(a);
        c.title = this.ql(a, b);
        this.dataChart.series.add(c);
    };
    RadialBaseChart.prototype.aev = function (a) {
        this.aew(a, null);
    };
    RadialBaseChart.prototype.aew = function (a, b) {
        a(this.zm());
    };
    RadialBaseChart.prototype.ae1 = function (a, b) {
        a(this.zn());
    };
    RadialBaseChart.prototype.ae0 = function (a) {
        this.ae1(a, true);
    };
    RadialBaseChart.prototype.uh = function (a, b) {
        this.aev(a);
        this.ae1(a, b);
    };
    RadialBaseChart.prototype.aez = function (a) {
        this.aeq(this.zm(), a);
    };
    RadialBaseChart.prototype.ae4 = function (a) {
        this.aeq(this.zn(), a);
    };
    RadialBaseChart.prototype.ae2 = function (a) {
        this.aep(this.zn(), a);
    };
    RadialBaseChart.prototype.aex = function (a) {
        this.aep(this.zm(), a);
    };
    RadialBaseChart.prototype.abf = function (a) {
        var b = this.zm();
        return b.ek(a, new ScalerParams(1, this.yp, this.yo, b.ch));
    };
    RadialBaseChart.prototype.abh = function (a) {
        var b = this.zm();
        return b.en(a, new ScalerParams(1, this.yp, this.yo, b.ch));
    };
    RadialBaseChart.prototype.abg = function (a) {
        var b = this.zn();
        return b.ek(a, new ScalerParams(1, this.yp, this.yo, b.ch));
    };
    RadialBaseChart.prototype.abi = function (a) {
        var b = this.zn();
        return b.en(a, new ScalerParams(1, this.yp, this.yo, b.ch));
    };
    RadialBaseChart.prototype.wc = function (a) {
        _super.prototype.wc.call(this, a);
        if (a == null) {
            return;
        }
        if (a.axes != null) {
            var b = this.zm();
            var c = this.zn();
            if (a.axes.contains(b)) {
                a.axes.remove(b);
            }
            if (a.axes.contains(c)) {
                a.axes.remove(c);
            }
        }
    };
    RadialBaseChart.adj = function (a, b) {
        var e_1, _a;
        try {
            for (var _b = __values(fromEnum(b)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                var d = c.findMatchingHint(16);
                if (d != null) {
                    var e = d.path;
                    return e;
                }
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        return null;
    };
    RadialBaseChart.prototype.us = function (a, b) {
        _super.prototype.us.call(this, a, b);
        if (a == this.dataChart) {
            this.dataChart.axes.add(this.zm());
            this.dataChart.axes.add(this.zn());
        }
    };
    RadialBaseChart.prototype.aer = function (a) {
        var _this = this;
        if (a != null && this.lu != null && a.fm == null) {
            a.provideRenderer(this.lu);
        }
        a.jx = this.afu;
        a.es = this.aa4;
        a.jy = this.afv;
        a.ev = this.aa5;
        a.j0 = this.afx;
        a.fh = this.aa6;
        a.jz = this.afw;
        a.fi = this.aa7;
        a.j1 = this.afy;
        a.fj = this.aa8;
        a.c4 = true;
        a.cu = this.hg;
        a.cw = this.hg;
        var b = a == this.zm();
        if (b) {
            a.g7 = this.ac7;
        }
        a.f1 = this.ab2;
        a.gh = this.acj;
        a.ah = this.zi;
        this.aep(a, function (c) { return c.angle = _this.aaz; });
        this.aep(a, function (c) {
            if (c.extent != _this.aay) {
                c.extent = _this.aay;
            }
        });
        this.aep(a, function (c) { return c.horizontalAlignment = _this.ae8; });
        this.aep(a, function (c) { return c.verticalAlignment = _this.aga; });
        this.aep(a, function (c) { return c.visibility = _this.agf; });
        this.aep(a, function (c) { return c.location = _this.zs(_this.zl); });
        this.aeq(a, function (c) { return c.horizontalAlignment = _this.ae9; });
        this.aeq(a, function (c) { return c.angle = _this.aa9; });
        this.aes(a);
    };
    RadialBaseChart.prototype.aet = function (a) {
        var _this = this;
        if (a == null) {
            return;
        }
        if (this.lu != null && a.fm == null) {
            a.provideRenderer(this.lu);
        }
        a.cu = this.hg;
        a.cw = this.hg;
        this.aep(a, function (b) { return b.angle = _this.abk; });
        this.aep(a, function (b) {
            if (b.extent != _this.abj) {
                b.extent = _this.abj;
            }
        });
        this.aep(a, function (b) { return b.horizontalAlignment = _this.afa; });
        this.aep(a, function (b) { return b.verticalAlignment = _this.agb; });
        this.aep(a, function (b) { return b.visibility = _this.agg; });
        this.aep(a, function (b) { return b.location = _this.zt(_this.zv); });
        this.aeq(a, function (b) { return b.verticalAlignment = _this.agc; });
        this.aeq(a, function (b) { return b.angle = _this.abu; });
        a.jx = this.af1;
        a.es = this.abp;
        a.jy = this.af2;
        a.ev = this.abq;
        a.j0 = this.af4;
        a.fh = this.abr;
        a.jz = this.af3;
        a.fi = this.abs;
        a.j1 = this.af5;
        a.fj = this.abt;
        var b = a == this.zn();
        if (b) {
            a.g7 = this.aed;
        }
        a.gh = this.adp;
        a.ah = this.zj;
        this.aeu(a);
    };
    RadialBaseChart.prototype.up = function () {
        _super.prototype.up.call(this);
        this.aer(this.zm());
        this.aet(this.zn());
    };
    RadialBaseChart.prototype.aep = function (a, b) {
        if (a == null) {
            return;
        }
        if (a.az == null) {
            a.az = new AxisLabelSettings();
            a.az.angle = a.d6();
            a.az.bottomMargin = a.d7();
            a.az.leftMargin = a.d8();
            a.az.rightMargin = a.d9();
            a.az.topMargin = a.ea();
            a.az.horizontalAlignment = a.js();
            a.az.location = a.a0();
            a.az.verticalAlignment = a.kl();
        }
        b(a.az);
    };
    RadialBaseChart.prototype.aeq = function (a, b) {
        if (a == null) {
            return;
        }
        if (a.bf == null) {
            a.bf = new TitleSettings();
            a.bf.bottomMargin = a.ec();
            a.bf.leftMargin = a.ed();
            a.bf.rightMargin = a.ee();
            a.bf.topMargin = a.ef();
            a.bf.location = a.a1();
            a.bf.angle = a.eb();
            a.bf.horizontalAlignment = a.jt();
            a.bf.verticalAlignment = a.km();
        }
        b(a.bf);
    };
    RadialBaseChart.prototype.vl = function (a, b, c) {
        var _this = this;
        _super.prototype.vl.call(this, a, b, c);
        switch (a) {
            case "AngleAxisLabelAngle":
                this.aex(function (d) { return d.angle = _this.aaz; });
                break;
            case "ValueAxisLabelAngle":
                this.ae2(function (d) { return d.angle = _this.abk; });
                break;
            case "AngleAxisLabelHorizontalAlignment":
                this.aex(function (d) { return d.horizontalAlignment = _this.ae8; });
                break;
            case "ValueAxisLabelHorizontalAlignment":
                this.ae2(function (d) { return d.horizontalAlignment = _this.afa; });
                break;
            case "AngleAxisLabelVerticalAlignment":
                this.aex(function (d) { return d.verticalAlignment = _this.aga; });
                break;
            case "ValueAxisLabelVerticalAlignment":
                this.ae2(function (d) { return d.verticalAlignment = _this.agb; });
                break;
            case "AngleAxisLabelVisibility":
                this.aex(function (d) { return d.visibility = _this.agf; });
                break;
            case "ValueAxisLabelVisibility":
                this.ae2(function (d) { return d.visibility = _this.agg; });
                break;
            case "AngleAxisLabel":
                this.aev(function (d) { return d.f1 = _this.ab2; });
                break;
            case "ValueAxisLabel":
                this.ae0(function (d) { return d.f1 = _this.ab3; });
                break;
            case "AngleAxisLabelFormat":
                this.aev(function (d) { return d.gh = _this.acj; });
                break;
            case "AngleAxisLabelFormatSpecifiers":
                this.aev(function (d) { return d.ah = _this.zi; });
                break;
            case "ValueAxisLabelFormat":
                this.ae0(function (d) { return d.gh = _this.adp; });
                break;
            case "ValueAxisLabelFormatSpecifiers":
                this.ae0(function (d) { return d.ah = _this.zj; });
                break;
            case "AngleAxisTitleAngle":
                this.aez(function (d) { return d.angle = _this.aa9; });
                break;
            case "ValueAxisTitleAngle":
                this.ae4(function (d) { return d.angle = _this.abu; });
                break;
            case "AngleAxisTitleAlignment":
                this.aez(function (d) { return d.horizontalAlignment = _this.ae9; });
                break;
            case "ValueAxisTitleAlignment":
                this.ae4(function (d) { return d.verticalAlignment = _this.agc; });
                break;
            case "AngleAxisTitle":
                this.aev(function (d) { return d.g7 = _this.ac7; });
                break;
            case "ValueAxisTitle":
                this.ae1(function (d) { return d.g7 = _this.aed; }, false);
                break;
            case "AngleAxisMajorStroke":
                this.aew(function (d) { return d.jx = _this.afu; }, a);
                break;
            case "ValueAxisMajorStroke":
                this.ae0(function (d) { return d.jx = _this.af1; });
                break;
            case "AngleAxisMajorStrokeThickness":
                this.aew(function (d) { return d.es = _this.aa4; }, a);
                break;
            case "ValueAxisMajorStrokeThickness":
                this.ae0(function (d) { return d.es = _this.abp; });
                break;
            case "AngleAxisMinorStroke":
                this.aev(function (d) { return d.jy = _this.afv; });
                break;
            case "ValueAxisMinorStroke":
                this.ae0(function (d) { return d.jy = _this.af2; });
                break;
            case "AngleAxisMinorStrokeThickness":
                this.aev(function (d) { return d.ev = _this.aa5; });
                break;
            case "ValueAxisMinorStrokeThickness":
                this.ae0(function (d) { return d.ev = _this.abq; });
                break;
            case "AngleAxisTickLength":
                this.aev(function (d) { return d.fi = _this.aa7; });
                break;
            case "ValueAxisTickLength":
                this.ae0(function (d) { return d.fi = _this.abs; });
                break;
            case "AngleAxisTickStroke":
                this.aev(function (d) { return d.j1 = _this.afy; });
                break;
            case "ValueAxisTickStroke":
                this.ae0(function (d) { return d.j1 = _this.af5; });
                break;
            case "AngleAxisTickStrokeThickness":
                this.aev(function (d) { return d.fj = _this.aa8; });
                break;
            case "ValueAxisTickStrokeThickness":
                this.ae0(function (d) { return d.fj = _this.abt; });
                break;
            case "AngleAxisStroke":
                this.aev(function (d) { return d.j0 = _this.afx; });
                break;
            case "ValueAxisStroke":
                this.ae0(function (d) { return d.j0 = _this.af4; });
                break;
            case "AngleAxisStrokeThickness":
                this.aev(function (d) { return d.fh = _this.aa6; });
                break;
            case "ValueAxisStrokeThickness":
                this.ae0(function (d) { return d.fh = _this.abr; });
                break;
            case "AngleAxisExtent":
                this.aex(function (d) { return d.extent = _this.aay; });
                break;
            case "ValueAxisExtent":
                this.ae2(function (d) { return d.extent = _this.abj; });
                break;
            case "AngleAxisStrip":
                this.aev(function (d) { return d.jz = _this.afw; });
                break;
            case "ValueAxisStrip":
                this.ae0(function (d) { return d.jz = _this.af3; });
                break;
            case "AngleAxisInverted":
                this.aev(function (d) { return d.ch = _this.zy; });
                break;
            case "ValueAxisInverted":
                this.ae0(function (d) { return d.ch = _this.zz; });
                break;
            case "ValueAxisLabelLocation":
                this.ae3();
                break;
            case "AngleAxisLabelLocation":
                this.aey();
                break;
        }
    };
    RadialBaseChart.prototype.ae3 = function () {
        var a = this.zt(this.zv);
        if (a == 2 || a == 7) {
            this.afa = 2;
        }
        else {
            this.afa = 0;
        }
        this.ae2(function (b) { return b.location = a; });
    };
    RadialBaseChart.prototype.aey = function () {
        var a = this.zs(this.zl);
        if (a == 1 || a == 5) {
            this.aga = 0;
        }
        else {
            this.aga = 2;
        }
        this.aex(function (b) { return b.location = a; });
    };
    RadialBaseChart.prototype.zt = function (a) {
        if (a == 0) {
            return 2;
        }
        else if (a == 1) {
            return 3;
        }
        else if (a == 3) {
            return 7;
        }
        else if (a == 2) {
            return 6;
        }
        else {
            if (this.cf == 1) {
                return 3;
            }
            else {
                return 2;
            }
        }
    };
    RadialBaseChart.prototype.zs = function (a) {
        if (a == 1) {
            return 1;
        }
        else if (a == 0) {
            return 0;
        }
        else if (a == 3) {
            return 5;
        }
        else if (a == 2) {
            return 4;
        }
        else {
            return 1;
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "ab2", {
        get: function () {
            return this.ab0;
        },
        set: function (a) {
            var b = this.ab2;
            if (a != b) {
                this.ab0 = a;
                this.vl("AngleAxisLabel", b, this.ab2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ab3", {
        get: function () {
            return this.ab1;
        },
        set: function (a) {
            var b = this.ab3;
            if (a != b) {
                this.ab1 = a;
                this.vl("ValueAxisLabel", b, this.ab3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afu", {
        get: function () {
            return this.afe;
        },
        set: function (a) {
            var b = this.afu;
            if (a != b) {
                this.afe = a;
                this.vl("AngleAxisMajorStroke", b, this.afu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af1", {
        get: function () {
            return this.afl;
        },
        set: function (a) {
            var b = this.af1;
            if (a != b) {
                this.afl = a;
                this.vl("ValueAxisMajorStroke", b, this.af1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa4", {
        get: function () {
            return this.z6;
        },
        set: function (a) {
            var b = this.aa4;
            if (a != b) {
                this.z6 = a;
                this.vl("AngleAxisMajorStrokeThickness", b, this.aa4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abp", {
        get: function () {
            return this.aan;
        },
        set: function (a) {
            var b = this.abp;
            if (a != b) {
                this.aan = a;
                this.vl("ValueAxisMajorStrokeThickness", b, this.abp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa5", {
        get: function () {
            return this.z7;
        },
        set: function (a) {
            var b = this.aa5;
            if (a != b) {
                this.z7 = a;
                this.vl("AngleAxisMinorStrokeThickness", b, this.aa5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abq", {
        get: function () {
            return this.aao;
        },
        set: function (a) {
            var b = this.abq;
            if (a != b) {
                this.aao = a;
                this.vl("ValueAxisMinorStrokeThickness", b, this.abq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afw", {
        get: function () {
            return this.afg;
        },
        set: function (a) {
            var b = this.afw;
            if (a != b) {
                this.afg = a;
                this.vl("AngleAxisStrip", b, this.afw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af3", {
        get: function () {
            return this.afn;
        },
        set: function (a) {
            var b = this.af3;
            if (a != b) {
                this.afn = a;
                this.vl("ValueAxisStrip", b, this.af3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afx", {
        get: function () {
            return this.afh;
        },
        set: function (a) {
            var b = this.afx;
            if (a != b) {
                this.afh = a;
                this.vl("AngleAxisStroke", b, this.afx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af4", {
        get: function () {
            return this.afo;
        },
        set: function (a) {
            var b = this.af4;
            if (a != b) {
                this.afo = a;
                this.vl("ValueAxisStroke", b, this.af4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa6", {
        get: function () {
            return this.z8;
        },
        set: function (a) {
            var b = this.aa6;
            if (a != b) {
                this.z8 = a;
                this.vl("AngleAxisStrokeThickness", b, this.aa6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abr", {
        get: function () {
            return this.aap;
        },
        set: function (a) {
            var b = this.abr;
            if (a != b) {
                this.aap = a;
                this.vl("ValueAxisStrokeThickness", b, this.abr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa7", {
        get: function () {
            return this.z9;
        },
        set: function (a) {
            var b = this.aa7;
            if (a != b) {
                this.z9 = a;
                this.vl("AngleAxisTickLength", b, this.aa7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abs", {
        get: function () {
            return this.aaq;
        },
        set: function (a) {
            var b = this.abs;
            if (a != b) {
                this.aaq = a;
                this.vl("ValueAxisTickLength", b, this.abs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afy", {
        get: function () {
            return this.afi;
        },
        set: function (a) {
            var b = this.afy;
            if (a != b) {
                this.afi = a;
                this.vl("AngleAxisTickStroke", b, this.afy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af5", {
        get: function () {
            return this.afp;
        },
        set: function (a) {
            var b = this.af5;
            if (a != b) {
                this.afp = a;
                this.vl("ValueAxisTickStroke", b, this.af5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa8", {
        get: function () {
            return this.aaa;
        },
        set: function (a) {
            var b = this.aa8;
            if (a != b) {
                this.aaa = a;
                this.vl("AngleAxisTickStrokeThickness", b, this.aa8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abt", {
        get: function () {
            return this.aar;
        },
        set: function (a) {
            var b = this.abt;
            if (a != b) {
                this.aar = a;
                this.vl("ValueAxisTickStrokeThickness", b, this.abt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ac7", {
        get: function () {
            return this.ab6;
        },
        set: function (a) {
            var b = this.ac7;
            if (a != b) {
                this.ab6 = a;
                this.vl("AngleAxisTitle", b, this.ac7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aed", {
        get: function () {
            return this.aca;
        },
        set: function (a) {
            var b = this.aed;
            if (a != b) {
                this.aca = a;
                this.vl("ValueAxisTitle", b, this.aed);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "afv", {
        get: function () {
            return this.aff;
        },
        set: function (a) {
            var b = this.afv;
            if (a != b) {
                this.aff = a;
                this.vl("AngleAxisMinorStroke", b, this.afv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "af2", {
        get: function () {
            return this.afm;
        },
        set: function (a) {
            var b = this.af2;
            if (a != b) {
                this.afm = a;
                this.vl("ValueAxisMinorStroke", b, this.af2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aaz", {
        get: function () {
            return this.z1;
        },
        set: function (a) {
            var b = this.aaz;
            if (a != b) {
                this.z1 = a;
                this.vl("AngleAxisLabelAngle", b, this.aaz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abk", {
        get: function () {
            return this.aai;
        },
        set: function (a) {
            var b = this.abk;
            if (a != b) {
                this.aai = a;
                this.vl("ValueAxisLabelAngle", b, this.abk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aay", {
        get: function () {
            return this.z0;
        },
        set: function (a) {
            var b = this.aay;
            if (a != b) {
                this.z0 = a;
                this.vl("AngleAxisExtent", b, this.aay);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abj", {
        get: function () {
            return this.aah;
        },
        set: function (a) {
            var b = this.abj;
            if (a != b) {
                this.aah = a;
                this.vl("ValueAxisExtent", b, this.abj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aa9", {
        get: function () {
            return this.aab;
        },
        set: function (a) {
            var b = this.aa9;
            if (a != b) {
                this.aab = a;
                this.vl("AngleAxisTitleAngle", b, this.aa9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "abu", {
        get: function () {
            return this.aas;
        },
        set: function (a) {
            var b = this.abu;
            if (a != b) {
                this.aas = a;
                this.vl("ValueAxisTitleAngle", b, this.abu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "zy", {
        get: function () {
            return this.zw;
        },
        set: function (a) {
            var b = this.zy;
            if (a != b) {
                this.zw = a;
                this.vl("AngleAxisInverted", b, this.zy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "zz", {
        get: function () {
            return this.zx;
        },
        set: function (a) {
            var b = this.zz;
            if (a != b) {
                this.zx = a;
                this.vl("ValueAxisInverted", b, this.zz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ae9", {
        get: function () {
            return this.ae6;
        },
        set: function (a) {
            var b = this.ae9;
            if (a != b) {
                this.ae6 = a;
                this.vl("AngleAxisTitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.ae9));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agc", {
        get: function () {
            return this.af9;
        },
        set: function (a) {
            var b = this.agc;
            if (a != b) {
                this.af9 = a;
                this.vl("ValueAxisTitleAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.agc));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "ae8", {
        get: function () {
            return this.ae5;
        },
        set: function (a) {
            var b = this.ae8;
            if (a != b) {
                this.ae5 = a;
                this.vl("AngleAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.ae8));
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.get_afa = function () {
        return this.ae7;
    };
    RadialBaseChart.prototype.set_afa = function (a) {
        var b = this.afa;
        if (a != b) {
            this.ae7 = a;
            this.vl("ValueAxisLabelHorizontalAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.afa));
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "afa", {
        get: function () {
            return this.get_afa();
        },
        set: function (a) {
            this.set_afa(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "aga", {
        get: function () {
            return this.af7;
        },
        set: function (a) {
            var b = this.aga;
            if (a != b) {
                this.af7 = a;
                this.vl("AngleAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.aga));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agb", {
        get: function () {
            return this.af8;
        },
        set: function (a) {
            var b = this.agb;
            if (a != b) {
                this.af8 = a;
                this.vl("ValueAxisLabelVerticalAlignment", enumGetBox(VerticalAlignment_$type, b), enumGetBox(VerticalAlignment_$type, this.agb));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agf", {
        get: function () {
            return this.agd;
        },
        set: function (a) {
            var b = this.agf;
            if (a != b) {
                this.agd = a;
                this.vl("AngleAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.agf));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "agg", {
        get: function () {
            return this.age;
        },
        set: function (a) {
            var b = this.agg;
            if (a != b) {
                this.age = a;
                this.vl("ValueAxisLabelVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.agg));
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.get_zv = function () {
        return this.zu;
    };
    RadialBaseChart.prototype.set_zv = function (a) {
        var b = this.zv;
        if (a != b) {
            this.zu = a;
            this.vl("ValueAxisLabelLocation", enumGetBox(ValueAxisLabelLocation_$type, b), enumGetBox(ValueAxisLabelLocation_$type, this.zv));
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "zv", {
        get: function () {
            return this.get_zv();
        },
        set: function (a) {
            this.set_zv(a);
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.prototype.get_zl = function () {
        return this.zk;
    };
    RadialBaseChart.prototype.set_zl = function (a) {
        var b = this.zl;
        if (a != b) {
            this.zk = a;
            this.vl("AngleAxisLabelLocation", enumGetBox(AngleAxisLabelLocation_$type, b), enumGetBox(AngleAxisLabelLocation_$type, this.zl));
        }
    };
    Object.defineProperty(RadialBaseChart.prototype, "zl", {
        get: function () {
            return this.get_zl();
        },
        set: function (a) {
            this.set_zl(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "acj", {
        get: function () {
            return this.ab4;
        },
        set: function (a) {
            var b = this.ab4;
            if (a != b) {
                this.ab4 = a;
                this.vl("AngleAxisLabelFormat", b, this.ab4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "zi", {
        get: function () {
            return this.zg;
        },
        set: function (a) {
            var b = this.zg;
            if (a != b) {
                this.zg = a;
                this.vl("AngleAxisLabelFormatSpecifiers", b, this.zg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "adp", {
        get: function () {
            return this.ab8;
        },
        set: function (a) {
            var b = this.ab8;
            if (a != b) {
                this.ab8 = a;
                this.vl("ValueAxisLabelFormat", b, this.ab8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(RadialBaseChart.prototype, "zj", {
        get: function () {
            return this.zh;
        },
        set: function (a) {
            var b = this.zh;
            if (a != b) {
                this.zh = a;
                this.vl("ValueAxisLabelFormatSpecifiers", b, this.zh);
            }
        },
        enumerable: false,
        configurable: true
    });
    RadialBaseChart.$t = markType(RadialBaseChart, 'RadialBaseChart', DomainChart.$);
    return RadialBaseChart;
}(DomainChart));
export { RadialBaseChart };
