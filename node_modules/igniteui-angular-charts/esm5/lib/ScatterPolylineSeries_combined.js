/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ShapeSeriesBase } from "./ShapeSeriesBase";
import { StyleSelector } from "./StyleSelector";
import { DependencyProperty } from "igniteui-angular-core";
import { Style } from "igniteui-angular-core";
import { markType, markDep, typeCast } from "igniteui-angular-core";
import { ShapeSeriesViewBase } from "./ShapeSeriesViewBase";
import { PropertyMetadata } from "igniteui-angular-core";
import { Defaults } from "./Defaults";
import { Path } from "igniteui-angular-core";
import { stringIsNullOrEmpty } from "igniteui-angular-core";
/**
 * @hidden
 */
var ScatterPolylineSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterPolylineSeries, _super);
    function ScatterPolylineSeries() {
        var _this = _super.call(this) || this;
        _this.ab = ScatterPolylineSeries.$;
        return _this;
    }
    ScatterPolylineSeries.prototype.bi = function () {
        return new ScatterPolylineSeries();
    };
    ScatterPolylineSeries.prototype.get_fp = function () {
        return true;
    };
    ScatterPolylineSeries.prototype.cq = function () {
        return new ScatterPolylineSeriesView(this);
    };
    ScatterPolylineSeries.prototype.get_xk = function () {
        return false;
    };
    ScatterPolylineSeries.prototype.qx = function (a) {
        _super.prototype.qx.call(this, a);
        this.zh = a;
    };
    ScatterPolylineSeries.prototype.get_xp = function () {
        return false;
    };
    ScatterPolylineSeries.prototype.q5 = function (a, b, c, d) {
        _super.prototype.q5.call(this, a, b, c, d);
        switch (b) {
            case ScatterPolylineSeries.$$p[0]:
                this.zh.cy(this.zn);
                this.rn(false);
                this.qh();
                break;
            case ScatterPolylineSeries.$$p[1]:
                this.zh.cz(this.zi);
                this.rn(false);
                this.qh();
                break;
        }
    };
    ScatterPolylineSeries.prototype.y0 = function (a) {
        var b = a;
        b.cy(this.zn);
        b.cz(this.zi);
        _super.prototype.y0.call(this, a);
    };
    ScatterPolylineSeries.prototype.a1 = function (a, b) {
        var c = this.zh.c3(a, b, true);
        if (c != null) {
            return c.dataContext;
        }
        return _super.prototype.a1.call(this, a, b);
    };
    ScatterPolylineSeries.$t = markType(ScatterPolylineSeries, 'ScatterPolylineSeries', ShapeSeriesBase.$);
    ScatterPolylineSeries.$$p = markDep(DependencyProperty, PropertyMetadata, ScatterPolylineSeries, 'raisePropertyChanged', ['ShapeStyle:zn:zl', [Style.$, null], 'ShapeStyleSelector:zi:zm', [StyleSelector.$, null]]);
    return ScatterPolylineSeries;
}(ShapeSeriesBase));
export { ScatterPolylineSeries };
/**
 * @hidden
 */
var ScatterPolylineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterPolylineSeriesView, _super);
    function ScatterPolylineSeriesView(a) {
        return _super.call(this, a) || this;
    }
    ScatterPolylineSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.b6.jn = Defaults.aa;
        }
    };
    ScatterPolylineSeriesView.prototype.c5 = function (a, b) {
        return this.c6(a, b, false);
    };
    ScatterPolylineSeriesView.prototype.cm = function (a, b, c) {
        _super.prototype.cm.call(this, a, b, c);
        ShapeSeriesViewBase.cl(this, a, b);
    };
    ScatterPolylineSeriesView.prototype.ck = function (a, b) {
        var c = typeCast(Path.$, a);
        if (c == null) {
            return;
        }
        c.an = b;
    };
    ScatterPolylineSeriesView.prototype.ac = function (a) {
        var b = _super.prototype.ac.call(this, a);
        b._fill = null;
        return b;
    };
    ScatterPolylineSeriesView.prototype.ab = function (a) {
        var b = _super.prototype.ab.call(this, a);
        b._fill = null;
        return b;
    };
    ScatterPolylineSeriesView.prototype.cb = function (a) {
        return a.width >= this.b6.x6 || a.height >= this.b6.x6;
    };
    ScatterPolylineSeriesView.prototype.getDefaultTooltipTemplate = function () {
        var a = "<div class='ui-chart-default-tooltip-content'><span";
        var b = this.e.a9.a$u(this.e);
        if (!stringIsNullOrEmpty(b)) {
            a += " style='color:" + b + "'";
        }
        a += ">" + this.b6.title + "</span><br/>";
        a += "</div>";
        return a;
    };
    ScatterPolylineSeriesView.$t = markType(ScatterPolylineSeriesView, 'ScatterPolylineSeriesView', ShapeSeriesViewBase.$);
    return ScatterPolylineSeriesView;
}(ShapeSeriesViewBase));
export { ScatterPolylineSeriesView };
