import { __extends } from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxAnchoredCategorySeriesComponent } from "./igx-anchored-category-series-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PointSeries } from "./PointSeries";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent point series.
*
* You can use the `PointSeries` plot a value along a category or date.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis
* 		#yAxis>
*     <igx-numeric-y-axis>
*     </igx-numeric-y-axis>
*     <igx-point-series
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		valueMemberPath="coal">
*     </igx-point-series>
* </igx-data-chart>
* ```
*
* ```ts
* let series: IgxPointSeriesComponent = new IgxPointSeriesComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.valueMemberPath = "coal";
* this.chart.series.add(series);
* ```
*/
var IgxPointSeriesComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxPointSeriesComponent, _super);
    function IgxPointSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxPointSeriesComponent.prototype.createImplementation = function () {
        return new PointSeries();
    };
    Object.defineProperty(IgxPointSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxPointSeriesComponent.prototype, "hasOnlyMarkers", {
        /**
         * Gets whether the series has only marker as visuals
        */
        get: function () {
            return this.i.eg;
        },
        enumerable: false,
        configurable: true
    });
    IgxPointSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPointSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxPointSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxPointSeriesComponent, selector: "igx-point-series", providers: [{ provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxPointSeriesComponent;
}(IgxHorizontalAnchoredCategorySeriesComponent));
export { IgxPointSeriesComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPointSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-point-series',
                    template: "",
                    providers: [{ provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxPointSeriesComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
