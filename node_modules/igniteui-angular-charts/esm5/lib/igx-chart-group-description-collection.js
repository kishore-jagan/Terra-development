import { __generator } from "tslib";
import { IgxChartGroupDescription } from "./igx-chart-group-description";
import { ChartGroupDescriptionCollection as ChartGroupDescriptionCollection_internal } from "./ChartGroupDescriptionCollection";
/**
 * Represents a collection of grouping elements that are applied to a data source or provider.
*/
var IgxChartGroupDescriptionCollection = /** @class */ /*@__PURE__*/ (function () {
    function IgxChartGroupDescriptionCollection() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    IgxChartGroupDescriptionCollection.prototype.createImplementation = function () {
        return new ChartGroupDescriptionCollection_internal();
    };
    Object.defineProperty(IgxChartGroupDescriptionCollection.prototype, "i", {
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxChartGroupDescriptionCollection.prototype.onImplementationCreated = function () {
    };
    IgxChartGroupDescriptionCollection.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    IgxChartGroupDescriptionCollection.prototype.item = function (index, value) {
        var int = null;
        if (value !== undefined) {
            int = this.i.set(index, value == null ? null : value.i);
        }
        else {
            int = this.i.get(index);
        }
        var ext = null;
        if (int != null) {
            ext = int.externalObject;
            if (!ext) {
                ext = new IgxChartGroupDescription();
                ext._implementation = int;
                int.externalObject = ext;
            }
        }
        return ext;
    };
    Object.defineProperty(IgxChartGroupDescriptionCollection.prototype, "count", {
        get: function () {
            return this.i.size();
        },
        enumerable: false,
        configurable: true
    });
    IgxChartGroupDescriptionCollection.prototype.toArray = function () {
        var arr = [];
        for (var i = 0; i < this.count; i++) {
            arr[i] = this.item(i);
        }
        return arr;
    };
    IgxChartGroupDescriptionCollection.prototype[Symbol.iterator] = function () {
        var i, item;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    i = 0;
                    _a.label = 1;
                case 1:
                    if (!(i < this.count))
                        return [3 /*break*/, 4];
                    item = this.item(i);
                    if (item.externalObject) {
                        item = item.externalObject;
                    }
                    return [4 /*yield*/, item];
                case 2:
                    _a.sent();
                    _a.label = 3;
                case 3:
                    i++;
                    return [3 /*break*/, 1];
                case 4: return [2 /*return*/];
            }
        });
    };
    IgxChartGroupDescriptionCollection.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    };
    IgxChartGroupDescriptionCollection.prototype.add = function (item) {
        var iv = this.i.g((item == null ? null : item.i));
        return (iv);
    };
    IgxChartGroupDescriptionCollection.prototype.insert = function (index, item) {
        this.i.n(index, (item == null ? null : item.i));
    };
    IgxChartGroupDescriptionCollection.prototype.clear = function () {
        this.i.m();
    };
    IgxChartGroupDescriptionCollection.prototype.indexOf = function (item) {
        var iv = this.i.j((item == null ? null : item.i));
        return (iv);
    };
    IgxChartGroupDescriptionCollection.prototype.remove = function (item) {
        var iv = this.i.h((item == null ? null : item.i));
        return (iv);
    };
    IgxChartGroupDescriptionCollection.prototype.removeAt = function (index) {
        var iv = this.i.b(index);
        var ret = null;
        if (iv && iv.externalObject) {
            ret = iv.externalObject;
        }
        else {
            if (iv) {
                var e = new IgxChartGroupDescription();
                e._implementation = iv;
                iv.externalObject = e;
                ret = e;
            }
        }
        return ret;
    };
    return IgxChartGroupDescriptionCollection;
}());
export { IgxChartGroupDescriptionCollection };
