import { __extends } from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxStraightNumericAxisBaseComponent } from "./igx-straight-numeric-axis-base-component";
import { IgxNumericAxisBaseComponent } from "./igx-numeric-axis-base-component";
import { IgxAxisComponent } from "./igx-axis-component";
import { NumericXAxis } from "./NumericXAxis";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent numeric X axis.
*
* The `NumericXAxis` treats the data as continuously varying numerical data items. Labels on this axis are placed along the X-axis. The location of labels varies according to the value in a data column that is mapped using the `XMemberPath` property of Scatter Series or `ValueMemberPath` property of Bar Series.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-numeric-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		crossingAxis= "xAxis"
* 		crossingValue= 700
* 		#yAxis>
*     </igx-numeric-y-axis>
* </igx-data-chart>
* ```
*/
var IgxNumericXAxisComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxNumericXAxisComponent, _super);
    function IgxNumericXAxisComponent() {
        return _super.call(this) || this;
    }
    IgxNumericXAxisComponent.prototype.createImplementation = function () {
        return new NumericXAxis();
    };
    Object.defineProperty(IgxNumericXAxisComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxNumericXAxisComponent.prototype.scrollRangeIntoView = function (minimum, maximum) {
        this.i.n2(minimum, maximum);
    };
    IgxNumericXAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxNumericXAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxNumericXAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxNumericXAxisComponent, selector: "igx-numeric-x-axis", providers: [{ provide: IgxStraightNumericAxisBaseComponent, useExisting: forwardRef(function () { return IgxNumericXAxisComponent; }) }, { provide: IgxNumericAxisBaseComponent, useExisting: forwardRef(function () { return IgxNumericXAxisComponent; }) }, { provide: IgxAxisComponent, useExisting: forwardRef(function () { return IgxNumericXAxisComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxNumericXAxisComponent;
}(IgxStraightNumericAxisBaseComponent));
export { IgxNumericXAxisComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxNumericXAxisComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-numeric-x-axis',
                    template: "",
                    providers: [{ provide: IgxStraightNumericAxisBaseComponent, useExisting: forwardRef(function () { return IgxNumericXAxisComponent; }) }, { provide: IgxNumericAxisBaseComponent, useExisting: forwardRef(function () { return IgxNumericXAxisComponent; }) }, { provide: IgxAxisComponent, useExisting: forwardRef(function () { return IgxNumericXAxisComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
