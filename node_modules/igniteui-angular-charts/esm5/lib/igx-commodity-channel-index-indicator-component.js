import { __extends } from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { CommodityChannelIndexIndicator } from "./CommodityChannelIndexIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent Commodity Channel Index indicator series.
 * Default required members: High, Low, Close
*
* `CommodityChannelIndexIndicator` class specify the series as Commodity Channel Index Indicator series.
*
* ```html
* <igx-data-chart [dataSource]="data">
*   <igx-category-x-axis #xAxis
*     label="time">
*   </igx-category-x-axis>
*   <igx-numeric-y-axis #yAxis>
*   </igx-numeric-y-axis>
*
*   <igx-commodity-channel-index-indicator
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     openMemberPath="open"
*     highMemberPath="high"
*     lowMemberPath="low"
*     closeMemberPath="close"
*     volumeMemberPath="volume"
*     longPeriod="30" >
*   </igx-commodity-channel-index-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxCommodityChannelIndexIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
var IgxCommodityChannelIndexIndicatorComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxCommodityChannelIndexIndicatorComponent, _super);
    function IgxCommodityChannelIndexIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxCommodityChannelIndexIndicatorComponent.prototype.createImplementation = function () {
        return new CommodityChannelIndexIndicator();
    };
    Object.defineProperty(IgxCommodityChannelIndexIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxCommodityChannelIndexIndicatorComponent.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current CCISeries object.
         * The typical, and initial, value for CCI periods is 20.
        *
        * ```html
        * <igx-data-chart [dataSource]="data">
        *   <igx-category-x-axis #xAxis
        *     label="time">
        *   </igx-category-x-axis>
        *   <igx-numeric-y-axis #yAxis>
        *   </igx-numeric-y-axis>
        *   <igx-commodity-channel-index-indicator
        *     [xAxis]="xAxis"
        *     [yAxis]="yAxis"
        *     openMemberPath="open"
        *     highMemberPath="high"
        *     lowMemberPath="low"
        *     closeMemberPath="close"
        *     volumeMemberPath="volume"
        *     period="30" >
        *   </igx-commodity-channel-index-indicator>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * this.series.period = 30;
        * ```
        */
        get: function () {
            return this.i.ab8;
        },
        set: function (v) {
            this.i.ab8 = +v;
        },
        enumerable: false,
        configurable: true
    });
    IgxCommodityChannelIndexIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxCommodityChannelIndexIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxCommodityChannelIndexIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxCommodityChannelIndexIndicatorComponent, selector: "igx-commodity-channel-index-indicator", inputs: { period: "period" }, providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxCommodityChannelIndexIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxCommodityChannelIndexIndicatorComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxCommodityChannelIndexIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-commodity-channel-index-indicator',
                    template: "",
                    providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxCommodityChannelIndexIndicatorComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { period: [{
                type: Input
            }] } });
