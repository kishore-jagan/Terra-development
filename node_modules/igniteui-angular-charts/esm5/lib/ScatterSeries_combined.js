/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { ScatterBase } from "./ScatterBase";
import { markType } from "igniteui-angular-core";
import { ScatterFrame } from "./ScatterFrame";
import { ScatterBaseView } from "./ScatterBaseView";
import { Defaults } from "./Defaults";
import { Color } from "igniteui-angular-core";
/**
 * @hidden
 */
var ScatterSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterSeries, _super);
    function ScatterSeries() {
        var _this = _super.call(this) || this;
        _this.ab = ScatterSeries.$;
        _this.yu = new ScatterFrame();
        _this.yw = new ScatterFrame();
        _this.ys = new ScatterFrame();
        return _this;
    }
    ScatterSeries.prototype.bi = function () {
        return new ScatterSeries();
    };
    ScatterSeries.prototype.get_eg = function () {
        return true;
    };
    ScatterSeries.prototype.cq = function () {
        return new ScatterSeriesView(this);
    };
    ScatterSeries.prototype.jj = function () {
        return 0.7;
    };
    ScatterSeries.prototype.wt = function () {
        if (this.ws == 0) {
            return 2;
        }
        return _super.prototype.wt.call(this);
    };
    ScatterSeries.prototype.qx = function (a) {
        _super.prototype.qx.call(this, a);
        this.ace = a;
    };
    ScatterSeries.$t = markType(ScatterSeries, 'ScatterSeries', ScatterBase.$);
    return ScatterSeries;
}(ScatterBase));
export { ScatterSeries };
/**
 * @hidden
 */
var ScatterSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ScatterSeriesView, _super);
    function ScatterSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.dk = null;
        _this.dk = a;
        return _this;
    }
    ScatterSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.b4.w2 = Defaults.e;
        }
    };
    ScatterSeriesView.prototype.af = function () {
        var a = new Color();
        a.colorString = "rgba(95,95,95,0.5)";
        this.e.vv = a;
        this.e.jk = 3;
        this.e.jl = 2;
        this.e.jm = 2;
        this.e.ha = false;
    };
    ScatterSeriesView.$t = markType(ScatterSeriesView, 'ScatterSeriesView', ScatterBaseView.$);
    return ScatterSeriesView;
}(ScatterBaseView));
export { ScatterSeriesView };
