import { __extends } from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { StochRSIIndicator } from "./StochRSIIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent StochRSI indicator series.
 * Default required members: Close
*
* `StochRSIIndicator` or Stochastic Relative Strength IndexI Indicator (SRSI) measures when a security is overbought or oversold within a specified period of time. The values range from 0 to 1. The StochRSI Indicator is calculated by applying the Stochastic Oscillator formula to RelativeStrengthIndexIndicator (RSI) data.
*
* Using this indicator requires setting the `CloseMemberPath`.
*
* ```html
* <igx-data-chart
*     width=500px
*     height=500px
*     [dataSource]="data" >
*     <igx-ordinal-time-x-axis
*         dateTimeMemberPath="TimeStamp"
*         #xAxis>
*       </igx-ordinal-time-x-axis>
*     <igx-numeric-y-axis
*        #yAxis></igx-numeric-y-axis>
*     <igx-stoch-rsi-indicator
*        [xAxis]="xAxis"
*        [yAxis]="yAxis"
*        closeMemberPath="Close">
*      </igx-stoch-rsi-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxStochRSIIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
var IgxStochRSIIndicatorComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxStochRSIIndicatorComponent, _super);
    function IgxStochRSIIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxStochRSIIndicatorComponent.prototype.createImplementation = function () {
        return new StochRSIIndicator();
    };
    Object.defineProperty(IgxStochRSIIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStochRSIIndicatorComponent.prototype, "period", {
        /**
         * Gets or sets the moving average period for the current StochRSIIndicator object.
         * The typical, and initial, value for StochRSI periods is 14.
        *
        * ```html
        * <igx-data-chart
        *     width=500px
        *     height=500px
        *     [dataSource]="data" >
        *     <igx-ordinal-time-x-axis
        *         dateTimeMemberPath="TimeStamp"
        *         #xAxis>
        *       </igx-ordinal-time-x-axis>
        *     <igx-numeric-y-axis
        *        #yAxis></igx-numeric-y-axis>
        *     <igx-stoch-rsi-indicator
        *        [xAxis]="xAxis"
        *        [yAxis]="yAxis"
        *        closeMemberPath="Close"
        *        period=10>
        *      </igx-stoch-rsi-indicator>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * this.series.period = 10;
        * ```
        */
        get: function () {
            return this.i.ab8;
        },
        set: function (v) {
            this.i.ab8 = +v;
        },
        enumerable: false,
        configurable: true
    });
    IgxStochRSIIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxStochRSIIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxStochRSIIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxStochRSIIndicatorComponent, selector: "igx-stoch-rsi-indicator", inputs: { period: "period" }, providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxStochRSIIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxStochRSIIndicatorComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxStochRSIIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-stoch-rsi-indicator',
                    template: "",
                    providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxStochRSIIndicatorComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { period: [{
                type: Input
            }] } });
