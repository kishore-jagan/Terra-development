/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Base, INotifyPropertyChanged_$type, BaseError, Type, PropertyChangedEventArgs, Delegate_$type, runOn, delegateCombine, fromEnum, String_$type, EnumUtil, enumGetBox, typeCast, delegateRemove, markType, TypeRegistrar, getInstanceType } from "igniteui-angular-core";
import { IDataLegendTarget_$type } from "igniteui-angular-core";
import { IToolbarTarget_$type } from "igniteui-angular-core";
import { ArrayExtension } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { Brush } from "igniteui-angular-core";
import { XamDataChart } from "./XamDataChart";
import { DataSeriesType_$type } from "igniteui-angular-core";
import { MarkerType_$type } from "./MarkerType";
import { Color } from "igniteui-angular-core";
import { ColorUtil } from "igniteui-angular-core";
import { DVContainer } from "igniteui-angular-core";
import { DataToolTipLayerGroupingMode_$type } from "igniteui-angular-core";
import { DataTooltipGroupedPositionX_$type } from "igniteui-angular-core";
import { DataTooltipGroupedPositionY_$type } from "igniteui-angular-core";
import { DataAbbreviationMode_$type } from "igniteui-angular-core";
import { DataLegendValueMode_$type } from "igniteui-angular-core";
import { Thickness } from "igniteui-angular-core";
import { DataLegendHeaderDateMode_$type } from "igniteui-angular-core";
import { DataLegendHeaderTimeMode_$type } from "igniteui-angular-core";
import { DataLegendSummaryType_$type } from "igniteui-angular-core";
import { LegendItemBadgeShape_$type } from "igniteui-angular-core";
import { DataLegendUnitsMode_$type } from "igniteui-angular-core";
import { DataLegendLabelMode_$type } from "igniteui-angular-core";
import { ChartSortDescriptionCollection } from "./ChartSortDescriptionCollection";
import { FilterExpressionCollection } from "igniteui-angular-core";
import { ChartSummaryDescriptionCollection } from "./ChartSummaryDescriptionCollection";
import { SeriesSelectionMode_$type } from "./SeriesSelectionMode";
import { SeriesSelectionBehavior_$type } from "./SeriesSelectionBehavior";
import { ChartSelectedItemCollection } from "./ChartSelectedItemCollection";
import { SortGroupParser } from "igniteui-angular-core";
import { FilterExpressionParsingHelper } from "igniteui-angular-core";
import { FilterStringErrorsParsingEventArgs } from "./FilterStringErrorsParsingEventArgs";
import { SummaryParser } from "igniteui-angular-core";
import { BrushCollection } from "igniteui-angular-core";
import { SeriesHighlightedValuesDisplayMode_$type } from "./SeriesHighlightedValuesDisplayMode";
import { Visibility_$type } from "igniteui-angular-core";
import { Rect } from "igniteui-angular-core";
import { HorizontalAlignment_$type } from "igniteui-angular-core";
import { UnknownValuePlotting_$type } from "igniteui-angular-core";
import { SeriesOutlineMode_$type } from "./SeriesOutlineMode";
import { MarkerOutlineMode_$type } from "./MarkerOutlineMode";
import { MarkerFillMode_$type } from "./MarkerFillMode";
import { MarkerAutomaticBehavior_$type } from "./MarkerAutomaticBehavior";
import { TrendLineType_$type } from "igniteui-angular-core";
import { ComputedPlotAreaMarginMode_$type } from "./ComputedPlotAreaMarginMode";
import { SeriesPlotAreaMarginHorizontalMode_$type } from "./SeriesPlotAreaMarginHorizontalMode";
import { SeriesPlotAreaMarginVerticalMode_$type } from "./SeriesPlotAreaMarginVerticalMode";
import { SeriesHighlightingMode_$type } from "./SeriesHighlightingMode";
import { SeriesHighlightingBehavior_$type } from "./SeriesHighlightingBehavior";
import { LegendHighlightingMode_$type } from "./LegendHighlightingMode";
import { LegendItemBadgeMode_$type } from "igniteui-angular-core";
import { ToolTipType_$type } from "./ToolTipType";
import { CrosshairsDisplayMode_$type } from "./CrosshairsDisplayMode";
import { CalloutCollisionMode_$type } from "igniteui-angular-core";
import { SeriesViewerScrollbarMode_$type } from "./SeriesViewerScrollbarMode";
import { SeriesViewerHorizontalScrollbarPosition_$type } from "./SeriesViewerHorizontalScrollbarPosition";
import { SeriesViewerVerticalScrollbarPosition_$type } from "./SeriesViewerVerticalScrollbarPosition";
import { Defaults } from "./Defaults";
import { Series } from "./Series";
import { Dictionary$2 } from "igniteui-angular-core";
import { DataSeries } from "igniteui-angular-core";
import { ICommandStateChangedListener_$type } from "igniteui-angular-core";
import { DeviceUtils } from "igniteui-angular-core";
import { ObservableCollection$1 } from "igniteui-angular-core";
import { DataSeriesAdapter } from "igniteui-angular-core";
import { ChartSortDescription } from "./ChartSortDescription";
import { ChartSummaryDescription } from "./ChartSummaryDescription";
import { Random } from "igniteui-angular-core";
import { ValueLayerValueMode_$type } from "./ValueLayerValueMode";
import { ObservableColorCollection } from "igniteui-angular-core";
import { BrushCollectionUtil } from "igniteui-angular-core";
import { ChartSeriesEventArgs } from "./ChartSeriesEventArgs";
import { DomainChartSeriesPointerEventArgs } from "./DomainChartSeriesPointerEventArgs";
import { DomainChartPlotAreaPointerEventArgs } from "./DomainChartPlotAreaPointerEventArgs";
import { BrushUtil } from "igniteui-angular-core";
import { IUnknownValuePlotting_$type } from "igniteui-angular-core";
import { ITrendLineSeries_$type } from "./ITrendLineSeries";
import { isNaN_ } from "igniteui-angular-core";
import { stringIsNullOrEmpty, stringEmpty, stringStartsWith } from "igniteui-angular-core";
/**
 * @hidden
 */
var DomainChart = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(DomainChart, _super);
    function DomainChart() {
        var _this = _super.call(this) || this;
        _this.lu = null;
        _this.lr = null;
        _this.hs = null;
        _this.ip = NaN;
        _this.lq = null;
        _this.i2 = 0;
        _this.i3 = 0;
        _this.i4 = 0;
        _this.i1 = 0;
        _this.ix = 0;
        _this.iz = 0;
        _this.iy = 0;
        _this.iw = 0;
        _this.xm = null;
        _this.xn = null;
        _this.il = NaN;
        _this.i5 = NaN;
        _this.iv = NaN;
        _this.h6 = NaN;
        _this.k8 = 0;
        _this.ew = null;
        _this.k4 = 300;
        _this.k6 = 300;
        _this.k3 = 300;
        _this.kv = null;
        _this.hf = false;
        _this.co = null;
        _this.ms = null;
        _this.mu = null;
        _this.ek = null;
        _this.f4 = false;
        _this.f3 = false;
        _this.hw = null;
        _this.propertyChanged = null;
        _this.k7 = 0;
        _this.g8 = false;
        _this.g7 = false;
        _this.ho = new Dictionary$2(String_$type, DataSeries.$, 0);
        _this.ch = null;
        _this.hr = null;
        _this.cl = null;
        _this.f6 = false;
        _this.cm = null;
        _this._commandCompleted = null;
        _this._invalidateActions = null;
        _this.hp = new List$1(ICommandStateChangedListener_$type, 0);
        _this.b2 = 0;
        _this.ib = NaN;
        _this.ic = NaN;
        _this.h9 = DeviceUtils.g(10);
        _this.ia = DeviceUtils.g(10);
        _this.by = 0;
        _this.b0 = 0;
        _this.fx = true;
        _this.e = null;
        _this.b = null;
        _this.d = null;
        _this.a = null;
        _this.bg = 0;
        _this.k0 = -1;
        _this.k1 = -1;
        _this.bw = 0;
        _this.mi = stringEmpty();
        _this.fy = true;
        _this.mj = null;
        _this.f = null;
        _this.y0 = new Thickness(0, DeviceUtils.g(5));
        _this.fz = true;
        _this.mk = "N/A";
        _this.f0 = false;
        _this.y1 = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(2), DeviceUtils.g(0));
        _this.xf = null;
        _this.e7 = null;
        _this.mc = null;
        _this.c = null;
        _this.mb = stringEmpty();
        _this.bm = 0;
        _this.bo = 0;
        _this.md = null;
        _this.w7 = null;
        _this.yu = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.yt = new Thickness(0, DeviceUtils.g(5));
        _this.fw = true;
        _this.ez = null;
        _this.w6 = null;
        _this.ys = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.yr = new Thickness(0, DeviceUtils.g(5));
        _this.fv = false;
        _this.ey = null;
        _this.xa = null;
        _this.e2 = null;
        _this.bs = 0;
        _this.mf = null;
        _this.yx = new Thickness(1, DeviceUtils.g(2), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.yw = new Thickness(0, DeviceUtils.g(5));
        _this.xc = null;
        _this.e4 = null;
        _this.me = null;
        _this.w9 = null;
        _this.e1 = null;
        _this.mg = null;
        _this.xb = null;
        _this.e3 = null;
        _this.yq = new Thickness(0, DeviceUtils.g(0));
        _this.cu = 0;
        _this.bu = 0;
        _this.mh = null;
        _this.xe = null;
        _this.yz = new Thickness(0, DeviceUtils.g(0));
        _this.e6 = null;
        _this.yy = new Thickness(0, DeviceUtils.g(0));
        _this.xd = null;
        _this.e5 = null;
        _this.bq = 0;
        _this.w8 = null;
        _this.yv = new Thickness(1, DeviceUtils.g(8), DeviceUtils.g(0), DeviceUtils.g(0), DeviceUtils.g(0));
        _this.e0 = null;
        _this.seriesAdded = null;
        _this.seriesRemoved = null;
        _this.seriesPointerEnter = null;
        _this.seriesPointerLeave = null;
        _this.seriesPointerMove = null;
        _this.seriesPointerDown = null;
        _this.seriesPointerUp = null;
        _this.seriesClick = null;
        _this.plotAreaPointerEnter = null;
        _this.plotAreaPointerLeave = null;
        _this.plotAreaPointerMove = null;
        _this.plotAreaPointerDown = null;
        _this.plotAreaPointerUp = null;
        _this.calloutStyleUpdating = null;
        _this.calloutRenderStyleUpdating = null;
        _this.selectedSeriesItemsChanged = null;
        _this.focusedSeriesItemsChanged = null;
        _this.hv = null;
        _this.fj = null;
        _this.fm = false;
        _this.hn = new Dictionary$2(String_$type, Base.$, 0);
        _this.hq = new List$1(String_$type, 0);
        _this.a0 = null;
        _this.aw = null;
        _this.av = null;
        _this.em = null;
        _this.en = null;
        _this.a8 = null;
        _this.eu = null;
        _this.ev = null;
        _this.az = null;
        _this.ay = null;
        _this.ax = null;
        _this.ep = null;
        _this.eo = null;
        _this.a7 = null;
        _this.dz = 0;
        _this.dy = 0;
        _this.xl = null;
        _this.xi = null;
        _this.dw = 0;
        _this.aq = new ChartSelectedItemCollection();
        _this.ap = new ChartSelectedItemCollection();
        _this.mp = null;
        _this.ml = null;
        _this.mn = null;
        _this.mm = null;
        _this.mo = null;
        _this.filterStringErrorsParsing = null;
        _this.mq = null;
        _this.lp = null;
        _this.ln = null;
        _this.lo = null;
        _this.lm = null;
        _this.h = null;
        _this.g = null;
        _this.t = null;
        _this.w = null;
        _this.r = null;
        _this.s = null;
        _this.cj = null;
        _this.f5 = true;
        _this.f8 = true;
        _this.ga = false;
        _this.gc = false;
        _this.dj = 1;
        _this.f7 = false;
        _this.ze = 0;
        _this.yn = new Rect(0, 0, 0, 1, 1);
        _this.mt = null;
        _this.mr = null;
        _this.ww = 1;
        _this.wv = 1;
        _this.eg = 0;
        _this.iu = NaN;
        _this.i0 = NaN;
        _this.dq = 0;
        _this.c2 = 0;
        _this.c0 = 0;
        _this.im = NaN;
        _this.io = NaN;
        _this.c8 = null;
        _this.cy = 4;
        _this.u = null;
        _this.v = null;
        _this.k5 = 400;
        _this.h5 = NaN;
        _this.fl = false;
        _this.x = null;
        _this.ee = 0;
        _this.i6 = DeviceUtils.g(1.5);
        _this.fk = true;
        _this.ir = NaN;
        _this.it = NaN;
        _this.is = NaN;
        _this.iq = NaN;
        _this.bb = 0;
        _this.ds = 0;
        _this.du = 0;
        _this.dn = 0;
        _this.dl = 0;
        _this.cq = 0;
        _this.cv = 0;
        _this.cs = 0;
        _this.k9 = 7;
        _this.ec = 4;
        _this.be = 0;
        _this.fu = false;
        _this.w5 = null;
        _this.h8 = NaN;
        _this.w4 = null;
        _this.ft = true;
        _this.w0 = null;
        _this.w2 = null;
        _this.w1 = null;
        _this.w3 = null;
        _this.ky = -1;
        _this.kz = -1;
        _this.f9 = false;
        _this.gb = true;
        _this.f1 = false;
        _this.xg = null;
        _this.xh = null;
        _this.k2 = -1;
        _this.fn = false;
        _this.fs = false;
        _this.fo = false;
        _this.gd = true;
        _this.aj = 0;
        _this.fq = false;
        _this.fr = false;
        _this.fp = false;
        _this.h7 = NaN;
        _this.wz = null;
        _this.kx = -1;
        _this.h0 = null;
        _this.al = null;
        _this.l9 = null;
        _this.ma = null;
        _this.l8 = "CalloutLabel";
        _this.l7 = "CalloutContent";
        _this.ei = null;
        _this.y = null;
        _this.i7 = NaN;
        _this.d4 = 0;
        _this.d5 = 0;
        _this.d2 = 0;
        _this.ea = 0;
        _this.xj = null;
        _this.xk = null;
        _this.ii = NaN;
        _this.ih = NaN;
        _this.id = NaN;
        _this.ie = NaN;
        _this.ig = NaN;
        _this.ik = NaN;
        _this.ij = NaN;
        _this.f2 = true;
        _this.xo = null;
        _this.xp = null;
        _this.jb = NaN;
        _this.ja = NaN;
        _this.i8 = NaN;
        _this.je = NaN;
        _this.i9 = NaN;
        _this.jd = NaN;
        _this.jc = NaN;
        _this.ge = true;
        _this.jg = NaN;
        _this.jf = NaN;
        _this.ji = NaN;
        _this.jh = NaN;
        _this.hv = new List$1(Delegate_$type, 0);
        _this.uv();
        _this.t9();
        return _this;
    }
    DomainChart.prototype.provideContainer = function (a) {
        if (a == null) {
            this.vc(function (b) {
                b.destroy();
                b.provideContainer(null);
            });
            return;
        }
        var b = this.lu;
        this.lu = a;
        if (this.fj != null && this.lu != null && b == null) {
            this.lu.setTimeout(this.fj, 0);
            this.fj = null;
        }
        var c = ((function () {
            var $ret = new XamDataChart();
            $ret.e5 = true;
            return $ret;
        })());
        c.i3 = this;
        c.c8.b4(a);
        this.dataChart = c;
        this.uw();
    };
    DomainChart.prototype.destroy = function () {
        this.f3 = true;
        this.provideContainer(null);
    };
    DomainChart.prototype.uw = function () {
        if (this.dataChart == null) {
            return;
        }
        var a = this.dataChart.c8.j.e();
        this.ab = a.a;
        this.af = a.f;
        this.ad = a.b;
        this.ae = a.c;
        this.ah = a.g;
        this.jm = Defaults.j;
        this.ux();
    };
    DomainChart.prototype.ux = function () {
    };
    DomainChart.prototype.ut = function (a) {
        if (a == null) {
            return;
        }
        a.h8 = this.kg;
        a.h6 = this.ke;
        a.h7 = this.kf;
        a.h5 = this.kd;
        a.u7 = this.yj;
        a.h2 = this.j9;
        a.h4 = this.kb;
        a.h3 = this.ka;
        a.h1 = this.j8;
        a.u6 = this.yi;
        if (!isNaN_(this.j1)) {
            a.hw = this.j1;
        }
    };
    DomainChart.prototype.uq = function () {
    };
    DomainChart.prototype.uz = function (a, b) {
        a.kb = this.lk;
        a.db = this.ex;
    };
    DomainChart.prototype.vo = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "TitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.h8 = this.kg;
                }
                break;
            case "TitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.h6 = this.ke;
                }
                break;
            case "PixelScalingRatio":
                if (this.dataChart != null) {
                    this.vc(function (d) { return d.hw = _this.j1; });
                }
                break;
            case "TitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.h7 = this.kf;
                }
                break;
            case "TitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.h5 = this.kd;
                }
                break;
            case "TitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.u7 = this.yj;
                }
                break;
            case "SubtitleLeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.h2 = this.j9;
                }
                break;
            case "SubtitleTopMargin":
                if (this.dataChart != null) {
                    this.dataChart.h4 = this.kb;
                }
                break;
            case "SubtitleRightMargin":
                if (this.dataChart != null) {
                    this.dataChart.h3 = this.ka;
                }
                break;
            case "SubtitleBottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.h1 = this.j8;
                }
                break;
            case "SubtitleTextColor":
                if (this.dataChart != null) {
                    this.dataChart.u6 = this.yi;
                }
                break;
            case "LeftMargin":
                if (this.dataChart != null) {
                    this.dataChart.hv = this.jy;
                }
                break;
            case "TopMargin":
                if (this.dataChart != null) {
                    this.dataChart.h9 = this.kh;
                }
                break;
            case "RightMargin":
                if (this.dataChart != null) {
                    this.dataChart.h0 = this.j7;
                }
                break;
            case "BottomMargin":
                if (this.dataChart != null) {
                    this.dataChart.hi = this.jk;
                }
                break;
            case "TransitionDuration":
                this.um(function (d) { return d.kb = _this.lk; });
                break;
            case "TransitionEasingFunction":
                this.um(function (d) { return d.db = _this.ex; });
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "tooltipTemplate", {
        get: function () {
            return ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, 0);
        },
        set: function (a) {
            this.tooltipTemplates = a == null ? null : new List$1(Base.$, 1, [a]);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "tooltipTemplates", {
        get: function () {
            return this.hs;
        },
        set: function (a) {
            var b = this.tooltipTemplates;
            if (a != b) {
                this.hs = a;
                this.vl("TooltipTemplates", b, this.tooltipTemplates);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j1", {
        get: function () {
            return this.ip;
        },
        set: function (a) {
            var b = this.ip;
            if (a != b) {
                this.ip = a;
                this.vl("PixelScalingRatio", b, this.j1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "toolTip", {
        get: function () {
            return this.lq;
        },
        set: function (a) {
            var b = this.toolTip;
            if (b != a) {
                this.lq = a;
                this.vl("ToolTip", b, this.toolTip);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ke", {
        get: function () {
            return this.i2;
        },
        set: function (a) {
            var b = this.ke;
            if (a != b) {
                this.i2 = a;
                this.vl("TitleLeftMargin", b, this.ke);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kf", {
        get: function () {
            return this.i3;
        },
        set: function (a) {
            var b = this.kf;
            if (a != b) {
                this.i3 = a;
                this.vl("TitleRightMargin", b, this.kf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kg", {
        get: function () {
            return this.i4;
        },
        set: function (a) {
            var b = this.kg;
            if (a != b) {
                this.i4 = a;
                this.vl("TitleTopMargin", b, this.kg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kd", {
        get: function () {
            return this.i1;
        },
        set: function (a) {
            var b = this.kd;
            if (a != b) {
                this.i1 = a;
                this.vl("TitleBottomMargin", b, this.kd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j9", {
        get: function () {
            return this.ix;
        },
        set: function (a) {
            var b = this.j9;
            if (a != b) {
                this.ix = a;
                this.vl("SubtitleLeftMargin", b, this.j9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kb", {
        get: function () {
            return this.iz;
        },
        set: function (a) {
            var b = this.kb;
            if (a != b) {
                this.iz = a;
                this.vl("SubtitleTopMargin", b, this.kb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ka", {
        get: function () {
            return this.iy;
        },
        set: function (a) {
            var b = this.ka;
            if (a != b) {
                this.iy = a;
                this.vl("SubtitleRightMargin", b, this.ka);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j8", {
        get: function () {
            return this.iw;
        },
        set: function (a) {
            var b = this.j8;
            if (a != b) {
                this.iw = a;
                this.vl("SubtitleBottomMargin", b, this.j8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yi", {
        get: function () {
            return this.xm;
        },
        set: function (a) {
            var b = this.yi;
            if (a != b) {
                this.xm = a;
                this.vl("SubtitleTextColor", b, this.yi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yj", {
        get: function () {
            return this.xn;
        },
        set: function (a) {
            var b = this.yj;
            if (a != b) {
                this.xn = a;
                this.vl("TitleTextColor", b, this.yj);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_jy = function () {
        return this.il;
    };
    DomainChart.prototype.set_jy = function (a) {
        var b = this.jy;
        if (a != b) {
            this.il = a;
            this.vl("LeftMargin", b, this.jy);
        }
    };
    Object.defineProperty(DomainChart.prototype, "jy", {
        get: function () {
            return this.get_jy();
        },
        set: function (a) {
            this.set_jy(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kh", {
        get: function () {
            return this.i5;
        },
        set: function (a) {
            var b = this.kh;
            if (a != b) {
                this.i5 = a;
                this.vl("TopMargin", b, this.kh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j7", {
        get: function () {
            return this.iv;
        },
        set: function (a) {
            var b = this.j7;
            if (a != b) {
                this.iv = a;
                this.vl("RightMargin", b, this.j7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jk", {
        get: function () {
            return this.h6;
        },
        set: function (a) {
            var b = this.jk;
            if (a != b) {
                this.h6 = a;
                this.vl("BottomMargin", b, this.jk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lk", {
        get: function () {
            return this.k8;
        },
        set: function (a) {
            var b = this.lk;
            if (a != b) {
                this.k8 = a;
                this.vl("TransitionDuration", b, this.lk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ex", {
        get: function () {
            return this.ew;
        },
        set: function (a) {
            var b = this.ex;
            if (a != b) {
                this.ew = a;
                this.vl("TransitionEasingFunction", b, this.ex);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lh", {
        get: function () {
            return this.k4;
        },
        set: function (a) {
            var b = this.lh;
            if (a != b) {
                this.k4 = a;
                this.vl("HighlightingTransitionDuration", b, this.lh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lj", {
        get: function () {
            return this.k6;
        },
        set: function (a) {
            var b = this.lj;
            if (a != b) {
                this.k6 = a;
                this.vl("SelectionTransitionDuration", b, this.lj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lg", {
        get: function () {
            return this.k3;
        },
        set: function (a) {
            var b = this.lg;
            if (a != b) {
                this.k3 = a;
                this.vl("FocusTransitionDuration", b, this.lg);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.uu = function (a) {
        if (this.dataChart == null) {
            return;
        }
        a.lz = this.s0;
        a.ln = this.sp;
    };
    DomainChart.prototype.u0 = function (a, b) {
        this.u1(a, b);
    };
    DomainChart.prototype.ur = function () {
    };
    DomainChart.prototype.u1 = function (a, b) {
        if (a == null) {
            return;
        }
        if (this.ed == 3) {
            return;
        }
        var toolTipTemplate_ = ArrayExtension.getModulus$1(Base.$, this.tooltipTemplates, b);
        if (toolTipTemplate_ == null) {
            a.gn = true;
        }
        else {
            var series_ = a;
            a.gn = false;
            series_.externalObject.tooltipTemplate = toolTipTemplate_;
        }
    };
    DomainChart.prototype.wq = function (a, b, c) {
    };
    DomainChart.prototype.lw = function (a) {
        return a;
        return null;
    };
    DomainChart.prototype.kw = function (a) {
        return null;
    };
    DomainChart.prototype.vp = function (a, b, c) {
        var _this = this;
        switch (a) {
            case "SubtitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.ln = this.sp;
                }
                break;
            case "TitleTextStyle":
                if (this.dataChart != null) {
                    this.dataChart.lz = this.s0;
                }
                break;
            case "TooltipTemplate":
                if (this.hf) {
                    return;
                }
                this.hf = true;
                this.tooltipTemplate = this.lw(this.tooltipTemplate);
                this.hf = false;
                if (this.dataChart != null) {
                    this.dataChart.i5 = this.tooltipTemplate;
                }
                this.toolTip = this.tooltipTemplate;
                break;
            case "ToolTip":
                this.un(function (d, e) { return _this.u1(d, e); });
                break;
            case "TooltipTemplates":
                if (this.tooltipTemplates == null) {
                    break;
                }
                this.hf = true;
                this.un(function (d, e) {
                    var f = _this.lw(ArrayExtension.getModulus$1(Base.$, _this.tooltipTemplates, e));
                    var series_ = d;
                    var templ_ = f;
                    series_.externalObject.tooltipTemplate = templ_;
                });
                this.hf = false;
                break;
        }
    };
    Object.defineProperty(DomainChart.prototype, "cp", {
        get: function () {
            return this.co;
        },
        set: function (a) {
            var b = this.cp;
            if (a != b) {
                this.co = a;
                this.vl("Widget", b, this.cp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "sp", {
        get: function () {
            return this.ms;
        },
        set: function (a) {
            var b = this.sp;
            if (a != b) {
                this.ms = a;
                this.vl("SubtitleTextStyle", b, this.sp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "s0", {
        get: function () {
            return this.mu;
        },
        set: function (a) {
            var b = this.s0;
            if (a != b) {
                this.mu = a;
                this.vl("TitleTextStyle", b, this.s0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dataChart", {
        get: function () {
            return this.ek;
        },
        set: function (a) {
            var b = this.dataChart;
            if (b != a) {
                this.ek = a;
                this.vl("DataChart", b, this.dataChart);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "isDetached", {
        get: function () {
            return this.f4 || this.f3;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.onDetachedFromUI = function () {
        this.f4 = true;
        this.vc(function (a) { return a.onDetachedFromUI(); });
    };
    DomainChart.prototype.onAttachedToUI = function () {
        this.f4 = false;
        this.vc(function (a) { return a.onAttachedToUI(); });
    };
    DomainChart.prototype.uv = function () {
        this.bj = this.bl(true);
        var a = this.bj.dataSeries;
        a.collectionChanged = delegateCombine(a.collectionChanged, runOn(this, this.vf));
        this.bk = this.bl(false);
        var b = this.bk.dataSeries;
        b.collectionChanged = delegateCombine(b.collectionChanged, runOn(this, this.vi));
    };
    DomainChart.prototype.wo = function (a, b, c) {
        if (a) {
            b.e = c;
        }
        else {
            b.n(c);
        }
    };
    DomainChart.prototype.wn = function (a, b, c) {
        if (a) {
            b.syncTarget = c;
        }
        else {
            b.o(c);
        }
    };
    DomainChart.prototype.wp = function (a, b, c) {
        if (a) {
            b.e = c;
        }
        else {
            b.n(c);
        }
    };
    DomainChart.prototype.bl = function (a) {
        var e_1, _a, e_2, _b;
        this.hw = new List$1(MarkerType_$type, 0);
        var b = new DataSeriesAdapter().e;
        if (a) {
            this.a0 = new ChartSortDescriptionCollection();
            this.aw = new ChartSortDescriptionCollection();
            this.av = new ChartSortDescriptionCollection();
            this.a8 = new ChartSummaryDescriptionCollection();
            this.em = new FilterExpressionCollection();
            this.en = new FilterExpressionCollection();
        }
        this.wo(a, this.a6, b.sortDescriptions);
        this.wo(a, this.a1, b.groupDescriptions);
        this.wn(a, this.eq, b.filterExpressions);
        this.wn(a, this.er, b.highlightFilterExpressions);
        this.wp(a, this.ba, b.summaryDescriptions);
        this.wo(a, this.a2, b.postSortDescriptions);
        if (a) {
            this.eu = new SortGroupParser();
            this.ev = new SummaryParser();
            this.az = ((function () {
                var $ret = new ChartSortDescriptionCollection();
                $ret.i = true;
                return $ret;
            })());
            this.ay = ((function () {
                var $ret = new ChartSortDescriptionCollection();
                $ret.i = true;
                return $ret;
            })());
            this.ax = ((function () {
                var $ret = new ChartSortDescriptionCollection();
                $ret.i = true;
                return $ret;
            })());
            this.a7 = ((function () {
                var $ret = new ChartSummaryDescriptionCollection();
                $ret.i = true;
                return $ret;
            })());
            this.eo = ((function () {
                var $ret = new FilterExpressionCollection();
                $ret.shouldDetachOnTargetChange = true;
                return $ret;
            })());
            this.ep = ((function () {
                var $ret = new FilterExpressionCollection();
                $ret.shouldDetachOnTargetChange = true;
                return $ret;
            })());
        }
        {
            if (this.eq.k.count == 0) {
                this.wn(a, this.eo, b.filterExpressions);
            }
        }
        {
            if (this.er.k.count == 0) {
                this.wn(a, this.ep, b.highlightFilterExpressions);
            }
        }
        {
            if (this.a6.j.count == 0) {
                this.wo(a, this.az, b.sortDescriptions);
            }
            if (this.a2.j.count == 0) {
                this.wo(a, this.ay, b.postSortDescriptions);
            }
        }
        {
            if (this.a1.j.count == 0) {
                this.wo(a, this.ax, b.groupDescriptions);
            }
        }
        {
            if (this.ba.j.count == 0) {
                this.wp(a, this.a7, b.summaryDescriptions);
            }
        }
        if (this.q != null) {
            b.includedProperties = this.q;
        }
        if (this.o != null) {
            b.excludedProperties = this.o;
        }
        b.supportedSeriesTypes = this.hy.toArray();
        b.rules.clear();
        try {
            for (var _c = __values(fromEnum(this.hx)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var c = _d.value;
                b.rules.add(c);
            }
        }
        catch (e_1_1) {
            e_1 = { error: e_1_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_1)
                    throw e_1.error;
            }
        }
        var d = new List$1(String_$type, 0);
        try {
            for (var _e = __values(fromEnum(b.rules)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var e = _f.value;
                d.add(getInstanceType(e).typeName);
            }
        }
        catch (e_2_1) {
            e_2 = { error: e_2_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_2)
                    throw e_2.error;
            }
        }
        return b;
    };
    DomainChart.prototype.ha = function (a) {
        return a != 24 && this.hy.contains(a);
    };
    DomainChart.prototype.notifyResized = function () {
        this.vc(function (a) { return a.notifyContainerResized(); });
    };
    DomainChart.prototype.va = function () {
        this.vc(function (a) {
            for (var b = 0; b < a.series.count; b++) {
                a.series._inner[b].qj();
            }
        });
    };
    DomainChart.prototype.ug = function () {
        if (this.dataChart == null) {
            return;
        }
        if (this.g8) {
            this.ud();
        }
        this.dataChart.flush();
    };
    DomainChart.prototype.uo = function () {
        if (this.dataChart == null) {
            return;
        }
        this.dataChart.nl();
    };
    DomainChart.prototype.v2 = function (a) {
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
    };
    DomainChart.prototype.ui = function (a) {
        this.uj(function (b, c) { return a(b); });
    };
    DomainChart.prototype.uj = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            a(this.dataChart.series._inner[b], b);
        }
    };
    DomainChart.prototype.um = function (a) {
        this.un(function (b, c) { return a(b); });
    };
    DomainChart.prototype.un = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (!c.ep) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.uk = function (a) {
        this.ul(function (b, c) { return a(b); });
    };
    DomainChart.prototype.ul = function (a) {
        if (this.dataChart == null) {
            return;
        }
        for (var b = 0; b < this.dataChart.series.count; b++) {
            var c = this.dataChart.series._inner[b];
            if (c.eq) {
                a(c, b);
            }
        }
    };
    DomainChart.prototype.wd = function () {
        this.ui(function (a) { return a.rr(); });
    };
    DomainChart.prototype.vc = function (a) {
        this.vd(a, true);
    };
    DomainChart.prototype.vd = function (a, b) {
        this.ve(a, b, null);
    };
    DomainChart.prototype.ve = function (a, b, c) {
        if (this.dataChart == null) {
            return;
        }
        a(this.dataChart);
    };
    DomainChart.prototype.hc = function (a) {
        if (!this.ha(a.suggestedSeries)) {
            return false;
        }
        var b = a.data;
        if (b == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.g2 = function () {
        if (this.dataChart == null) {
            return false;
        }
        return true;
    };
    DomainChart.prototype.qk = function (a) {
        var b = EnumUtil.getName(DataSeriesType_$type, a.suggestedSeries);
        var c = "series_" + (a.index + 1) + "_" + b;
        return c;
    };
    DomainChart.prototype.ql = function (a, b) {
        if (this.g5 && this.hk) {
            var c = "";
            var d = 5 + Math.round(DomainChart.l5.nextDouble() * 4);
            for (var e = 0; e < d; e++) {
                c = c + "\u2588";
            }
            return c;
        }
        if (stringIsNullOrEmpty(a.title)) {
            var f = EnumUtil.getName(DataSeriesType_$type, b);
            return f + (this.dataChart.series.count + 1);
        }
        else {
            return a.title;
        }
    };
    DomainChart.prototype.qj = function () {
        return stringEmpty();
    };
    DomainChart.prototype.vr = function () {
        var a = this.vt(runOn(this, this.ud), this.g8);
        this.g8 = a.p1;
    };
    DomainChart.prototype.t7 = function () {
        if (this.dataChart == null) {
            return;
        }
        this.g7 = false;
        var a = false;
        if (this.gy()) {
            a = true;
            this.t6();
        }
        if (a) {
            this.uf();
            this.wr();
        }
    };
    DomainChart.prototype.wr = function () {
        this.ho.clear();
    };
    DomainChart.prototype.t6 = function () {
        var e_3, _a;
        var a = 0;
        try {
            for (var _b = __values(fromEnum(this.bk.dataSeries)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                if (b.index == -1) {
                    b.index = a;
                }
                if (!stringIsNullOrEmpty(this.qk(b))) {
                    this.ho.item(this.qk(b), b);
                }
                a++;
            }
        }
        catch (e_3_1) {
            e_3 = { error: e_3_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_3)
                    throw e_3.error;
            }
        }
    };
    DomainChart.prototype.h2 = function (a) {
        return a.data;
    };
    DomainChart.prototype.h3 = function (a) {
        return a.highlightedData;
    };
    DomainChart.prototype.uf = function () {
        var e_4, _a;
        if (this.g8) {
            var a = 0;
            try {
                for (var _b = __values(fromEnum(this.bj.dataSeries)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var b = _c.value;
                    if (b.index == -1) {
                        b.index = a;
                    }
                    if (!stringIsNullOrEmpty(this.qk(b))) {
                        if (this.ho.containsKey(this.qk(b))) {
                            var c = this.ho.item(this.qk(b));
                            b.highlightedData = c.data;
                        }
                    }
                    a++;
                }
            }
            catch (e_4_1) {
                e_4 = { error: e_4_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_4)
                        throw e_4.error;
                }
            }
        }
        if (!this.g8 && this.dataChart != null) {
            for (var d = 0; d < this.dataChart.series.count; d++) {
                var e = this.dataChart.series._inner[d];
                if (this.ho.containsKey(e.name)) {
                    e.highlightedItemsSource = this.h2(this.ho.item(e.name));
                }
            }
        }
    };
    DomainChart.prototype.gy = function () {
        if (this.actualHighlightedItemsSource == null) {
            return false;
        }
        if (this.bk.dataSeries.count != this.bj.dataSeries.count) {
            return false;
        }
        if (this.bk.dataSeries.count == 0) {
            return false;
        }
        for (var a = 0; a < this.bk.dataSeries.count; a++) {
            if (!(this.bk.dataSeries._inner[a].isMatch(this.bj.dataSeries._inner[a]))) {
                return false;
            }
        }
        return true;
    };
    DomainChart.prototype.wg = function () {
        var e_5, _a, e_6, _b;
        if (this.dataChart == null) {
            return;
        }
        this.g8 = false;
        this.wi();
        if (this.actualItemsSource == null) {
            return;
        }
        var a = new List$1(MarkerType_$type, 0);
        try {
            for (var _c = __values(fromEnum(this.bj.dataSeries)), _d = _c.next(); !_d.done; _d = _c.next()) {
                var b = _d.value;
                a.add(this.c4(b.suggestedMarker));
            }
        }
        catch (e_5_1) {
            e_5 = { error: e_5_1 };
        }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return))
                    _a.call(_c);
            }
            finally {
                if (e_5)
                    throw e_5.error;
            }
        }
        this.hw = a;
        var c = 0;
        try {
            for (var _e = __values(fromEnum(this.bj.dataSeries)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var d = _f.value;
                if (!this.hc(d)) {
                    continue;
                }
                if (d.index < 0) {
                    d.index = c;
                }
                this.we(d);
                this.wf(d);
                c++;
            }
        }
        catch (e_6_1) {
            e_6 = { error: e_6_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_6)
                    throw e_6.error;
            }
        }
        this.ws();
        this.uj(runOn(this, this.uy));
    };
    DomainChart.prototype.di = function (seriesType_) {
        return (this.externalObject.createSeries(seriesType_).i);
    };
    DomainChart.prototype.da = function () {
        return this.di(28);
    };
    DomainChart.prototype.dc = function () {
        return this.di(27);
    };
    DomainChart.prototype.de = function () {
        return this.di(29);
    };
    DomainChart.prototype.df = function () {
        return this.di(25);
    };
    DomainChart.prototype.db = function () {
        return this.di(26);
    };
    DomainChart.prototype.dd = function () {
        return this.di(32);
    };
    DomainChart.prototype.dh = function () {
        return this.di(33);
    };
    Object.defineProperty(DomainChart.prototype, "ci", {
        get: function () {
            if (TypeRegistrar.isRegistered("AnnotationLayerProxy")) {
                return TypeRegistrar.create("AnnotationLayerProxy");
            }
            else {
                throw new BaseError(1, "annotation layer module is not loaded, but is required.");
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gx", {
        get: function () {
            return (TypeRegistrar.isRegistered("AnnotationLayerProxy"));
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.g0 = function (a) {
        if (!this.gx) {
            return false;
        }
        return this.ci.matchesType(a);
    };
    DomainChart.prototype.ws = function () {
        var a = this.hu("", true);
        if (a != null) {
            for (var b = 0; b < a.count; b++) {
                this.dataChart.series.add(a._inner[b]);
            }
        }
    };
    DomainChart.prototype.g3 = function () {
        return this.bf == 0 || this.bf == 4 || this.bf == 2;
    };
    DomainChart.prototype.g4 = function () {
        return this.bf == 0 || this.bf == 4 || this.bf == 3;
    };
    DomainChart.prototype.get_g1 = function () {
        return this.gi;
    };
    Object.defineProperty(DomainChart.prototype, "g1", {
        get: function () {
            return this.get_g1();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.hu = function (a, b) {
        var e_7, _a, e_8, _b;
        if (!this.gx) {
            return null;
        }
        var c = new List$1(Series.$, 0);
        if (b) {
            var d = 1;
            if (this.fs) {
                if (this.h0 == null) {
                    if (this.l9 != null || this.ma != null || this.l8 != null || this.l7 != null) {
                        try {
                            for (var _c = __values(fromEnum(this.dataChart.series)), _d = _c.next(); !_d.done; _d = _c.next()) {
                                var e = _d.value;
                                var f = this.da();
                                this.ci.setTargetSeries(f, e);
                                this.ci.setCollisionChannel(f, "MainChartCollisionChannel");
                                this.wm(f, e, this.bj.dataSeries._inner[d - 1]);
                                f.name = a + getInstanceType(f).typeName + d.toString();
                                c.add(f);
                                d++;
                            }
                        }
                        catch (e_7_1) {
                            e_7 = { error: e_7_1 };
                        }
                        finally {
                            try {
                                if (_d && !_d.done && (_a = _c.return))
                                    _a.call(_c);
                            }
                            finally {
                                if (e_7)
                                    throw e_7.error;
                            }
                        }
                        ;
                    }
                }
                else {
                    var g = this.da();
                    this.wm(g, null, this.bj.dataSeries._inner[d - 1]);
                    g.name = a + getInstanceType(g).typeName + d.toString();
                    if (this.fs && this.fn) {
                        this.ci.setCollisionChannel(g, "MainChartCollisionChannel");
                    }
                    c.add(g);
                }
            }
            if (this.fn) {
                var h = this.da();
                this.t8(h, this.hj);
                h.name = a + getInstanceType(h).typeName + d.toString();
                if (this.fs && this.fn) {
                    this.ci.setCollisionChannel(h, "MainChartCollisionChannel");
                }
                c.add(h);
            }
        }
        switch (this.be) {
            case 0:
            case 4:
            case 3:
            case 2:
                {
                    var i = this.dc();
                    this.ci.setCrosshairThickness(i, this.h8);
                    this.ci.setCrosshairUseInterpolation(i, !this.fu);
                    this.ci.setCrosshairHorizontalLineVisibility(i, this.g3() ? 0 : 1);
                    this.ci.setCrosshairHorizontalLineStroke(i, this.w4);
                    this.ci.setCrosshairVerticalLineVisibility(i, this.g4() ? 0 : 1);
                    this.ci.setCrosshairVerticalLineStroke(i, this.w5);
                    this.ci.setCrosshairOnAxesEnabled(i, this.ft);
                    this.ci.setCrosshairXAxisBackground(i, this.w0);
                    this.ci.setCrosshairXAxisForeground(i, this.w1);
                    this.ci.setCrosshairYAxisBackground(i, this.w2);
                    this.ci.setCrosshairYAxisForeground(i, this.w3);
                    this.ci.setCrosshairXAxisPrecision(i, this.ky);
                    this.ci.setCrosshairYAxisPrecision(i, this.kz);
                    c.add(i);
                    break;
                }
            case 1:
                {
                    break;
                }
        }
        if (this.f1) {
            var j = this.de();
            this.ci.setFinalValueBackground(j, this.xg);
            this.ci.setFinalValueForeground(j, this.xh);
            this.ci.setFinalValuePrecision(j, this.k2);
            c.add(j);
        }
        if (b) {
            switch (this.ec) {
                case 1:
                    {
                        var k = this.df();
                        c.add(k);
                        break;
                    }
                case 2:
                    {
                        var l = this.db();
                        c.add(l);
                        break;
                    }
                case 4:
                    {
                        var m = this.dd();
                        c.add(m);
                        break;
                    }
                case 3:
                    {
                        this.ui(function (n) { return n.gn = false; });
                        break;
                    }
                case 0:
                    {
                        this.ui(function (n) { return n.gn = true; });
                        break;
                    }
            }
        }
        if (this.ej != null && this.ej.count > 0) {
            for (var n = 0; n < this.ej.count; n++) {
                var o = this.dh();
                this.ci.setValueMode(o, this.ej._inner[n]);
                this.ci.setValueAxisAnnotationEnabled(o, true);
                if (this.ai != null && n < this.ai.count) {
                    this.ci.setBrush(o, this.ai.item(n));
                }
                c.add(o);
            }
        }
        try {
            for (var _e = __values(fromEnum(c)), _f = _e.next(); !_f.done; _f = _e.next()) {
                var p = _f.value;
                if (stringIsNullOrEmpty(p.name) == false) {
                    continue;
                }
                p.name = a + getInstanceType(p).typeName;
            }
        }
        catch (e_8_1) {
            e_8 = { error: e_8_1 };
        }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return))
                    _b.call(_e);
            }
            finally {
                if (e_8)
                    throw e_8.error;
            }
        }
        return c;
    };
    DomainChart.prototype.t8 = function (a, b) {
        this.ci.setIsAutoCalloutBehaviorEnabled(a, true);
        if (this.ak == 0) {
            this.ci.setGreedyCollisionMode(a, true);
        }
        this.ci.setUseDedicatedLanes(a, b);
    };
    DomainChart.prototype.wm = function (a, b, c) {
        a.itemsSource = this.h0 != null ? this.h0 : b.itemsSource;
        this.ci.setXMemberPath(a, this.l9);
        this.ci.setYMemberPath(a, this.ma);
        this.ci.setLabelMemberPath(a, this.l8);
        this.ci.setContentMemberPath(a, this.l7);
        if (this.al != null) {
            this.ci.setCalloutsAllowedPositions(a, this.al);
        }
    };
    DomainChart.prototype.wi = function () {
        this.wj(this.dataChart);
    };
    DomainChart.prototype.wj = function (a) {
        var e_9, _a;
        var _this = this;
        if (a != null && a == this.dataChart) {
            this.wh();
        }
        if (a == null || a.series.count == 0) {
            return;
        }
        this.ui(function (b) {
            if (_this.g0(b) && _this.ci.isCalloutLayer(b)) {
                _this.ci.removeCalloutStyleUpdating(b, runOn(_this, _this.vv));
            }
            if (_this.g0(b) && _this.ci.isCalloutLayer(b)) {
                _this.ci.removeCalloutRenderStyleUpdating(b, runOn(_this, _this.vu));
            }
            _this.wb(b);
        });
        try {
            for (var _b = __values(fromEnum(a.series)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                this.wk(b);
            }
        }
        catch (e_9_1) {
            e_9 = { error: e_9_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_9)
                    throw e_9.error;
            }
        }
        a.series.clear();
    };
    DomainChart.prototype.wk = function (a) {
        a.itemsSource = null;
        a.legend = null;
        a.o0();
    };
    DomainChart.prototype.vf = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        var c = b.oldItems == null ? "null" : b.oldItems.count.toString();
        var d = b.newItems == null ? "null" : b.newItems.count.toString();
        if (this.g8) {
            return;
        }
        var e = this.vt(runOn(this, this.ud), this.g8);
        this.g8 = e.p1;
    };
    DomainChart.prototype.vi = function (a, b) {
        if (this.dataChart == null) {
            return;
        }
        var c = b.oldItems == null ? "null" : b.oldItems.count.toString();
        var d = b.newItems == null ? "null" : b.newItems.count.toString();
        if (this.g7) {
            return;
        }
        var e = this.vt(runOn(this, this.uc), this.g7);
        this.g7 = e.p1;
    };
    DomainChart.prototype.uc = function () {
        this.t7();
    };
    DomainChart.prototype.ud = function () {
        var a = false;
        if (this.gy()) {
            a = true;
            this.t6();
            this.uf();
        }
        this.wg();
        if (a) {
            this.wr();
        }
    };
    DomainChart.prototype.ya = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.z, a);
    };
    DomainChart.prototype.yd = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.aa, a);
    };
    DomainChart.prototype.yb = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ad, a);
    };
    DomainChart.prototype.yc = function (a) {
        return ArrayExtension.getModulus$1(Brush.$, this.ae, a);
    };
    DomainChart.prototype.ym = function (a) {
        var b = new Color();
        if (this.z == null || this.z.count == 0) {
            b = ArrayExtension.getModulus$1(Color.$, this.ht, a);
        }
        else {
            var c = ArrayExtension.getModulus$1(Brush.$, this.z, a);
            if (c == null) {
                b = ArrayExtension.getModulus$1(Color.$, this.ht, a);
            }
            else {
                b = ColorUtil.s(c);
            }
        }
        return b;
    };
    DomainChart.prototype.fi = function (a) {
        var b = new ObservableColorCollection();
        b.add(ColorUtil.x(a, 0.5));
        b.add(a);
        return b;
    };
    DomainChart.prototype.ac = function (a) {
        var b = this.fi(a);
        var c = BrushCollectionUtil.a(b);
        return c;
    };
    Object.defineProperty(DomainChart.prototype, "ht", {
        get: function () {
            if (this.hr != null) {
                return this.hr;
            }
            this.hr = new List$1(Color.$, 0);
            this.hr.add(ColorUtil.t("#8BDC5C"));
            this.hr.add(ColorUtil.t("#8961A9"));
            this.hr.add(ColorUtil.t("#6DB1FF"));
            this.hr.add(ColorUtil.t("#82E9D9"));
            this.hr.add(ColorUtil.t("#EA3C63"));
            this.hr.add(ColorUtil.t("#735656"));
            this.hr.add(ColorUtil.t("#F8CE4F"));
            this.hr.add(ColorUtil.t("#A8A8B7"));
            this.hr.add(ColorUtil.t("#E051A9"));
            this.hr.add(ColorUtil.t("#FF903B"));
            return this.hr;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_hj = function () {
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "hj", {
        get: function () {
            return this.get_hj();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.lv = function () {
        if (this.dataChart == null) {
            return null;
        }
        return this.dataChart.x8();
    };
    DomainChart.prototype.u3 = function (a, b) {
    };
    DomainChart.prototype.u4 = function (a, b, c) {
    };
    DomainChart.prototype.c4 = function (a) {
        if (a == 2) {
            return 3;
        }
        else if (a == 12) {
            return 13;
        }
        else if (a == 6) {
            return 7;
        }
        else if (a == 8) {
            return 9;
        }
        else if (a == 11) {
            return 12;
        }
        else if (a == 1) {
            return 1;
        }
        else if (a == 7) {
            return 8;
        }
        else if (a == 10) {
            return 11;
        }
        else if (a == 4) {
            return 5;
        }
        else if (a == 5) {
            return 6;
        }
        else if (a == 9) {
            return 10;
        }
        else if (a == 3) {
            return 4;
        }
        else if (a == 13) {
            return 0;
        }
        return 2;
    };
    DomainChart.prototype.attachDataLegend = function (a) {
        this.t5(a);
    };
    DomainChart.prototype.t5 = function (a) {
        this.cl = a;
        if (this.dataChart != null) {
            if (!this.f6) {
                this.f6 = true;
                this.dataChart.attachDataLegend(a);
            }
        }
    };
    DomainChart.prototype.detachDataLegend = function (a) {
        this.ub(a);
    };
    DomainChart.prototype.ub = function (a) {
        if (this.dataChart != null) {
            this.f6 = false;
            this.dataChart.detachDataLegend(a);
        }
        this.cl = null;
    };
    DomainChart.prototype.getDataLegendSeries = function () {
        return this.p();
    };
    DomainChart.prototype.p = function () {
        if (this.dataChart != null) {
            return this.dataChart.getDataLegendSeries();
        }
        else {
            return new Array(0);
        }
    };
    DomainChart.prototype.wt = function (a) {
        if (this.dataChart != null) {
            this.dataChart.rl(a);
        }
    };
    DomainChart.prototype.wu = function (a) {
        if (this.dataChart != null) {
            this.dataChart.rm(a);
        }
    };
    DomainChart.prototype.wl = function () {
        if (this.dataChart != null) {
            this.dataChart.qu();
        }
    };
    DomainChart.prototype.get_hb = function () {
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "hb", {
        get: function () {
            return this.get_hb();
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cn", {
        get: function () {
            if (this.cm == null) {
                this.cm = DVContainer.instance.createInstance(IDomainChartToolbarProvider_$type, function () { return "Domain chart toolbar module is not loaded."; });
                this.cm.container = this.lu;
                this.cm.commandChanged = runOn(this, this.vm);
            }
            return this.cm;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.vm = function (a) {
        var e_10, _a;
        try {
            for (var _b = __values(fromEnum(this.hp)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var b = _c.value;
                b.onCommandStateChanged(a.c, a.a, a.b);
            }
        }
        catch (e_10_1) {
            e_10 = { error: e_10_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_10)
                    throw e_10.error;
            }
        }
    };
    DomainChart.prototype.getDesiredToolbarActions = function () {
        if (!this.hb) {
            return null;
        }
        if (this.dataChart != null) {
            var a = this.dataChart.getDesiredToolbarActions();
            a = this.cn.getDesiredToolbarActions(this, a);
            return a;
        }
        return null;
    };
    DomainChart.prototype.onToolCommandExecuting = function (a) {
        if (!this.hb) {
            return 1;
        }
        return this.cn.onToolCommandExecuting(this, a);
    };
    Object.defineProperty(DomainChart.prototype, "commandCompleted", {
        get: function () {
            return this._commandCompleted;
        },
        set: function (a) {
            this._commandCompleted = a;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "invalidateActions", {
        get: function () {
            return this._invalidateActions;
        },
        set: function (a) {
            this._invalidateActions = a;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.u2 = function () {
        if (this.invalidateActions != null) {
            this.invalidateActions();
        }
    };
    DomainChart.prototype.addCommandAvailabilityListener = function (a) {
    };
    DomainChart.prototype.removeCommandAvailabilityListener = function (a) {
    };
    DomainChart.prototype.addCommandStateChangedListener = function (a) {
        if (!this.hp.contains(a)) {
            this.hp.add(a);
        }
    };
    DomainChart.prototype.removeCommandStateChangedListener = function (a) {
        if (this.hp.contains(a)) {
            this.hp.remove(a);
        }
    };
    DomainChart.prototype.u9 = function (source_, a, b, c) {
        if (this.bj != null) {
            this.bj.notifySetItem(source_, a, b, c);
        }
        if (this.dataChart != null) {
            this.dataChart.n4(source_, a, b, c);
        }
    };
    DomainChart.prototype.u5 = function (source_) {
        if (this.bj != null) {
            this.bj.notifyClearItems(source_);
        }
        if (this.dataChart != null) {
            this.dataChart.nv(source_);
        }
    };
    DomainChart.prototype.u6 = function (source_, a, b) {
        if (this.bj != null) {
            this.bj.notifyInsertItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.n2(source_, a, b);
        }
    };
    DomainChart.prototype.u7 = function (source_, a, b) {
        if (this.bj != null) {
            this.bj.notifyRemoveItem(source_, a, b);
        }
        if (this.dataChart != null) {
            this.dataChart.n3(source_, a, b);
        }
    };
    Object.defineProperty(DomainChart.prototype, "b3", {
        get: function () {
            return this.b2;
        },
        set: function (a) {
            var b = this.b2;
            this.b2 = a;
            if (b != this.b2) {
                this.vl("DataToolTipGroupingMode", enumGetBox(DataToolTipLayerGroupingMode_$type, b), enumGetBox(DataToolTipLayerGroupingMode_$type, this.b2));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jp", {
        get: function () {
            return this.ib;
        },
        set: function (a) {
            var b = this.ib;
            this.ib = a;
            if (b != this.ib) {
                this.vl("DataToolTipPositionOffsetX", b, this.ib);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jq", {
        get: function () {
            return this.ic;
        },
        set: function (a) {
            var b = this.ic;
            this.ic = a;
            if (b != this.ic) {
                this.vl("DataToolTipPositionOffsetY", b, this.ic);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jn", {
        get: function () {
            return this.h9;
        },
        set: function (a) {
            var b = this.h9;
            this.h9 = a;
            if (b != this.h9) {
                this.vl("DataToolTipDefaultPositionOffsetX", b, this.h9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jo", {
        get: function () {
            return this.ia;
        },
        set: function (a) {
            var b = this.ia;
            this.ia = a;
            if (b != this.ia) {
                this.vl("DataToolTipDefaultPositionOffsetY", b, this.ia);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bz", {
        get: function () {
            return this.by;
        },
        set: function (a) {
            var b = this.by;
            this.by = a;
            if (b != this.by) {
                this.vl("DataToolTipGroupedPositionModeX", enumGetBox(DataTooltipGroupedPositionX_$type, b), enumGetBox(DataTooltipGroupedPositionX_$type, this.by));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "b1", {
        get: function () {
            return this.b0;
        },
        set: function (a) {
            var b = this.b0;
            this.b0 = a;
            if (b != this.b0) {
                this.vl("DataToolTipGroupedPositionModeY", enumGetBox(DataTooltipGroupedPositionY_$type, b), enumGetBox(DataTooltipGroupedPositionY_$type, this.b0));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gs", {
        get: function () {
            return this.fx;
        },
        set: function (a) {
            var b = this.fx;
            this.fx = a;
            if (b != this.fx) {
                this.vl(DomainChart.o2, b, this.fx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m", {
        get: function () {
            return this.e;
        },
        set: function (a) {
            var b = this.e;
            this.e = a;
            if (b != this.e) {
                this.vl("DataToolTipIncludedSeries", b, this.e);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j", {
        get: function () {
            return this.b;
        },
        set: function (a) {
            var b = this.b;
            this.b = a;
            if (b != this.b) {
                this.vl("DataToolTipExcludedSeries", b, this.b);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "l", {
        get: function () {
            return this.d;
        },
        set: function (a) {
            var b = this.d;
            this.d = a;
            if (b != this.d) {
                this.vl("DataToolTipIncludedColumns", b, this.d);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "i", {
        get: function () {
            return this.a;
        },
        set: function (a) {
            var b = this.a;
            this.a = a;
            if (b != this.a) {
                this.vl("DataToolTipExcludedColumns", b, this.a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bh", {
        get: function () {
            return this.bg;
        },
        set: function (a) {
            var b = this.bg;
            this.bg = a;
            if (b != this.bg) {
                this.vl("DataToolTipValueFormatAbbreviation", enumGetBox(DataAbbreviationMode_$type, b), enumGetBox(DataAbbreviationMode_$type, this.bg));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ld", {
        get: function () {
            return this.k0;
        },
        set: function (a) {
            var b = this.k0;
            this.k0 = a;
            if (b != this.k0) {
                this.vl("DataToolTipValueFormatMaxFractions", b, this.k0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "le", {
        get: function () {
            return this.k1;
        },
        set: function (a) {
            var b = this.k1;
            this.k1 = a;
            if (b != this.k1) {
                this.vl("DataToolTipValueFormatMinFractions", b, this.k1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bx", {
        get: function () {
            return this.bw;
        },
        set: function (a) {
            var b = this.bw;
            this.bw = a;
            if (b != this.bw) {
                this.vl("DataToolTipValueFormatMode", enumGetBox(DataLegendValueMode_$type, b), enumGetBox(DataLegendValueMode_$type, this.bw));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "pu", {
        get: function () {
            return this.mi;
        },
        set: function (a) {
            var b = this.mi;
            this.mi = a;
            if (b != this.mi) {
                this.vl("DataToolTipValueFormatCulture", b, this.mi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gt", {
        get: function () {
            return this.fy;
        },
        set: function (a) {
            var b = this.fy;
            this.fy = a;
            if (b != this.fy) {
                this.vl("DataToolTipValueFormatUseGrouping", b, this.fy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "p0", {
        get: function () {
            return this.mj;
        },
        set: function (a) {
            var b = this.mj;
            this.mj = a;
            if (b != this.mj) {
                this.vl("DataToolTipValueFormatString", b, this.mj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "n", {
        get: function () {
            return this.f;
        },
        set: function (a) {
            var b = this.f;
            this.f = a;
            if (b != this.f) {
                this.vl("DataToolTipValueFormatSpecifiers", b, this.f);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "zc", {
        get: function () {
            return this.y0;
        },
        set: function (a) {
            var b = this.y0;
            this.y0 = a;
            if (b != this.y0) {
                this.vl("DataToolTipValueRowMargin", b, this.y0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gu", {
        get: function () {
            return this.fz;
        },
        set: function (a) {
            var b = this.fz;
            this.fz = a;
            if (b != this.fz) {
                this.vl("DataToolTipValueRowVisible", b, this.fz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "p9", {
        get: function () {
            return this.mk;
        },
        set: function (a) {
            var b = this.mk;
            this.mk = a;
            if (b != this.mk) {
                this.vl("DataToolTipValueTextWhenMissingData", b, this.mk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gv", {
        get: function () {
            return this.f0;
        },
        set: function (a) {
            var b = this.f0;
            this.f0 = a;
            if (b != this.f0) {
                this.vl("DataToolTipValueTextUseSeriesColors", b, this.f0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "zd", {
        get: function () {
            return this.y1;
        },
        set: function (a) {
            var b = this.y1;
            this.y1 = a;
            if (b != this.y1) {
                this.vl("DataToolTipValueTextMargin", b, this.y1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x6", {
        get: function () {
            return this.xf;
        },
        set: function (a) {
            var b = this.xf;
            this.xf = a;
            if (b != this.xf) {
                this.vl("DataToolTipValueTextColor", b, this.xf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fh", {
        get: function () {
            return this.e7;
        },
        set: function (a) {
            var b = this.e7;
            this.e7 = a;
            if (b != this.e7) {
                this.vl("DataToolTipValueTextStyle", b, this.e7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ok", {
        get: function () {
            return this.mc;
        },
        set: function (a) {
            var b = this.mc;
            this.mc = a;
            if (b != this.mc) {
                this.vl("DataToolTipHeaderFormatString", b, this.mc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "k", {
        get: function () {
            return this.c;
        },
        set: function (a) {
            var b = this.c;
            this.c = a;
            if (b != this.c) {
                this.vl("DataToolTipHeaderFormatSpecifiers", b, this.c);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "og", {
        get: function () {
            return this.mb;
        },
        set: function (a) {
            var b = this.mb;
            this.mb = a;
            if (b != this.mb) {
                this.vl("DataToolTipHeaderFormatCulture", b, this.mb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bn", {
        get: function () {
            return this.bm;
        },
        set: function (a) {
            var b = this.bm;
            this.bm = a;
            if (b != this.bm) {
                this.vl("DataToolTipHeaderFormatDate", enumGetBox(DataLegendHeaderDateMode_$type, b), enumGetBox(DataLegendHeaderDateMode_$type, this.bm));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bp", {
        get: function () {
            return this.bo;
        },
        set: function (a) {
            var b = this.bo;
            this.bo = a;
            if (b != this.bo) {
                this.vl("DataToolTipHeaderFormatTime", enumGetBox(DataLegendHeaderTimeMode_$type, b), enumGetBox(DataLegendHeaderTimeMode_$type, this.bo));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "op", {
        get: function () {
            return this.md;
        },
        set: function (a) {
            var b = this.md;
            this.md = a;
            if (b != this.md) {
                this.vl("DataToolTipHeaderText", b, this.md);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xy", {
        get: function () {
            return this.w7;
        },
        set: function (a) {
            var b = this.w7;
            this.w7 = a;
            if (b != this.w7) {
                this.vl("DataToolTipHeaderTextColor", b, this.w7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y6", {
        get: function () {
            return this.yu;
        },
        set: function (a) {
            var b = this.yu;
            this.yu = a;
            if (b != this.yu) {
                this.vl("DataToolTipHeaderTextMargin", b, this.yu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y5", {
        get: function () {
            return this.yt;
        },
        set: function (a) {
            var b = this.yt;
            this.yt = a;
            if (b != this.yt) {
                this.vl("DataToolTipHeaderRowMargin", b, this.yt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gr", {
        get: function () {
            return this.fw;
        },
        set: function (a) {
            var b = this.fw;
            this.fw = a;
            if (b != this.fw) {
                this.vl("DataToolTipHeaderRowVisible", b, this.fw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "e9", {
        get: function () {
            return this.ez;
        },
        set: function (a) {
            var b = this.ez;
            this.ez = a;
            if (b != this.ez) {
                this.vl("DataToolTipHeaderTextStyle", b, this.ez);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xx", {
        get: function () {
            return this.w6;
        },
        set: function (a) {
            var b = this.w6;
            this.w6 = a;
            if (b != this.w6) {
                this.vl("DataToolTipGroupTextColor", b, this.w6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y4", {
        get: function () {
            return this.ys;
        },
        set: function (a) {
            var b = this.ys;
            this.ys = a;
            if (b != this.ys) {
                this.vl("DataToolTipGroupTextMargin", b, this.ys);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y3", {
        get: function () {
            return this.yr;
        },
        set: function (a) {
            var b = this.yr;
            this.yr = a;
            if (b != this.yr) {
                this.vl("DataToolTipGroupRowMargin", b, this.yr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gq", {
        get: function () {
            return this.fv;
        },
        set: function (a) {
            var b = this.fv;
            this.fv = a;
            if (b != this.fv) {
                this.vl("DataToolTipGroupRowVisible", b, this.fv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "e8", {
        get: function () {
            return this.ey;
        },
        set: function (a) {
            var b = this.ey;
            this.ey = a;
            if (b != this.ey) {
                this.vl("DataToolTipGroupTextStyle", b, this.ey);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x1", {
        get: function () {
            return this.xa;
        },
        set: function (a) {
            var b = this.xa;
            this.xa = a;
            if (b != this.xa) {
                this.vl("DataToolTipSummaryTitleTextColor", b, this.xa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fc", {
        get: function () {
            return this.e2;
        },
        set: function (a) {
            var b = this.e2;
            this.e2 = a;
            if (b != this.e2) {
                this.vl("DataToolTipSummaryTitleTextStyle", b, this.e2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bt", {
        get: function () {
            return this.bs;
        },
        set: function (a) {
            var b = this.bs;
            this.bs = a;
            if (b != this.bs) {
                this.vl("DataToolTipSummaryType", enumGetBox(DataLegendSummaryType_$type, b), enumGetBox(DataLegendSummaryType_$type, this.bs));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o8", {
        get: function () {
            return this.mf;
        },
        set: function (a) {
            var b = this.mf;
            this.mf = a;
            if (b != this.mf) {
                this.vl("DataToolTipSummaryTitleText", b, this.mf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y9", {
        get: function () {
            return this.yx;
        },
        set: function (a) {
            var b = this.yx;
            this.yx = a;
            if (b != this.yx) {
                this.vl("DataToolTipSummaryTitleTextMargin", b, this.yx);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y8", {
        get: function () {
            return this.yw;
        },
        set: function (a) {
            var b = this.yw;
            this.yw = a;
            if (b != this.yw) {
                this.vl("DataToolTipSummaryRowMargin", b, this.yw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x3", {
        get: function () {
            return this.xc;
        },
        set: function (a) {
            var b = this.xc;
            this.xc = a;
            if (b != this.xc) {
                this.vl("DataToolTipSummaryValueTextColor", b, this.xc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fe", {
        get: function () {
            return this.e4;
        },
        set: function (a) {
            var b = this.e4;
            this.e4 = a;
            if (b != this.e4) {
                this.vl("DataToolTipSummaryValueTextStyle", b, this.e4);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o3", {
        get: function () {
            return this.me;
        },
        set: function (a) {
            var b = this.me;
            this.me = a;
            if (b != this.me) {
                this.vl("DataToolTipSummaryLabelText", b, this.me);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x0", {
        get: function () {
            return this.w9;
        },
        set: function (a) {
            var b = this.w9;
            this.w9 = a;
            if (b != this.w9) {
                this.vl("DataToolTipSummaryLabelTextColor", b, this.w9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fb", {
        get: function () {
            return this.e1;
        },
        set: function (a) {
            var b = this.e1;
            this.e1 = a;
            if (b != this.e1) {
                this.vl("DataToolTipSummaryLabelTextStyle", b, this.e1);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "pe", {
        get: function () {
            return this.mg;
        },
        set: function (a) {
            var b = this.mg;
            this.mg = a;
            if (b != this.mg) {
                this.vl("DataToolTipSummaryUnitsText", b, this.mg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x2", {
        get: function () {
            return this.xb;
        },
        set: function (a) {
            var b = this.xb;
            this.xb = a;
            if (b != this.xb) {
                this.vl("DataToolTipSummaryUnitsTextColor", b, this.xb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fd", {
        get: function () {
            return this.e3;
        },
        set: function (a) {
            var b = this.e3;
            this.e3 = a;
            if (b != this.e3) {
                this.vl("DataToolTipSummaryUnitsTextStyle", b, this.e3);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y2", {
        get: function () {
            return this.yq;
        },
        set: function (a) {
            var b = this.yq;
            this.yq = a;
            if (b != this.yq) {
                this.vl("DataToolTipBadgeMargin", b, this.yq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cw", {
        get: function () {
            return this.cu;
        },
        set: function (a) {
            var b = this.cu;
            this.cu = a;
            if (b != this.cu) {
                this.vl("DataToolTipBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.cu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bv", {
        get: function () {
            return this.bu;
        },
        set: function (a) {
            var b = this.bu;
            this.bu = a;
            if (b != this.bu) {
                this.vl("DataToolTipUnitsDisplayMode", enumGetBox(DataLegendUnitsMode_$type, b), enumGetBox(DataLegendUnitsMode_$type, this.bu));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "po", {
        get: function () {
            return this.mh;
        },
        set: function (a) {
            var b = this.mh;
            this.mh = a;
            if (b != this.mh) {
                this.vl("DataToolTipUnitsText", b, this.mh);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x5", {
        get: function () {
            return this.xe;
        },
        set: function (a) {
            var b = this.xe;
            this.xe = a;
            if (b != this.xe) {
                this.vl("DataToolTipUnitsTextColor", b, this.xe);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "zb", {
        get: function () {
            return this.yz;
        },
        set: function (a) {
            var b = this.yz;
            this.yz = a;
            if (b != this.yz) {
                this.vl("DataToolTipUnitsTextMargin", b, this.yz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fg", {
        get: function () {
            return this.e6;
        },
        set: function (a) {
            var b = this.e6;
            this.e6 = a;
            if (b != this.e6) {
                this.vl("DataToolTipUnitsTextStyle", b, this.e6);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "za", {
        get: function () {
            return this.yy;
        },
        set: function (a) {
            var b = this.yy;
            this.yy = a;
            if (b != this.yy) {
                this.vl("DataToolTipTitleTextMargin", b, this.yy);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x4", {
        get: function () {
            return this.xd;
        },
        set: function (a) {
            var b = this.xd;
            this.xd = a;
            if (b != this.xd) {
                this.vl("DataToolTipTitleTextColor", b, this.xd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ff", {
        get: function () {
            return this.e5;
        },
        set: function (a) {
            var b = this.e5;
            this.e5 = a;
            if (b != this.e5) {
                this.vl("DataToolTipTitleTextStyle", b, this.e5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "br", {
        get: function () {
            return this.bq;
        },
        set: function (a) {
            var b = this.bq;
            this.bq = a;
            if (b != this.bq) {
                this.vl("DataToolTipLabelDisplayMode", enumGetBox(DataLegendLabelMode_$type, b), enumGetBox(DataLegendLabelMode_$type, this.bq));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xz", {
        get: function () {
            return this.w8;
        },
        set: function (a) {
            var b = this.w8;
            this.w8 = a;
            if (b != this.w8) {
                this.vl("DataToolTipLabelTextColor", b, this.w8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "y7", {
        get: function () {
            return this.yv;
        },
        set: function (a) {
            var b = this.yv;
            this.yv = a;
            if (b != this.yv) {
                this.vl("DataToolTipLabelTextMargin", b, this.yv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "fa", {
        get: function () {
            return this.e0;
        },
        set: function (a) {
            var b = this.e0;
            this.e0 = a;
            if (b != this.e0) {
                this.vl("DataToolTipLabelTextStyle", b, this.e0);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.v4 = function (a) {
        if (this.seriesAdded != null && a != null) {
            this.seriesAdded(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.wb = function (a) {
        if (this.seriesRemoved != null && a != null) {
            this.seriesRemoved(this, new ChartSeriesEventArgs(a));
        }
    };
    DomainChart.prototype.v7 = function (a, b, c) {
        if (this.seriesPointerEnter != null && a != null) {
            this.seriesPointerEnter(this, new DomainChartSeriesPointerEventArgs(a, b, c));
        }
    };
    DomainChart.prototype.v8 = function (a, b, c) {
        if (this.seriesPointerLeave != null && a != null) {
            this.seriesPointerLeave(this, new DomainChartSeriesPointerEventArgs(a, b, c));
        }
    };
    DomainChart.prototype.v9 = function (a, b, c) {
        if (this.seriesPointerMove != null && a != null) {
            this.seriesPointerMove(this, new DomainChartSeriesPointerEventArgs(a, b, c));
        }
    };
    DomainChart.prototype.v6 = function (a, b, c) {
        if (this.seriesPointerDown != null && a != null) {
            this.seriesPointerDown(this, new DomainChartSeriesPointerEventArgs(a, b, c));
        }
    };
    DomainChart.prototype.wa = function (a, b, c) {
        if (this.seriesPointerUp != null && a != null) {
            this.seriesPointerUp(this, new DomainChartSeriesPointerEventArgs(a, b, c));
        }
    };
    DomainChart.prototype.v5 = function (a, b, c) {
        if (this.seriesClick != null && a != null) {
            this.seriesClick(this, new DomainChartSeriesPointerEventArgs(a, b, c));
        }
    };
    DomainChart.prototype.vy = function (a) {
        if (this.plotAreaPointerEnter != null && this.dataChart != null) {
            this.plotAreaPointerEnter(this, new DomainChartPlotAreaPointerEventArgs(this.dataChart, a));
        }
    };
    DomainChart.prototype.vz = function (a) {
        if (this.plotAreaPointerLeave != null && this.dataChart != null) {
            this.plotAreaPointerLeave(this, new DomainChartPlotAreaPointerEventArgs(this.dataChart, a));
        }
    };
    DomainChart.prototype.v0 = function (a) {
        if (this.plotAreaPointerMove != null && this.dataChart != null) {
            this.plotAreaPointerMove(this, new DomainChartPlotAreaPointerEventArgs(this.dataChart, a));
        }
    };
    DomainChart.prototype.vx = function (a) {
        if (this.plotAreaPointerDown != null && this.dataChart != null) {
            this.plotAreaPointerDown(this, new DomainChartPlotAreaPointerEventArgs(this.dataChart, a));
        }
    };
    DomainChart.prototype.v1 = function (a) {
        if (this.plotAreaPointerUp != null && this.dataChart != null) {
            this.plotAreaPointerUp(this, new DomainChartPlotAreaPointerEventArgs(this.dataChart, a));
        }
    };
    DomainChart.prototype.vv = function (a, b) {
        if (this.calloutStyleUpdating != null && a != null) {
            this.calloutStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.vu = function (a, b) {
        if (this.calloutRenderStyleUpdating != null && a != null) {
            this.calloutRenderStyleUpdating(this, b);
        }
    };
    DomainChart.prototype.v3 = function (a, b) {
        if (this.selectedSeriesItemsChanged != null && a != null) {
            this.selectedSeriesItemsChanged(this, b);
        }
    };
    DomainChart.prototype.vw = function (a, b) {
        if (this.focusedSeriesItemsChanged != null && a != null) {
            this.focusedSeriesItemsChanged(this, b);
        }
    };
    DomainChart.prototype.vs = function (a) {
        var _this = this;
        if (!this.hv.contains(a)) {
            this.hv.add(a);
            var b = false;
            var c = this.vt(function () {
                a();
                _this.hv.remove(a);
            }, b);
            b = c.p1;
        }
    };
    DomainChart.prototype.vt = function (a, b) {
        if (!b) {
            b = true;
            if (this.lu != null) {
                this.lu.setTimeout(a, 0);
            }
            else {
                this.fj = a;
            }
        }
        return {
            p1: b
        };
    };
    DomainChart.prototype.get_hd = function () {
        return true;
    };
    Object.defineProperty(DomainChart.prototype, "hd", {
        get: function () {
            return this.get_hd();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.us = function (a, b) {
        var e_11, _a, e_12, _b;
        var _this = this;
        var c = a == this.dataChart;
        if (c) {
            a.ag = this.z;
        }
        if (c) {
            a.aj = this.aa;
        }
        a.c8.b4(b);
        a.ah = this.ad;
        a.ai = this.ae;
        a.bg = this.cz;
        a.legend = this.legend;
        a.ww = this.g6;
        a.wz = this.he && this.hd;
        a.f0 = this.hi;
        if (c) {
            if (this.ap != null && this.ap.count > 0) {
                try {
                    for (var _c = __values(fromEnum(this.ap)), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var d = _d.value;
                        a.focusedSeriesItems.add(d);
                    }
                }
                catch (e_11_1) {
                    e_11 = { error: e_11_1 };
                }
                finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return))
                            _a.call(_c);
                    }
                    finally {
                        if (e_11)
                            throw e_11.error;
                    }
                }
            }
            if (this.aq != null && this.aq.count > 0) {
                try {
                    for (var _e = __values(fromEnum(this.aq)), _f = _e.next(); !_f.done; _f = _e.next()) {
                        var e = _f.value;
                        a.selectedSeriesItems.add(e);
                    }
                }
                catch (e_12_1) {
                    e_12 = { error: e_12_1 };
                }
                finally {
                    try {
                        if (_f && !_f.done && (_b = _e.return))
                            _b.call(_e);
                    }
                    finally {
                        if (e_12)
                            throw e_12.error;
                    }
                }
            }
            a.ch = this.d6;
            a.ci = this.d7;
            a.hn = this.jr;
            a.uz = this.ye;
            a.ho = this.js;
            a.hp = this.jt;
            a.hq = this.ju;
            a.u0 = this.yf;
            a.ce = this.d3;
            a.ev = this.gz;
            a.hr = this.jv;
            a.hs = this.jw;
            a.ht = this.jx;
            a.ia = this.kk;
            a.u9 = this.yk;
            a.ih = this.kq;
            a.ib = this.kl;
            a.ic = this.km;
            a.va = this.yl;
            a.cl = this.eb;
            a.gd = this.hm;
            a.id = this.kn;
            a.ie = this.ko;
            a.ig = this.kp;
            a.ik = this.kr;
            a.il = this.ks;
            a.io = this.ku;
            a.im = this.kt;
            if (a.cb != this.d1 || a.b6 != this.dx) {
                a.c8.b4(b);
                a.cb = this.d1;
                a.b6 = this.dx;
            }
            if (a.b9 != this.d0) {
                a.c8.b4(b);
                a.b9 = this.d0;
            }
            if (this.yh != null) {
                a.u5 = this.yh;
            }
            if (this.x9 != null) {
                a.uo = this.x9;
            }
            a.selectedSeriesItemsChanged = delegateCombine(a.selectedSeriesItemsChanged, runOn(this, this.v3));
            a.focusedSeriesItemsChanged = delegateCombine(a.focusedSeriesItemsChanged, runOn(this, this.vw));
            a.i0 = this.lj;
            a.iw = this.lg;
        }
        a.wh = this.dt;
        a.wk = this.dv;
        if (this.cl != null) {
            if (!this.f6) {
                this.t5(this.cl);
            }
        }
        if (a.iy != this.lh) {
            a.iy = this.lh;
        }
        if (a.by != this.dp || a.bw != this.dm) {
            a.c8.b4(b);
            a.by = this.dp;
            a.bw = this.dm;
        }
        a.wa = this.bd();
        if (!isNaN_(this.j3)) {
            a.x1 = this.j3;
        }
        if (!isNaN_(this.j5)) {
            a.x3 = this.j5;
        }
        if (!isNaN_(this.j4)) {
            a.x2 = this.j4;
        }
        if (!isNaN_(this.j2)) {
            a.x0 = this.j2;
        }
        a.bd = this.cr;
        a.seriesMouseEnter = delegateCombine(a.seriesMouseEnter, function (f, g) { return _this.v7(g.series, g.item, g.plotAreaPosition); });
        a.seriesMouseLeave = delegateCombine(a.seriesMouseLeave, function (f, g) { return _this.v8(g.series, g.item, g.plotAreaPosition); });
        a.seriesMouseMove = delegateCombine(a.seriesMouseMove, function (f, g) { return _this.v9(g.series, g.item, g.plotAreaPosition); });
        a.seriesMouseLeftButtonDown = delegateCombine(a.seriesMouseLeftButtonDown, function (f, g) { return _this.v6(g.series, g.item, g.plotAreaPosition); });
        a.seriesMouseLeftButtonUp = delegateCombine(a.seriesMouseLeftButtonUp, function (f, g) { return _this.wa(g.series, g.item, g.plotAreaPosition); });
        a.seriesClick = delegateCombine(a.seriesClick, function (f, g) { return _this.v5(g.series, g.item, g.plotAreaPosition); });
        a.plotAreaMouseEnter = delegateCombine(a.plotAreaMouseEnter, function (f, g) { return _this.vy(g.plotAreaPosition); });
        a.plotAreaMouseLeave = delegateCombine(a.plotAreaMouseLeave, function (f, g) { return _this.vz(g.plotAreaPosition); });
        a.plotAreaMouseOver = delegateCombine(a.plotAreaMouseOver, function (f, g) { return _this.v0(g.plotAreaPosition); });
        a.plotAreaMouseLeftButtonDown = delegateCombine(a.plotAreaMouseLeftButtonDown, function (f, g) { return _this.vx(g.plotAreaPosition); });
        a.plotAreaMouseLeftButtonUp = delegateCombine(a.plotAreaMouseLeftButtonUp, function (f, g) { return _this.v1(g.plotAreaPosition); });
        if (c) {
            a.v1 = this.yp;
        }
        if (c) {
            a.ls = this.st;
        }
        a.ui = this.wy;
        if (c) {
            a.lg = this.si;
        }
        a.uh = this.wx;
        a.ws = this.gf;
        a.eh = this.gg;
        a.hv = this.jy;
        a.h0 = this.j7;
        a.h9 = this.kh;
        a.hi = this.jk;
        if (a == this.dataChart) {
            this.ud();
        }
        if (this.highlightedItemsSource != null) {
            if (a == this.dataChart) {
                this.uc();
            }
        }
        this.ut(a);
        this.uu(a);
        this.u2();
    };
    DomainChart.prototype.ag = function (a) {
        var e_13, _a;
        if (!this.hh || !this.hk || this.itemsSource != null) {
            return a;
        }
        if (a == null) {
            return null;
        }
        var b = new BrushCollection();
        try {
            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                var d = BrushUtil.t(c);
                b.add(d);
            }
        }
        catch (e_13_1) {
            e_13 = { error: e_13_1 };
        }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return))
                    _a.call(_b);
            }
            finally {
                if (e_13)
                    throw e_13.error;
            }
        }
        return b;
    };
    DomainChart.prototype.yg = function (a) {
        if (!this.hh || !this.hk || this.itemsSource != null) {
            return a;
        }
        var b = BrushUtil.h(0, 0, 0, 0);
        return b;
    };
    DomainChart.prototype.uy = function (a, b) {
        if (!isNaN_(this.j6)) {
            a.jh = this.j6;
        }
        if (!isNaN_(this.kc) && !a.eq) {
            a.jn = this.kc;
        }
        if (!isNaN_(this.jm) && a.en) {
            a.jn = this.jm;
        }
        if (!isNaN_(this.kj) && a.er) {
            a.jn = this.kj;
        }
        a.legendItemBadgeShape = this.cx;
        a.bc = this.ct;
        a.cg = this.dr;
        a.sf(this.c3);
        a.se(this.c1);
        a.je = this.jz;
        if (!isNaN_(this.j0)) {
            a.sg(this.j0);
        }
        if (!isNaN_(this.jj)) {
            a.ii = this.jj;
        }
        if (a.isUsableInLegend) {
            a.legend = this.legend;
        }
        if (typeCast(IUnknownValuePlotting_$type, a) !== null) {
            var c = a;
            c.unknownValuePlotting = this.eh;
        }
        a.fb = this.g9;
        a.bt = this.dk;
        a.wp = this.zf;
        if (this.g0(a) && this.ci.isCalloutLayer(a)) {
            this.ci.setCalloutStyleUpdatingEventEnabled(a, this.gj);
            this.ci.addCalloutStyleUpdating(a, runOn(this, this.vv));
            this.ci.setUseValueForAutoCalloutLabels(a, this.hl);
            this.ci.setCollisionMode(a, this.ak);
            this.ci.setUseItemColorForFill(a, this.gl);
            this.ci.setUseItemColorForOutline(a, this.gm);
            this.ci.setCalloutStrokeThickness(a, this.jl);
            this.ci.setUseAutoContrastingLabelColors(a, this.gk);
            this.ci.setCalloutBackground(a, this.xq);
            if (this.la >= 0) {
                this.ci.setAutoCalloutLabelPrecision(a, this.la);
            }
        }
        if (this.g0(a) && this.ci.isCalloutLayer(a)) {
            this.ci.setCalloutRenderStyleUpdatingEventEnabled(a, this.gj);
            this.ci.addCalloutRenderStyleUpdating(a, runOn(this, this.vu));
        }
        if (this.g0(a) && this.ci.isDataToolTipLayer(a)) {
            this.t1(a);
        }
        this.t3(a, b);
        this.t4(a, b);
        this.uz(a, b);
        this.u0(a, b);
        this.v4(a);
    };
    Object.defineProperty(DomainChart.prototype, "gh", {
        get: function () {
            return this.fm;
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.ue = function () {
        if (!this.fm) {
            this.fm = true;
            this.up();
        }
    };
    DomainChart.prototype.up = function () {
        this.uq();
        this.ur();
    };
    DomainChart.prototype.wc = function (a) {
        if (this.f6 && this.cl != null) {
            this.f6 = false;
            if (a != null) {
                a.detachDataLegend(this.cl);
            }
        }
        this.wj(a);
    };
    DomainChart.prototype.t4 = function (a, b) {
        var c = typeCast(ITrendLineSeries_$type, a);
        if (c != null) {
            c.trendLineBrush = ArrayExtension.getModulus$1(Brush.$, this.ah, b);
            c.trendLineThickness = this.ki;
            c.trendLineType = this.ef;
            c.trendLinePeriod = this.ll;
        }
    };
    DomainChart.prototype.c6 = function (a, b) {
        if (this.c9 == null || this.c9.count == 0) {
            var c = this.c7(a);
            if (this.hw == null || this.hw.count == 0) {
                return a != null && a.fj ? c : 2;
            }
            var d = ArrayExtension.getModulus$1(MarkerType_$type, this.hw, b);
            if (d == 0 && a != null) {
                d = a.fj ? c : 2;
                if (d == 2) {
                    d = this.c5(a);
                }
            }
            if (d == 2) {
                if (a == null) {
                    return 1;
                }
                else {
                    return 2;
                }
            }
            return d;
        }
        return ArrayExtension.getModulus$1(MarkerType_$type, this.c9, b);
    };
    DomainChart.prototype.c5 = function (a) {
        return 2;
    };
    DomainChart.prototype.c7 = function (a) {
        return 1;
    };
    DomainChart.prototype.l1 = function () {
        if (this.itemsSource != null) {
            return this.itemsSource;
        }
        if (this.hh) {
            return this.h4();
        }
        return null;
    };
    DomainChart.prototype.l0 = function () {
        if (this.highlightedItemsSource != null) {
            return this.highlightedItemsSource;
        }
        return null;
    };
    DomainChart.prototype.get_g5 = function () {
        if (this.itemsSource == null && this.hh) {
            if (this.h4() != null) {
                return true;
            }
        }
        return false;
    };
    Object.defineProperty(DomainChart.prototype, "g5", {
        get: function () {
            return this.get_g5();
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.h4 = function () {
        return null;
    };
    DomainChart.prototype.vl = function (a, b, c) {
        var _this = this;
        if (this.propertyChanged != null) {
            this.propertyChanged(this, new PropertyChangedEventArgs(a));
        }
        switch (a) {
            case "DataChart":
                this.wc(typeCast(XamDataChart.$, b));
                this.us(typeCast(XamDataChart.$, c), this.lu);
                break;
            case "ShouldUseSkeletonStyleForMockData":
            case "ShouldDisplayMockData":
                this.actualItemsSource = this.l1();
                this.z = this.ag(this.ab);
                this.aa = this.ag(this.af);
                break;
            case "ActualBrushes":
                this.ve(function (d) { return d.ag = _this.z; }, true, a);
                break;
            case "ActualOutlines":
                this.ve(function (d) { return d.aj = _this.aa; }, true, a);
                break;
            case "ActualItemsSource":
                if (this.hh) {
                    this.z = this.ag(this.ab);
                    this.aa = this.ag(this.af);
                }
                this.bj.itemsSource = this.actualItemsSource;
                this.u2();
                break;
            case "ActualHighlightedItemsSource":
                this.bk.itemsSource = this.actualHighlightedItemsSource;
                break;
            case "ItemsSource":
                this.actualItemsSource = this.l1();
                break;
            case "HighlightedItemsSource":
                this.actualHighlightedItemsSource = this.l0();
                break;
            case "IncludedProperties":
                this.bj.includedProperties = this.q;
                break;
            case "ExcludedProperties":
                this.bj.excludedProperties = this.o;
                break;
            case "Brushes":
                this.z = this.ag(this.ab);
                break;
            case "Outlines":
                this.aa = this.ag(this.af);
                break;
            case "Legend":
                this.vc(function (d) { return d.legend = _this.legend; });
                break;
            case "HighlightingMode":
                this.vc(function (d) { return d.by = _this.dp; });
                break;
            case "HighlightingBehavior":
                this.vc(function (d) { return d.bw = _this.dm; });
                break;
            case "LegendHighlightingMode":
                this.vc(function (d) { return d.bd = _this.cr; });
                break;
            case "LegendItemBadgeShape":
                this.vc(function (d) { return d.bf = _this.cx; });
                break;
            case "LegendItemBadgeMode":
                this.vc(function (d) { return d.be = _this.ct; });
                break;
            case "PlotAreaMarginLeft":
                this.vc(function (d) { return d.x1 = _this.j3; });
                break;
            case "PlotAreaMarginTop":
                this.vc(function (d) { return d.x3 = _this.j5; });
                break;
            case "PlotAreaMarginRight":
                this.vc(function (d) { return d.x2 = _this.j4; });
                break;
            case "PlotAreaMarginBottom":
                this.vc(function (d) { return d.x0 = _this.j2; });
                break;
            case "ComputedPlotAreaMarginMode":
                this.vc(function (d) { return d.wa = _this.bd(); });
                break;
            case "IsHorizontalZoomEnabled":
                this.vc(function (d) { return d.ww = _this.g6; });
                break;
            case "IsVerticalZoomEnabled":
                this.vc(function (d) { return d.wz = _this.he; });
                break;
            case "WindowRect":
                this.vd(function (d) { return d.v1 = _this.yp; }, false);
                break;
            case "WindowRectMinWidth":
                this.vd(function (d) { return d.il = _this.ks; }, false);
                break;
            case "WindowRectMinHeight":
                this.vd(function (d) { return d.ik = _this.kr; }, false);
                break;
            case "WindowSizeMinWidth":
                this.vd(function (d) { return d.io = _this.ku; }, false);
                break;
            case "WindowSizeMinHeight":
                this.vd(function (d) { return d.im = _this.kt; }, false);
                break;
            case "Title":
                this.vd(function (d) { return d.ls = _this.st; }, false);
                break;
            case "Subtitle":
                this.vd(function (d) { return d.lg = _this.si; }, false);
                break;
            case "TitleAlignment":
                this.vc(function (d) { return d.ui = _this.wy; });
                break;
            case "SubtitleAlignment":
                this.vc(function (d) { return d.uh = _this.wx; });
                break;
            case "UnknownValuePlotting":
                this.ui(function (d) {
                    if (typeCast(IUnknownValuePlotting_$type, d) !== null) {
                        var e_14 = d;
                        e_14.unknownValuePlotting = _this.eh;
                    }
                });
                break;
            case "IsSeriesHighlightingEnabled":
                this.ui(function (d) { return d.fb = _this.g9; });
                break;
            case "HighlightedLegendItemVisibility":
                this.ui(function (d) { return d.wp = _this.zf; });
                break;
            case "HighlightedValuesDisplayMode":
                this.um(function (d) { return d.bt = _this.dk; });
                break;
            case "Thickness":
                if (!isNaN_(this.kc)) {
                    this.um(function (d) { return d.jn = _this.kc; });
                }
                break;
            case "OutlineMode":
                this.um(function (d) { return d.cg = _this.dr; });
                break;
            case "MarkerFillOpacity":
                this.um(function (d) { return d.je = _this.jz; });
                break;
            case "MarkerThickness":
                if (!isNaN_(this.j0)) {
                    this.um(function (d) { return d.sg(_this.j0); });
                }
                break;
            case "MarkerOutlineMode":
                this.um(function (d) { return d.sf(_this.c3); });
                break;
            case "MarkerFillMode":
                this.um(function (d) { return d.se(_this.c1); });
                break;
            case "Resolution":
                if (!isNaN_(this.j6)) {
                    this.ui(function (d) { return d.jh = _this.j6; });
                }
                break;
            case "AreaFillOpacity":
                if (!isNaN_(this.jj)) {
                    this.ui(function (d) { return d.ii = _this.jj; });
                }
                break;
            case "ShouldAvoidAxisAnnotationCollisions":
                this.uh(function (d) {
                    d.cu = _this.hg;
                    d.cw = _this.hg;
                }, true);
                break;
            case "ShouldPanOnMaximumZoom":
                this.vc(function (d) { return d.f0 = _this.hi; });
                break;
            case "TrendLineBrushes":
            case "TrendLineType":
            case "TrendLineThickness":
            case "TrendLinePeriod":
                this.uj(function (d, e) { return _this.t4(d, e); });
                break;
            case "MarkerMaxCount":
                this.un(function (d, e) { return _this.t3(d, e); });
                break;
            case "MarkerTypes":
                var d = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), b);
                if (d != null) {
                    d.collectionChanged = delegateRemove(d.collectionChanged, runOn(this, this.vj));
                }
                var e = typeCast(ObservableCollection$1.$.specialize(MarkerType_$type), c);
                if (e != null) {
                    e.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.vj));
                }
                this.un(function (f, g) { return _this.t3(f, g); });
                break;
            case "MarkerAutomaticBehavior":
                this.vc(function (f) { return f.bg = _this.cz; });
                this.un(function (f, g) { return _this.t3(f, g); });
                break;
            case "MarkerBrushes":
                this.vc(function (f) { return f.ah = _this.ad; });
                break;
            case "MarkerOutlines":
                this.vc(function (f) { return f.ai = _this.ae; });
                break;
            case "AlignsGridLinesToPixels":
                this.vc(function (f) { return f.ws = _this.gf; });
                break;
            case "AnimateSeriesWhenAxisRangeChanges":
                this.vc(function (f) { return f.eh = _this.gg; });
                break;
            case "ToolTipType":
            case "CrosshairsDisplayMode":
            case "CrosshairsSnapToData":
            case "CrosshairsLineVerticalStroke":
            case "CrosshairsLineHorizontalStroke":
            case "CrosshairsLineThickness":
            case "CrosshairsAnnotationXAxisBackground":
            case "CrosshairsAnnotationXAxisTextColor":
            case "CrosshairsAnnotationYAxisBackground":
            case "CrosshairsAnnotationYAxisTextColor":
            case "CrosshairsAnnotationEnabled":
            case "CrosshairsAnnotationXAxisPrecision":
            case "CrosshairsAnnotationYAxisPrecision":
            case "FinalValueAnnotationsVisible":
            case "FinalValueAnnotationsPrecision":
            case "FinalValueAnnotationsTextColor":
            case "FinalValueAnnotationsBackground":
            case "CalloutsVisible":
            case "AutoCalloutsVisible":
            case "CalloutsAllowedPositions":
            case "CalloutsItemsSource":
            case "CalloutsXMemberPath":
            case "CalloutsYMemberPath":
            case "CalloutsLabelMemberPath":
            case "CalloutsContentMemberPath":
            case "CalloutsUseItemColorForFill":
            case "CalloutsBackground":
            case "CalloutsStrokeThickness":
            case "CalloutsUseItemColorForOutline":
            case "CalloutsUseAutoContrastingLabelColors":
            case "CalloutCollisionMode":
                var f = this.vt(runOn(this, this.ud), this.g8);
                this.g8 = f.p1;
                break;
            case "DataToolTipGroupingMode":
            case "DataToolTipPositionOffsetX":
            case "DataToolTipPositionOffsetY":
            case "DataToolTipDefaultPositionOffsetX":
            case "DataToolTipDefaultPositionOffsetY":
            case "DataToolTipGroupedPositionModeX":
            case "DataToolTipGroupedPositionModeY":
            case DomainChart.o2:
            case "DataToolTipIncludedSeries":
            case "DataToolTipExcludedSeries":
            case "DataToolTipIncludedColumns":
            case "DataToolTipExcludedColumns":
            case "DataToolTipValueFormatAbbreviation":
            case "DataToolTipValueFormatMaxFractions":
            case "DataToolTipValueFormatMinFractions":
            case "DataToolTipValueFormatMode":
            case "DataToolTipValueFormatCulture":
            case "DataToolTipValueFormatUseGrouping":
            case "DataToolTipValueFormatString":
            case "DataToolTipValueFormatSpecifiers":
            case "DataToolTipValueRowMargin":
            case "DataToolTipValueRowVisible":
            case "DataToolTipValueTextWhenMissingData":
            case "DataToolTipValueTextUseSeriesColors":
            case "DataToolTipValueTextMargin":
            case "DataToolTipValueTextColor":
            case "DataToolTipValueTextStyle":
            case "DataToolTipHeaderFormatString":
            case "DataToolTipHeaderFormatSpecifiers":
            case "DataToolTipHeaderFormatCulture":
            case "DataToolTipHeaderFormatDate":
            case "DataToolTipHeaderFormatTime":
            case "DataToolTipHeaderText":
            case "DataToolTipHeaderTextColor":
            case "DataToolTipHeaderTextMargin":
            case "DataToolTipHeaderRowMargin":
            case "DataToolTipHeaderRowVisible":
            case "DataToolTipHeaderTextStyle":
            case "DataToolTipGroupTextColor":
            case "DataToolTipGroupTextMargin":
            case "DataToolTipGroupRowMargin":
            case "DataToolTipGroupRowVisible":
            case "DataToolTipGroupTextStyle":
            case "DataToolTipSummaryTitleTextColor":
            case "DataToolTipSummaryTitleTextStyle":
            case "DataToolTipSummaryType":
            case "DataToolTipSummaryTitleText":
            case "DataToolTipSummaryTitleTextMargin":
            case "DataToolTipSummaryRowMargin":
            case "DataToolTipSummaryValueTextColor":
            case "DataToolTipSummaryValueTextStyle":
            case "DataToolTipSummaryLabelText":
            case "DataToolTipSummaryLabelTextColor":
            case "DataToolTipSummaryLabelTextStyle":
            case "DataToolTipSummaryUnitsText":
            case "DataToolTipSummaryUnitsTextColor":
            case "DataToolTipSummaryUnitsTextStyle":
            case "DataToolTipBadgeMargin":
            case "DataToolTipBadgeShape":
            case "DataToolTipUnitsDisplayMode":
            case "DataToolTipUnitsText":
            case "DataToolTipUnitsTextColor":
            case "DataToolTipUnitsTextMargin":
            case "DataToolTipUnitsTextStyle":
            case "DataToolTipTitleTextMargin":
            case "DataToolTipTitleTextColor":
            case "DataToolTipTitleTextStyle":
            case "DataToolTipLabelDisplayMode":
            case "DataToolTipLabelTextColor":
            case "DataToolTipLabelTextMargin":
            case "DataToolTipLabelTextStyle":
                this.vg(a, b, c);
                break;
            case "SelectionMode":
                this.vd(function (g) { return g.cb = _this.d1; }, false);
                break;
            case "FocusMode":
                this.vd(function (g) { return g.b9 = _this.d0; }, false);
                break;
            case "SelectionBehavior":
                this.vd(function (g) { return g.b6 = _this.dx; }, false);
                break;
            case "SelectionBrush":
                this.vd(function (g) { return g.u5 = _this.yh; }, false);
                break;
            case "FocusBrush":
                this.vd(function (g) { return g.uo = _this.x9; }, false);
                break;
            case "HorizontalViewScrollbarMode":
                this.vc(function (g) { return g.ch = _this.d6; });
                break;
            case "VerticalViewScrollbarMode":
                this.vc(function (g) { return g.ci = _this.d7; });
                break;
            case "HorizontalViewScrollbarCornerRadius":
                this.vc(function (g) { return g.hn = _this.jr; });
                break;
            case "HorizontalViewScrollbarFill":
                this.vc(function (g) { return g.uz = _this.ye; });
                break;
            case "HorizontalViewScrollbarMaxOpacity":
                this.vc(function (g) { return g.hq = _this.ju; });
                break;
            case "HorizontalViewScrollbarOutline":
                this.vc(function (g) { return g.u0 = _this.yf; });
                break;
            case "HorizontalViewScrollbarStrokeThickness":
                this.vc(function (g) { return g.hr = _this.jv; });
                break;
            case "VerticalViewScrollbarCornerRadius":
                this.vc(function (g) { return g.ia = _this.kk; });
                break;
            case "VerticalViewScrollbarFill":
                this.vc(function (g) { return g.u9 = _this.yk; });
                break;
            case "VerticalViewScrollbarMaxOpacity":
                this.vc(function (g) { return g.ic = _this.km; });
                break;
            case "VerticalViewScrollbarOutline":
                this.vc(function (g) { return g.va = _this.yl; });
                break;
            case "VerticalViewScrollbarStrokeThickness":
                this.vc(function (g) { return g.id = _this.kn; });
                break;
            case "HorizontalViewScrollbarHeight":
                this.vc(function (g) { return g.ho = _this.js; });
                break;
            case "HorizontalViewScrollbarInset":
                this.vc(function (g) { return g.hp = _this.jt; });
                break;
            case DomainChart.q2:
                this.vc(function (g) { return g.ev = _this.gz; });
                break;
            case "HorizontalViewScrollbarTrackStartInset":
                this.vc(function (g) { return g.ht = _this.jx; });
                break;
            case "HorizontalViewScrollbarTrackEndInset":
                this.vc(function (g) { return g.hs = _this.jw; });
                break;
            case "VerticalViewScrollbarPosition":
                this.vc(function (g) { return g.cl = _this.eb; });
                break;
            case "HorizontalViewScrollbarPosition":
                this.vc(function (g) { return g.ce = _this.d3; });
                break;
            case "ValueLines":
                var g = typeCast(ObservableCollection$1.$.specialize(ValueLayerValueMode_$type), b);
                if (g != null) {
                    g.collectionChanged = delegateRemove(g.collectionChanged, runOn(this, this.vn));
                }
                var h = typeCast(ObservableCollection$1.$.specialize(ValueLayerValueMode_$type), c);
                if (h != null) {
                    h.collectionChanged = delegateCombine(h.collectionChanged, runOn(this, this.vn));
                }
                var i = this.vt(runOn(this, this.ud), this.g8);
                this.g8 = i.p1;
                break;
        }
        this.vo(a, b, c);
        this.vp(a, b, c);
        if (this.hb) {
            this.cn.onTargetPropertyChanged(this, a, b, c);
        }
    };
    DomainChart.prototype.vg = function (a, b, c) {
        this.t2(a, c);
    };
    DomainChart.prototype.t2 = function (a, b) {
        var _this = this;
        if (!this.hn.containsKey(a)) {
            this.hq.add(a);
            this.hn.addItem(a, b);
        }
        else {
            this.hn.item(a, b);
        }
        this.uk(function (c) {
            if (_this.ci.isDataToolTipLayer(c)) {
                _this.t1(c);
            }
        });
    };
    DomainChart.prototype.t1 = function (a) {
        for (var b = 0; b < this.hq.count; b++) {
            var c = this.hq._inner[b];
            var d = this.hn.item(c);
            if (stringStartsWith(c, "DataToolTip")) {
                c = c.substr(("DataToolTip").length);
            }
            this.ci.updateDataToolTipPropertyByName(a, c, d);
        }
    };
    DomainChart.prototype.vj = function (a, b) {
        var _this = this;
        this.un(function (c, d) { return _this.t3(c, d); });
    };
    DomainChart.prototype.vn = function (a, b) {
        var c = this.vt(runOn(this, this.ud), this.g8);
        this.g8 = c.p1;
    };
    Object.defineProperty(DomainChart.prototype, "a6", {
        get: function () {
            return this.a0;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a2", {
        get: function () {
            return this.aw;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a1", {
        get: function () {
            return this.av;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eq", {
        get: function () {
            return this.em;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "er", {
        get: function () {
            return this.en;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ba", {
        get: function () {
            return this.a8;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d1", {
        get: function () {
            return this.dz;
        },
        set: function (a) {
            var b = this.dz;
            this.dz = a;
            if (b != this.dz) {
                this.vl("SelectionMode", enumGetBox(SeriesSelectionMode_$type, b), enumGetBox(SeriesSelectionMode_$type, this.dz));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d0", {
        get: function () {
            return this.dy;
        },
        set: function (a) {
            var b = this.dy;
            this.dy = a;
            if (b != this.dy) {
                this.vl("FocusMode", enumGetBox(SeriesSelectionMode_$type, b), enumGetBox(SeriesSelectionMode_$type, this.dy));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yh", {
        get: function () {
            return this.xl;
        },
        set: function (a) {
            var b = this.xl;
            this.xl = a;
            if (b != this.xl) {
                this.vl("SelectionBrush", b, this.xl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x9", {
        get: function () {
            return this.xi;
        },
        set: function (a) {
            var b = this.xi;
            this.xi = a;
            if (b != this.xi) {
                this.vl("FocusBrush", b, this.xi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dx", {
        get: function () {
            return this.dw;
        },
        set: function (a) {
            var b = this.dw;
            this.dw = a;
            if (b != this.dw) {
                this.vl("SelectionBehavior", enumGetBox(SeriesSelectionBehavior_$type, b), enumGetBox(SeriesSelectionBehavior_$type, this.dw));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "selectedSeriesItems", {
        get: function () {
            if (this.dataChart != null) {
                return this.dataChart.selectedSeriesItems;
            }
            return this.aq;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "focusedSeriesItems", {
        get: function () {
            if (this.dataChart != null) {
                return this.dataChart.focusedSeriesItems;
            }
            return this.ap;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a5", {
        get: function () {
            return this.az;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a4", {
        get: function () {
            return this.ay;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a3", {
        get: function () {
            return this.ax;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "es", {
        get: function () {
            return this.eo;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "et", {
        get: function () {
            return this.ep;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "a9", {
        get: function () {
            return this.a7;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "rd", {
        get: function () {
            return this.mp;
        },
        set: function (a) {
            var _this = this;
            var b = this.mp;
            this.mp = a;
            if (b != a) {
                this.az.o();
                if (this.mp != null) {
                    this.eu.b(this.mp, function (c, d, e) { return _this.az.j.add(new ChartSortDescription(2, c, d)); });
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "qm", {
        get: function () {
            return this.ml;
        },
        set: function (a) {
            var _this = this;
            var b = this.ml;
            this.ml = a;
            if (b != a) {
                this.ay.o();
                this.eu.b(this.ml, function (c, d, e) { return _this.ay.j.add(new ChartSortDescription(2, c, d)); });
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "q9", {
        get: function () {
            return this.mn;
        },
        set: function (a) {
            var _this = this;
            var b = this.mn;
            this.mn = a;
            if (b != a) {
                this.ax.o();
                if (this.mn != null) {
                    this.eu.b(this.mn, function (c, d, e) { return _this.ax.j.add(new ChartSortDescription(2, c, d)); });
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "q7", {
        get: function () {
            return this.mm;
        },
        set: function (a) {
            var b = this.mm;
            this.mm = a;
            if (b != a) {
                this.eo.clear();
                if (a != null) {
                    var c_1 = FilterExpressionParsingHelper.getFilterExpression(a);
                    if (!stringIsNullOrEmpty(c_1.errors)) {
                        if (this.filterStringErrorsParsing != null) {
                            this.filterStringErrorsParsing(this, ((function () {
                                var $ret = new FilterStringErrorsParsingEventArgs();
                                $ret.propertyName = "InitialFilter";
                                $ret.errors = c_1.errors;
                                return $ret;
                            })()));
                        }
                        return;
                    }
                    this.eo.k.add(c_1.result);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "rb", {
        get: function () {
            return this.mo;
        },
        set: function (a) {
            var b = this.mo;
            this.mo = a;
            if (b != a) {
                this.ep.clear();
                if (a != null) {
                    var c_2 = FilterExpressionParsingHelper.getFilterExpression(a);
                    if (!stringIsNullOrEmpty(c_2.errors)) {
                        if (this.filterStringErrorsParsing != null) {
                            this.filterStringErrorsParsing(this, ((function () {
                                var $ret = new FilterStringErrorsParsingEventArgs();
                                $ret.propertyName = "InitialFilter";
                                $ret.errors = c_2.errors;
                                return $ret;
                            })()));
                        }
                        return;
                    }
                    this.ep.k.add(c_2.result);
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "rf", {
        get: function () {
            return this.mq;
        },
        set: function (a) {
            var _this = this;
            var b = this.mq;
            this.mq = a;
            if (b != a) {
                this.a7.o();
                if (this.mq != null) {
                    this.ev.a(this.mq, function (c, d, e) {
                        return _this.a7.j.add(((function () {
                            var $ret = new ChartSummaryDescription(2, c, d);
                            $ret.n = e;
                            return $ret;
                        })()));
                    });
                }
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "itemsSource", {
        get: function () {
            return this.lp;
        },
        set: function (a) {
            var b = this.itemsSource;
            if (b != a) {
                this.lp = a;
                this.vl("ItemsSource", b, this.itemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "actualItemsSource", {
        get: function () {
            return this.ln;
        },
        set: function (a) {
            var b = this.actualItemsSource;
            if (b != a) {
                this.ln = a;
                this.vl("ActualItemsSource", b, this.actualItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "highlightedItemsSource", {
        get: function () {
            return this.lo;
        },
        set: function (a) {
            var b = this.highlightedItemsSource;
            if (b != a) {
                this.lo = a;
                this.vl("HighlightedItemsSource", b, this.highlightedItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "actualHighlightedItemsSource", {
        get: function () {
            return this.lm;
        },
        set: function (a) {
            var b = this.actualHighlightedItemsSource;
            if (b != a) {
                this.lm = a;
                this.vl("ActualHighlightedItemsSource", b, this.actualHighlightedItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "q", {
        get: function () {
            return this.h;
        },
        set: function (a) {
            var b = this.h;
            this.h = a;
            if (b != this.h) {
                this.vl("IncludedProperties", b, this.h);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "o", {
        get: function () {
            return this.g;
        },
        set: function (a) {
            var b = this.g;
            this.g = a;
            if (b != this.g) {
                this.vl("ExcludedProperties", b, this.g);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ab", {
        get: function () {
            return this.t;
        },
        set: function (a) {
            var b = this.ab;
            if (a != b) {
                this.t = a;
                this.vl("Brushes", b, this.ab);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "af", {
        get: function () {
            return this.w;
        },
        set: function (a) {
            var b = this.af;
            if (a != b) {
                this.w = a;
                this.vl("Outlines", b, this.af);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "z", {
        get: function () {
            return this.r;
        },
        set: function (a) {
            var b = this.r;
            if (a != b) {
                this.r = a;
                this.vl("ActualBrushes", b, this.z);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "aa", {
        get: function () {
            return this.s;
        },
        set: function (a) {
            var b = this.s;
            if (a != b) {
                this.s = a;
                this.vl("ActualOutlines", b, this.aa);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "legend", {
        get: function () {
            return this.cj;
        },
        set: function (a) {
            var b = this.legend;
            if (a != b) {
                this.cj = a;
                this.vl("Legend", b, this.legend);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_g6 = function () {
        return this.f5;
    };
    DomainChart.prototype.set_g6 = function (a) {
        var b = this.g6;
        if (a != b) {
            this.f5 = a;
            this.vl("IsHorizontalZoomEnabled", b, this.g6);
        }
    };
    Object.defineProperty(DomainChart.prototype, "g6", {
        get: function () {
            return this.get_g6();
        },
        set: function (a) {
            this.set_g6(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_he = function () {
        return this.f8;
    };
    DomainChart.prototype.set_he = function (a) {
        var b = this.he;
        if (a != b) {
            this.f8 = a;
            this.vl("IsVerticalZoomEnabled", b, this.he);
        }
    };
    Object.defineProperty(DomainChart.prototype, "he", {
        get: function () {
            return this.get_he();
        },
        set: function (a) {
            this.set_he(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_hh = function () {
        return this.ga;
    };
    DomainChart.prototype.set_hh = function (a) {
        var b = this.hh;
        if (a != b) {
            this.ga = a;
            this.vl("ShouldDisplayMockData", b, this.hh);
        }
    };
    Object.defineProperty(DomainChart.prototype, "hh", {
        get: function () {
            return this.get_hh();
        },
        set: function (a) {
            this.set_hh(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_hk = function () {
        return this.gc;
    };
    DomainChart.prototype.set_hk = function (a) {
        var b = this.hk;
        if (a != b) {
            this.gc = a;
            this.vl("ShouldUseSkeletonStyleForMockData", b, this.hk);
        }
    };
    Object.defineProperty(DomainChart.prototype, "hk", {
        get: function () {
            return this.get_hk();
        },
        set: function (a) {
            this.set_hk(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_dk = function () {
        return this.dj;
    };
    DomainChart.prototype.set_dk = function (a) {
        var b = this.dk;
        if (a != b) {
            this.dj = a;
            this.vl("HighlightedValuesDisplayMode", enumGetBox(SeriesHighlightedValuesDisplayMode_$type, b), enumGetBox(SeriesHighlightedValuesDisplayMode_$type, this.dk));
        }
    };
    Object.defineProperty(DomainChart.prototype, "dk", {
        get: function () {
            return this.get_dk();
        },
        set: function (a) {
            this.set_dk(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_g9 = function () {
        return this.f7;
    };
    DomainChart.prototype.set_g9 = function (a) {
        var b = this.g9;
        if (a != b) {
            this.f7 = a;
            this.vl("IsSeriesHighlightingEnabled", b, this.g9);
        }
    };
    Object.defineProperty(DomainChart.prototype, "g9", {
        get: function () {
            return this.get_g9();
        },
        set: function (a) {
            this.set_g9(a);
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_zf = function () {
        return this.ze;
    };
    DomainChart.prototype.set_zf = function (a) {
        var b = this.zf;
        if (a != b) {
            this.ze = a;
            this.vl("HighlightedLegendItemVisibility", enumGetBox(Visibility_$type, b), enumGetBox(Visibility_$type, this.zf));
        }
    };
    Object.defineProperty(DomainChart.prototype, "zf", {
        get: function () {
            return this.get_zf();
        },
        set: function (a) {
            this.set_zf(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yp", {
        get: function () {
            return this.yn;
        },
        set: function (a) {
            var b = this.yp;
            if (Rect.l_op_Inequality(a, b)) {
                this.yn = a;
                this.vl("WindowRect", b, this.yp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yo", {
        get: function () {
            return this.dataChart != null ? this.dataChart.v0 : Rect.empty;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "st", {
        get: function () {
            return this.mt;
        },
        set: function (a) {
            var b = this.st;
            if (a != b) {
                this.mt = a;
                this.vl("Title", b, this.st);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "si", {
        get: function () {
            return this.mr;
        },
        set: function (a) {
            var b = this.si;
            if (a != b) {
                this.mr = a;
                this.vl("Subtitle", b, this.si);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "wy", {
        get: function () {
            return this.ww;
        },
        set: function (a) {
            var b = this.wy;
            if (b != a) {
                this.ww = a;
                this.vl("TitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.wy));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "wx", {
        get: function () {
            return this.wv;
        },
        set: function (a) {
            var b = this.wx;
            if (b != a) {
                this.wv = a;
                this.vl("SubtitleAlignment", enumGetBox(HorizontalAlignment_$type, b), enumGetBox(HorizontalAlignment_$type, this.wx));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eh", {
        get: function () {
            return this.eg;
        },
        set: function (a) {
            var b = this.eh;
            if (a != b) {
                this.eg = a;
                this.vl("UnknownValuePlotting", enumGetBox(UnknownValuePlotting_$type, b), enumGetBox(UnknownValuePlotting_$type, this.eh));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.get_j6 = function () {
        return this.iu;
    };
    DomainChart.prototype.set_j6 = function (a) {
        var b = this.j6;
        if (a != b) {
            this.iu = a;
            this.vl("Resolution", b, this.j6);
        }
    };
    Object.defineProperty(DomainChart.prototype, "j6", {
        get: function () {
            return this.get_j6();
        },
        set: function (a) {
            this.set_j6(a);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kc", {
        get: function () {
            return this.i0;
        },
        set: function (a) {
            var b = this.kc;
            if (a != b) {
                this.i0 = a;
                this.vl("Thickness", b, this.kc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dr", {
        get: function () {
            return this.dq;
        },
        set: function (a) {
            var b = this.dr;
            if (a != b) {
                this.dq = a;
                this.vl("OutlineMode", enumGetBox(SeriesOutlineMode_$type, b), enumGetBox(SeriesOutlineMode_$type, this.dr));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c3", {
        get: function () {
            return this.c2;
        },
        set: function (a) {
            var b = this.c3;
            if (a != b) {
                this.c2 = a;
                this.vl("MarkerOutlineMode", enumGetBox(MarkerOutlineMode_$type, b), enumGetBox(MarkerOutlineMode_$type, this.c3));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c1", {
        get: function () {
            return this.c0;
        },
        set: function (a) {
            var b = this.c1;
            if (a != b) {
                this.c0 = a;
                this.vl("MarkerFillMode", enumGetBox(MarkerFillMode_$type, b), enumGetBox(MarkerFillMode_$type, this.c1));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jz", {
        get: function () {
            return this.im;
        },
        set: function (a) {
            var b = this.jz;
            if (a != b) {
                this.im = a;
                this.vl("MarkerFillOpacity", b, this.jz);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j0", {
        get: function () {
            return this.io;
        },
        set: function (a) {
            var b = this.j0;
            if (a != b) {
                this.io = a;
                this.vl("MarkerThickness", b, this.j0);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "c9", {
        get: function () {
            return this.c8;
        },
        set: function (a) {
            var b = this.c9;
            if (a != b) {
                this.c8 = a;
                this.vl("MarkerTypes", b, this.c9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cz", {
        get: function () {
            return this.cy;
        },
        set: function (a) {
            var b = this.cz;
            if (a != b) {
                this.cy = a;
                this.vl("MarkerAutomaticBehavior", enumGetBox(MarkerAutomaticBehavior_$type, b), enumGetBox(MarkerAutomaticBehavior_$type, this.cz));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ad", {
        get: function () {
            return this.u;
        },
        set: function (a) {
            var b = this.ad;
            if (a != b) {
                this.u = a;
                this.vl("MarkerBrushes", b, this.ad);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ae", {
        get: function () {
            return this.v;
        },
        set: function (a) {
            var b = this.ae;
            if (!Base.equalsStatic(a, b)) {
                this.v = a;
                this.vl("MarkerOutlines", b, this.ae);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "li", {
        get: function () {
            return this.k5;
        },
        set: function (a) {
            var b = this.k5;
            if (a != b) {
                this.k5 = a;
                this.vl("MarkerMaxCount", b, this.k5);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jj", {
        get: function () {
            return this.h5;
        },
        set: function (a) {
            var b = this.jj;
            if (a != b) {
                this.h5 = a;
                this.vl("AreaFillOpacity", b, this.jj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gg", {
        get: function () {
            return this.fl;
        },
        set: function (a) {
            var b = this.fl;
            if (a != b) {
                this.fl = a;
                this.vl("AnimateSeriesWhenAxisRangeChanges", b, this.fl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ah", {
        get: function () {
            return this.x;
        },
        set: function (a) {
            var b = this.ah;
            if (a != b) {
                this.x = a;
                this.vl("TrendLineBrushes", b, this.ah);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ef", {
        get: function () {
            return this.ee;
        },
        set: function (a) {
            var b = this.ef;
            if (a != b) {
                this.ee = a;
                this.vl("TrendLineType", enumGetBox(TrendLineType_$type, b), enumGetBox(TrendLineType_$type, this.ef));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ki", {
        get: function () {
            return this.i6;
        },
        set: function (a) {
            var b = this.ki;
            if (a != b) {
                this.i6 = a;
                this.vl("TrendLineThickness", b, this.ki);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gf", {
        get: function () {
            return this.fk;
        },
        set: function (a) {
            var b = this.gf;
            if (a != b) {
                this.fk = a;
                this.vl("AlignsGridLinesToPixels", b, this.gf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j3", {
        get: function () {
            return this.ir;
        },
        set: function (a) {
            var b = this.ir;
            this.ir = a;
            if (a != b) {
                this.vl("PlotAreaMarginLeft", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j5", {
        get: function () {
            return this.it;
        },
        set: function (a) {
            var b = this.it;
            this.it = a;
            if (a != b) {
                this.vl("PlotAreaMarginTop", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j4", {
        get: function () {
            return this.is;
        },
        set: function (a) {
            var b = this.is;
            this.is = a;
            if (a != b) {
                this.vl("PlotAreaMarginRight", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "j2", {
        get: function () {
            return this.iq;
        },
        set: function (a) {
            var b = this.iq;
            this.iq = a;
            if (a != b) {
                this.vl("PlotAreaMarginBottom", b, a);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.vk = function () {
    };
    Object.defineProperty(DomainChart.prototype, "bc", {
        get: function () {
            return this.bb;
        },
        set: function (a) {
            var b = this.bc;
            if (a != b) {
                this.bb = a;
                this.vl("ComputedPlotAreaMarginMode", enumGetBox(ComputedPlotAreaMarginMode_$type, b), enumGetBox(ComputedPlotAreaMarginMode_$type, this.bc));
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.prototype.bd = function () {
        return this.bc;
    };
    Object.defineProperty(DomainChart.prototype, "dt", {
        get: function () {
            return this.ds;
        },
        set: function (a) {
            var b = this.dt;
            if (a != b) {
                this.ds = a;
                this.vl("SeriesPlotAreaMarginHorizontalMode", enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, b), enumGetBox(SeriesPlotAreaMarginHorizontalMode_$type, this.dt));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dv", {
        get: function () {
            return this.du;
        },
        set: function (a) {
            var b = this.dv;
            if (a != b) {
                this.du = a;
                this.vl("SeriesPlotAreaMarginVerticalMode", enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, b), enumGetBox(SeriesPlotAreaMarginVerticalMode_$type, this.dv));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dp", {
        get: function () {
            return this.dn;
        },
        set: function (a) {
            var b = this.dp;
            if (a != b) {
                this.dn = a;
                this.vl("HighlightingMode", enumGetBox(SeriesHighlightingMode_$type, b), enumGetBox(SeriesHighlightingMode_$type, this.dp));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "dm", {
        get: function () {
            return this.dl;
        },
        set: function (a) {
            var b = this.dm;
            if (a != b) {
                this.dl = a;
                this.vl("HighlightingBehavior", enumGetBox(SeriesHighlightingBehavior_$type, b), enumGetBox(SeriesHighlightingBehavior_$type, this.dm));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cr", {
        get: function () {
            return this.cq;
        },
        set: function (a) {
            var b = this.cr;
            if (a != b) {
                this.cq = a;
                this.vl("LegendHighlightingMode", enumGetBox(LegendHighlightingMode_$type, b), enumGetBox(LegendHighlightingMode_$type, this.cr));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "cx", {
        get: function () {
            return this.cv;
        },
        set: function (a) {
            var b = this.cx;
            if (a != b) {
                this.cv = a;
                this.vl("LegendItemBadgeShape", enumGetBox(LegendItemBadgeShape_$type, b), enumGetBox(LegendItemBadgeShape_$type, this.cx));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ct", {
        get: function () {
            return this.cs;
        },
        set: function (a) {
            var b = this.ct;
            if (a != b) {
                this.cs = a;
                this.vl("LegendItemBadgeMode", enumGetBox(LegendItemBadgeMode_$type, b), enumGetBox(LegendItemBadgeMode_$type, this.ct));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ll", {
        get: function () {
            return this.k9;
        },
        set: function (a) {
            var b = this.ll;
            if (a != b) {
                this.k9 = a;
                this.vl("TrendLinePeriod", b, this.ll);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ed", {
        get: function () {
            return this.ec;
        },
        set: function (a) {
            var b = this.ed;
            if (a != b) {
                this.ec = a;
                this.vl("ToolTipType", enumGetBox(ToolTipType_$type, b), enumGetBox(ToolTipType_$type, this.ed));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "bf", {
        get: function () {
            return this.be;
        },
        set: function (a) {
            var b = this.bf;
            if (a != b) {
                this.be = a;
                this.vl("CrosshairsDisplayMode", enumGetBox(CrosshairsDisplayMode_$type, b), enumGetBox(CrosshairsDisplayMode_$type, this.bf));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gp", {
        get: function () {
            return this.fu;
        },
        set: function (a) {
            var b = this.gp;
            if (a != b) {
                this.fu = a;
                this.vl("CrosshairsSnapToData", b, this.gp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xw", {
        get: function () {
            return this.w5;
        },
        set: function (a) {
            var b = this.xw;
            if (a != b) {
                this.w5 = a;
                this.vl("CrosshairsLineVerticalStroke", b, this.xw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jm", {
        get: function () {
            return this.h8;
        },
        set: function (a) {
            var b = this.jm;
            if (a != b) {
                this.h8 = a;
                this.vl("CrosshairsLineThickness", b, this.jm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xv", {
        get: function () {
            return this.w4;
        },
        set: function (a) {
            var b = this.xv;
            if (a != b) {
                this.w4 = a;
                this.vl("CrosshairsLineHorizontalStroke", b, this.xv);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "go", {
        get: function () {
            return this.ft;
        },
        set: function (a) {
            var b = this.go;
            if (a != b) {
                this.ft = a;
                this.vl("CrosshairsAnnotationEnabled", b, this.go);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xr", {
        get: function () {
            return this.w0;
        },
        set: function (a) {
            var b = this.xr;
            if (a != b) {
                this.w0 = a;
                this.vl("CrosshairsAnnotationXAxisBackground", b, this.xr);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xt", {
        get: function () {
            return this.w2;
        },
        set: function (a) {
            var b = this.xt;
            if (a != b) {
                this.w2 = a;
                this.vl("CrosshairsAnnotationYAxisBackground", b, this.xt);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xs", {
        get: function () {
            return this.w1;
        },
        set: function (a) {
            var b = this.xs;
            if (a != b) {
                this.w1 = a;
                this.vl("CrosshairsAnnotationXAxisTextColor", b, this.xs);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xu", {
        get: function () {
            return this.w3;
        },
        set: function (a) {
            var b = this.xu;
            if (a != b) {
                this.w3 = a;
                this.vl("CrosshairsAnnotationYAxisTextColor", b, this.xu);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lb", {
        get: function () {
            return this.ky;
        },
        set: function (a) {
            var b = this.lb;
            if (a != b) {
                this.ky = a;
                this.vl("CrosshairsAnnotationXAxisPrecision", b, this.lb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lc", {
        get: function () {
            return this.kz;
        },
        set: function (a) {
            var b = this.lc;
            if (a != b) {
                this.kz = a;
                this.vl("CrosshairsAnnotationYAxisPrecision", b, this.lc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hg", {
        get: function () {
            return this.f9;
        },
        set: function (a) {
            var b = this.hg;
            if (a != b) {
                this.f9 = a;
                this.vl("ShouldAvoidAxisAnnotationCollisions", b, this.hg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hi", {
        get: function () {
            return this.gb;
        },
        set: function (a) {
            var b = this.gb;
            if (a != b) {
                this.gb = a;
                this.vl("ShouldPanOnMaximumZoom", b, this.gb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gw", {
        get: function () {
            return this.f1;
        },
        set: function (a) {
            var b = this.gw;
            if (a != b) {
                this.f1 = a;
                this.vl("FinalValueAnnotationsVisible", b, this.gw);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x7", {
        get: function () {
            return this.xg;
        },
        set: function (a) {
            var b = this.x7;
            if (a != b) {
                this.xg = a;
                this.vl("FinalValueAnnotationsBackground", b, this.x7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "x8", {
        get: function () {
            return this.xh;
        },
        set: function (a) {
            var b = this.x8;
            if (a != b) {
                this.xh = a;
                this.vl("FinalValueAnnotationsTextColor", b, this.x8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "lf", {
        get: function () {
            return this.k2;
        },
        set: function (a) {
            var b = this.lf;
            if (a != b) {
                this.k2 = a;
                this.vl("FinalValueAnnotationsPrecision", b, this.lf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gi", {
        get: function () {
            return this.fn;
        },
        set: function (a) {
            var b = this.gi;
            if (a != b) {
                this.fn = a;
                this.vl("AutoCalloutsVisible", b, this.gi);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gn", {
        get: function () {
            return this.fs;
        },
        set: function (a) {
            var b = this.gn;
            if (a != b) {
                this.fs = a;
                this.vl("CalloutsVisible", b, this.gn);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gj", {
        get: function () {
            return this.fo;
        },
        set: function (a) {
            var b = this.gj;
            if (a != b) {
                this.fo = a;
                this.vl("CalloutStyleUpdatingEventEnabled", b, this.gj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hl", {
        get: function () {
            return this.gd;
        },
        set: function (a) {
            var b = this.hl;
            if (a != b) {
                this.gd = a;
                this.vl("UseValueForAutoCalloutLabels", b, this.hl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ak", {
        get: function () {
            return this.aj;
        },
        set: function (a) {
            var b = this.ak;
            if (a != b) {
                this.aj = a;
                this.vl("CalloutCollisionMode", enumGetBox(CalloutCollisionMode_$type, b), enumGetBox(CalloutCollisionMode_$type, this.ak));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gl", {
        get: function () {
            return this.fq;
        },
        set: function (a) {
            var b = this.gl;
            if (a != b) {
                this.fq = a;
                this.vl("CalloutsUseItemColorForFill", b, this.gl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gm", {
        get: function () {
            return this.fr;
        },
        set: function (a) {
            var b = this.gm;
            if (a != b) {
                this.fr = a;
                this.vl("CalloutsUseItemColorForOutline", b, this.gm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gk", {
        get: function () {
            return this.fp;
        },
        set: function (a) {
            var b = this.gk;
            if (a != b) {
                this.fp = a;
                this.vl("CalloutsUseAutoContrastingLabelColors", b, this.gk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jl", {
        get: function () {
            return this.h7;
        },
        set: function (a) {
            var b = this.jl;
            if (a != b) {
                this.h7 = a;
                this.vl("CalloutsStrokeThickness", b, this.jl);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "xq", {
        get: function () {
            return this.wz;
        },
        set: function (a) {
            var b = this.xq;
            if (a != b) {
                this.wz = a;
                this.vl("CalloutsBackground", b, this.xq);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "la", {
        get: function () {
            return this.kx;
        },
        set: function (a) {
            var b = this.la;
            if (a != b) {
                this.kx = a;
                this.vl("CalloutsAutoLabelPrecision", b, this.la);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "calloutsItemsSource", {
        get: function () {
            return this.h0;
        },
        set: function (a) {
            var b = this.calloutsItemsSource;
            if (a != b) {
                this.h0 = a;
                this.vl("CalloutsItemsSource", b, this.calloutsItemsSource);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "am", {
        get: function () {
            return this.al;
        },
        set: function (a) {
            var b = this.am;
            if (a != b) {
                this.al = a;
                this.vl("CalloutsAllowedPositions", b, this.am);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nk", {
        get: function () {
            return this.l9;
        },
        set: function (a) {
            var b = this.nk;
            if (a != b) {
                this.l9 = a;
                this.vl("CalloutsXMemberPath", b, this.nk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nm", {
        get: function () {
            return this.ma;
        },
        set: function (a) {
            var b = this.nm;
            if (a != b) {
                this.ma = a;
                this.vl("CalloutsYMemberPath", b, this.nm);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "nc", {
        get: function () {
            return this.l8;
        },
        set: function (a) {
            var b = this.nc;
            if (a != b) {
                this.l8 = a;
                this.vl("CalloutsLabelMemberPath", b, this.nc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "m9", {
        get: function () {
            return this.l7;
        },
        set: function (a) {
            var b = this.m9;
            if (a != b) {
                this.l7 = a;
                this.vl("CalloutsContentMemberPath", b, this.m9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ej", {
        get: function () {
            return this.ei;
        },
        set: function (a) {
            var b = this.ei;
            if (a != b) {
                this.ei = a;
                this.vl("ValueLines", b, this.ei);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ai", {
        get: function () {
            return this.y;
        },
        set: function (a) {
            var b = this.y;
            if (a != b) {
                this.y = a;
                this.vl("ValueLinesBrushes", b, this.y);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kj", {
        get: function () {
            return this.i7;
        },
        set: function (a) {
            var b = this.i7;
            if (a != b) {
                this.i7 = a;
                this.vl("ValueLinesThickness", b, this.i7);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d6", {
        get: function () {
            return this.d4;
        },
        set: function (a) {
            var b = this.d4;
            this.d4 = a;
            if (b != this.d4) {
                this.vl("HorizontalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.d4));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d7", {
        get: function () {
            return this.d5;
        },
        set: function (a) {
            var b = this.d5;
            this.d5 = a;
            if (b != this.d5) {
                this.vl("VerticalViewScrollbarMode", enumGetBox(SeriesViewerScrollbarMode_$type, b), enumGetBox(SeriesViewerScrollbarMode_$type, this.d5));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "d3", {
        get: function () {
            return this.d2;
        },
        set: function (a) {
            var b = this.d2;
            this.d2 = a;
            if (b != this.d2) {
                this.vl("HorizontalViewScrollbarPosition", enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, b), enumGetBox(SeriesViewerHorizontalScrollbarPosition_$type, this.d2));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "eb", {
        get: function () {
            return this.ea;
        },
        set: function (a) {
            var b = this.ea;
            this.ea = a;
            if (b != this.ea) {
                this.vl("VerticalViewScrollbarPosition", enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, b), enumGetBox(SeriesViewerVerticalScrollbarPosition_$type, this.ea));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ye", {
        get: function () {
            return this.xj;
        },
        set: function (a) {
            var b = this.xj;
            this.xj = a;
            if (b != this.xj) {
                this.vl("HorizontalViewScrollbarFill", b, this.xj);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yf", {
        get: function () {
            return this.xk;
        },
        set: function (a) {
            var b = this.xk;
            this.xk = a;
            if (b != this.xk) {
                this.vl("HorizontalViewScrollbarOutline", b, this.xk);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jv", {
        get: function () {
            return this.ii;
        },
        set: function (a) {
            var b = this.ii;
            this.ii = a;
            if (b != this.ii) {
                this.vl("HorizontalViewScrollbarStrokeThickness", b, this.ii);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ju", {
        get: function () {
            return this.ih;
        },
        set: function (a) {
            var b = this.ih;
            this.ih = a;
            if (b != this.ih) {
                this.vl("HorizontalViewScrollbarMaxOpacity", b, this.ih);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jr", {
        get: function () {
            return this.id;
        },
        set: function (a) {
            var b = this.id;
            this.id = a;
            if (b != this.id) {
                this.vl("HorizontalViewScrollbarCornerRadius", b, this.id);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "js", {
        get: function () {
            return this.ie;
        },
        set: function (a) {
            var b = this.ie;
            this.ie = a;
            if (b != this.ie) {
                this.vl("HorizontalViewScrollbarHeight", b, this.ie);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jt", {
        get: function () {
            return this.ig;
        },
        set: function (a) {
            var b = this.ig;
            this.ig = a;
            if (b != this.ig) {
                this.vl("HorizontalViewScrollbarInset", b, this.ig);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jx", {
        get: function () {
            return this.ik;
        },
        set: function (a) {
            var b = this.ik;
            this.ik = a;
            if (b != this.ik) {
                this.vl("HorizontalViewScrollbarTrackStartInset", b, this.ik);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "jw", {
        get: function () {
            return this.ij;
        },
        set: function (a) {
            var b = this.ij;
            this.ij = a;
            if (b != this.ij) {
                this.vl("HorizontalViewScrollbarTrackEndInset", b, this.ij);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "gz", {
        get: function () {
            return this.f2;
        },
        set: function (a) {
            var b = this.f2;
            this.f2 = a;
            if (b != this.f2) {
                this.vl(DomainChart.q2, b, this.f2);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yk", {
        get: function () {
            return this.xo;
        },
        set: function (a) {
            var b = this.xo;
            this.xo = a;
            if (b != this.xo) {
                this.vl("VerticalViewScrollbarFill", b, this.xo);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "yl", {
        get: function () {
            return this.xp;
        },
        set: function (a) {
            var b = this.xp;
            this.xp = a;
            if (b != this.xp) {
                this.vl("VerticalViewScrollbarOutline", b, this.xp);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kn", {
        get: function () {
            return this.jb;
        },
        set: function (a) {
            var b = this.jb;
            this.jb = a;
            if (b != this.jb) {
                this.vl("VerticalViewScrollbarStrokeThickness", b, this.jb);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "km", {
        get: function () {
            return this.ja;
        },
        set: function (a) {
            var b = this.ja;
            this.ja = a;
            if (b != this.ja) {
                this.vl("VerticalViewScrollbarMaxOpacity", b, this.ja);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kk", {
        get: function () {
            return this.i8;
        },
        set: function (a) {
            var b = this.i8;
            this.i8 = a;
            if (b != this.i8) {
                this.vl("VerticalViewScrollbarCornerRadius", b, this.i8);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kq", {
        get: function () {
            return this.je;
        },
        set: function (a) {
            var b = this.je;
            this.je = a;
            if (b != this.je) {
                this.vl("VerticalViewScrollbarWidth", b, this.je);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kl", {
        get: function () {
            return this.i9;
        },
        set: function (a) {
            var b = this.i9;
            this.i9 = a;
            if (b != this.i9) {
                this.vl("VerticalViewScrollbarInset", b, this.i9);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kp", {
        get: function () {
            return this.jd;
        },
        set: function (a) {
            var b = this.jd;
            this.jd = a;
            if (b != this.jd) {
                this.vl("VerticalViewScrollbarTrackStartInset", b, this.jd);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ko", {
        get: function () {
            return this.jc;
        },
        set: function (a) {
            var b = this.jc;
            this.jc = a;
            if (b != this.jc) {
                this.vl("VerticalViewScrollbarTrackEndInset", b, this.jc);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "hm", {
        get: function () {
            return this.ge;
        },
        set: function (a) {
            var b = this.ge;
            this.ge = a;
            if (b != this.ge) {
                this.vl(DomainChart.tq, b, this.ge);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ks", {
        get: function () {
            return this.jg;
        },
        set: function (a) {
            var b = this.jg;
            this.jg = a;
            if (b != this.jg) {
                this.vl("WindowRectMinWidth", b, this.jg);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kr", {
        get: function () {
            return this.jf;
        },
        set: function (a) {
            var b = this.jf;
            this.jf = a;
            if (b != this.jf) {
                this.vl("WindowRectMinHeight", b, this.jf);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "ku", {
        get: function () {
            return this.ji;
        },
        set: function (a) {
            var b = this.ji;
            this.ji = a;
            if (b != this.ji) {
                this.vl("WindowSizeMinWidth", b, this.ji);
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(DomainChart.prototype, "kt", {
        get: function () {
            return this.jh;
        },
        set: function (a) {
            var b = this.jh;
            this.jh = a;
            if (b != this.jh) {
                this.vl("WindowSizeMinHeight", b, this.jh);
            }
        },
        enumerable: false,
        configurable: true
    });
    DomainChart.$t = markType(DomainChart, 'DomainChart', Base.$, [INotifyPropertyChanged_$type, IDataLegendTarget_$type, IToolbarTarget_$type]);
    DomainChart.l6 = new Random(0);
    DomainChart.l5 = new Random(0);
    DomainChart.o2 = "DataToolTipShouldUpdateWhenSeriesDataChanges";
    DomainChart.q2 = "HorizontalViewScrollbarShouldAddAutoTrackInsets";
    DomainChart.tq = "VerticalViewScrollbarShouldAddAutoTrackInsets";
    return DomainChart;
}(Base));
export { DomainChart };
/**
 * @hidden
 */
export var IDomainChartToolbarProvider_$type = new Type(null, 'IDomainChartToolbarProvider');
