import { Visibility_$type } from "igniteui-angular-core";
import { IgxStyle } from "igniteui-angular-core";
import { MarkerType_$type } from "./MarkerType";
import { PenLineCap_$type } from "igniteui-angular-core";
import { brushToString, stringToBrush, ensureEnum, toDoubleCollection, fromDoubleCollection } from "igniteui-angular-core";
/**
 * Provides data for IgxDataChartComponent stacked series.
*/
var IgxStackedSeriesCreatedEventArgs = /** @class */ /*@__PURE__*/ (function () {
    function IgxStackedSeriesCreatedEventArgs() {
    }
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxStackedSeriesCreatedEventArgs.prototype.onImplementationCreated = function () {
    };
    IgxStackedSeriesCreatedEventArgs.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "brush", {
        /**
         * Gets or sets the series brush.
        */
        get: function () {
            return brushToString(this.i.brush);
        },
        set: function (v) {
            this.i.brush = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "legendItemTemplate", {
        /**
         * Gets or sets the series legend item template.
        */
        get: function () {
            return this.i.legendItemTemplate;
        },
        set: function (v) {
            this.i.legendItemTemplate = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "legendItemBadgeTemplate", {
        /**
         * Gets or sets the series legend item badge templae.
        */
        get: function () {
            return this.i.legendItemBadgeTemplate;
        },
        set: function (v) {
            this.i.legendItemBadgeTemplate = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "legendItemVisibility", {
        /**
         * Gets or sets the visibility of the series legend.
        */
        get: function () {
            return this.i.legendItemVisibility;
        },
        set: function (v) {
            this.i.legendItemVisibility = ensureEnum(Visibility_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "outline", {
        /**
         * Gets or sets the series outline brush.
        */
        get: function () {
            return brushToString(this.i.outline);
        },
        set: function (v) {
            this.i.outline = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "dashArray", {
        /**
         * Gets or sets the series stroke dash array.
        */
        get: function () {
            return fromDoubleCollection(this.i.dashArray);
        },
        set: function (v) {
            this.i.dashArray = toDoubleCollection(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "index", {
        /**
         * Gets the index of the series.
        */
        get: function () {
            return this.i.index;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "thickness", {
        /**
         * Gets or sets the series outline thickness.
        */
        get: function () {
            return this.i.thickness;
        },
        set: function (v) {
            this.i.thickness = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "title", {
        /**
         * Gets or sets the series title.
        */
        get: function () {
            return this.i.title;
        },
        set: function (v) {
            this.i.title = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "transitionDuration", {
        /**
         * Gets or sets the animation transition duration for the series.
        */
        get: function () {
            return this.i.transitionDuration;
        },
        set: function (v) {
            this.i.transitionDuration = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "transitionEasingFunction", {
        /**
         * Gets or sets the animation easing function for the series.
        */
        get: function () {
            return this.i.transitionEasingFunction;
        },
        set: function (v) {
            this.i.transitionEasingFunction = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "markerBrush", {
        /**
         * Gets or sets the series marker brush.
        */
        get: function () {
            return brushToString(this.i.markerBrush);
        },
        set: function (v) {
            this.i.markerBrush = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "markerOutline", {
        /**
         * Gets or sets the series marker outline.
        */
        get: function () {
            return brushToString(this.i.markerOutline);
        },
        set: function (v) {
            this.i.markerOutline = stringToBrush(v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "markerStyle", {
        /**
         * Gets or sets the series marker style.
        */
        get: function () {
            var r = this.i.markerStyle;
            if (r == null) {
                return null;
            }
            if (!r.externalObject) {
                var e = new IgxStyle();
                if (r.$type) {
                    e._implementation = r;
                }
                else {
                    if (e.i.setNativeElement) {
                        e.i.setNativeElement(r);
                    }
                }
                r.externalObject = e;
            }
            return r.externalObject;
        },
        set: function (v) {
            v == null ? this.i.markerStyle = null : this.i.markerStyle = v.i;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "markerTemplate", {
        /**
         * Gets or sets the series marker template.
        */
        get: function () {
            return this.i.markerTemplate;
        },
        set: function (v) {
            this.i.markerTemplate = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "markerType", {
        /**
         * Gets or sets the series marker type.
        */
        get: function () {
            return this.i.markerType;
        },
        set: function (v) {
            this.i.markerType = ensureEnum(MarkerType_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "markerThickness", {
        /**
         * Gets or sets the series marker thickness.
        */
        get: function () {
            return this.i.markerThickness;
        },
        set: function (v) {
            this.i.markerThickness = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxStackedSeriesCreatedEventArgs.prototype, "lineCap", {
        get: function () {
            return this.i.lineCap;
        },
        set: function (v) {
            this.i.lineCap = ensureEnum(PenLineCap_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    return IgxStackedSeriesCreatedEventArgs;
}());
export { IgxStackedSeriesCreatedEventArgs };
