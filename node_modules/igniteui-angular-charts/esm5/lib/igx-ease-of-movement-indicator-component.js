import { __extends } from "tslib";
import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { EaseOfMovementIndicator } from "./EaseOfMovementIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent Ease of Movement indicator series.
 * The ease of movement indicator by Richard W. Arms, Jr relates the price change of an asset to
 * its volume. Normally smoothed with a moving average.
 * Default required members: Low, High, Volume
*
* The ease of movment indicator is used to analyze relationships between a price changes and volume. One would usually plot this in a separate chart below the main price chart. It can be added to a chart like this:
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-ordinal-time-x-axis
*     dateTimeMemberPath="TimeStamp"
*     #xAxis
*     >
*     </igx-ordinal-time-x-axis>
*     <igx-numeric-y-axis
*     #yAxis>
*     </igx-numeric-y-axis>
*
*     <igx-ease-of-movement-indicator
*     [xAxis]="xAxis"
*     [yAxis]="yAxis"
*     highMemberPath="High"
*     lowMemberPath="Low"
*     volumeMemberPath="Volume">
*     </igx-ease-of-movement-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxEaseOfMovementIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.highMemberPath = "High";
* series.lowMemberPath = "Low";
* series.volumeMemberPath = "Volume";
* series.dataSource = this.data;
* this.chart.series.add(series);
* ```
*/
var IgxEaseOfMovementIndicatorComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxEaseOfMovementIndicatorComponent, _super);
    function IgxEaseOfMovementIndicatorComponent() {
        return _super.call(this) || this;
    }
    IgxEaseOfMovementIndicatorComponent.prototype.createImplementation = function () {
        return new EaseOfMovementIndicator();
    };
    Object.defineProperty(IgxEaseOfMovementIndicatorComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxEaseOfMovementIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxEaseOfMovementIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxEaseOfMovementIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxEaseOfMovementIndicatorComponent, selector: "igx-ease-of-movement-indicator", providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxEaseOfMovementIndicatorComponent;
}(IgxStrategyBasedIndicatorComponent));
export { IgxEaseOfMovementIndicatorComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxEaseOfMovementIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-ease-of-movement-indicator',
                    template: "",
                    providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxEaseOfMovementIndicatorComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
