import { __extends } from "tslib";
import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxScatterBaseComponent } from "./igx-scatter-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ScatterSplineSeries } from "./ScatterSplineSeries";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent scatter spline series
*/
var IgxScatterSplineSeriesComponent = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(IgxScatterSplineSeriesComponent, _super);
    function IgxScatterSplineSeriesComponent() {
        return _super.call(this) || this;
    }
    IgxScatterSplineSeriesComponent.prototype.createImplementation = function () {
        return new ScatterSplineSeries();
    };
    Object.defineProperty(IgxScatterSplineSeriesComponent.prototype, "i", {
        /**
                                     * @hidden
                                     */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxScatterSplineSeriesComponent.prototype, "isSpline", {
        /**
         * Gets whether the current series shows a spline shape.
        */
        get: function () {
            return this.i.fy;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxScatterSplineSeriesComponent.prototype, "stiffness", {
        /**
         * Gets or sets the Stiffness property.
        */
        get: function () {
            return this.i.acf;
        },
        set: function (v) {
            this.i.acf = +v;
        },
        enumerable: false,
        configurable: true
    });
    IgxScatterSplineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxScatterSplineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxScatterSplineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxScatterSplineSeriesComponent, selector: "igx-scatter-spline-series", inputs: { stiffness: "stiffness" }, providers: [{ provide: IgxScatterBaseComponent, useExisting: forwardRef(function () { return IgxScatterSplineSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxScatterSplineSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxScatterSplineSeriesComponent; }) }], usesInheritance: true, ngImport: i0, template: "", isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxScatterSplineSeriesComponent;
}(IgxScatterBaseComponent));
export { IgxScatterSplineSeriesComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxScatterSplineSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-scatter-spline-series',
                    template: "",
                    providers: [{ provide: IgxScatterBaseComponent, useExisting: forwardRef(function () { return IgxScatterSplineSeriesComponent; }) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(function () { return IgxScatterSplineSeriesComponent; }) }, { provide: IgxSeriesComponent, useExisting: forwardRef(function () { return IgxScatterSplineSeriesComponent; }) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { stiffness: [{
                type: Input
            }] } });
