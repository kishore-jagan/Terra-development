import { SeriesMatcher as SeriesMatcher_internal } from "./SeriesMatcher";
var IgxSeriesMatcher = /** @class */ /*@__PURE__*/ (function () {
    function IgxSeriesMatcher() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    IgxSeriesMatcher.prototype.createImplementation = function () {
        return new SeriesMatcher_internal();
    };
    Object.defineProperty(IgxSeriesMatcher.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxSeriesMatcher.prototype.onImplementationCreated = function () {
    };
    IgxSeriesMatcher.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgxSeriesMatcher.prototype, "name", {
        /**
         * If set, tries to match a series based on its name.
        */
        get: function () {
            return this.i.e;
        },
        set: function (v) {
            this.i.e = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxSeriesMatcher.prototype, "title", {
        /**
         * If set, tries to match a series based on its title.
        */
        get: function () {
            return this.i.f;
        },
        set: function (v) {
            this.i.f = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxSeriesMatcher.prototype, "index", {
        /**
         * If set, tries to match a series based on index
        */
        get: function () {
            return this.i.b;
        },
        set: function (v) {
            this.i.b = +v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxSeriesMatcher.prototype, "memberPathType", {
        /**
         * Combined with MemberPath allows you to select a series by member path.
        */
        get: function () {
            return this.i.d;
        },
        set: function (v) {
            this.i.d = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxSeriesMatcher.prototype, "memberPath", {
        /**
         * If set, tries to match a series based on a member path, combined with MemberPathType.
        */
        get: function () {
            return this.i.c;
        },
        set: function (v) {
            this.i.c = v;
        },
        enumerable: false,
        configurable: true
    });
    IgxSeriesMatcher.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    };
    return IgxSeriesMatcher;
}());
export { IgxSeriesMatcher };
