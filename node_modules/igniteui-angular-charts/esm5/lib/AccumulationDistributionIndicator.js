/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { AccumulationDistributionIndicatorStrategy } from "./AccumulationDistributionIndicatorStrategy";
import { markType } from "igniteui-angular-core";
/**
 * @hidden
 */
var AccumulationDistributionIndicator = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(AccumulationDistributionIndicator, _super);
    function AccumulationDistributionIndicator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AccumulationDistributionIndicator.prototype.bi = function () {
        return new AccumulationDistributionIndicator();
    };
    AccumulationDistributionIndicator.prototype.get_abn = function () {
        return new AccumulationDistributionIndicatorStrategy();
    };
    Object.defineProperty(AccumulationDistributionIndicator.prototype, "abn", {
        get: function () {
            return this.get_abn();
        },
        enumerable: false,
        configurable: true
    });
    AccumulationDistributionIndicator.prototype.get_ab0 = function () {
        return AccumulationDistributionIndicator.$;
    };
    Object.defineProperty(AccumulationDistributionIndicator.prototype, "ab0", {
        get: function () {
            return this.get_ab0();
        },
        enumerable: false,
        configurable: true
    });
    AccumulationDistributionIndicator.$t = markType(AccumulationDistributionIndicator, 'AccumulationDistributionIndicator', StrategyBasedIndicator.$);
    return AccumulationDistributionIndicator;
}(StrategyBasedIndicator));
export { AccumulationDistributionIndicator };
