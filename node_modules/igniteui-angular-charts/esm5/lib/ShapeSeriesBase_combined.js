/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends, __values } from "tslib";
import { Series } from "./Series";
import { DependencyProperty } from "igniteui-angular-core";
import { HighlightingInfo } from "igniteui-angular-core";
import { ShapeItemSearchMode_$type } from "./ShapeItemSearchMode";
import { IEnumerable$1_$type, enumGetBox, Number_$type, Point_$type, String_$type, typeCast, runOn, delegateCombine, fromEnum, Array_$type, markType, markDep } from "igniteui-angular-core";
import { NumericXAxis } from "./NumericXAxis";
import { NumericYAxis } from "./NumericYAxis";
import { List$1 } from "igniteui-angular-core";
import { Rect } from "igniteui-angular-core";
import { StyleShapeEventArgs } from "./StyleShapeEventArgs";
import { FrameworkElement } from "igniteui-angular-core";
import { IFastItemsSource_$type } from "igniteui-angular-core";
import { DataContext } from "igniteui-angular-core";
import { Tuple$2 } from "igniteui-angular-core";
import { ShapeHitRegion } from "./ShapeHitRegion";
import { RectUtil } from "igniteui-angular-core";
import { Tuple$3 } from "igniteui-angular-core";
import { GeometryUtil } from "igniteui-angular-core";
import { AssigningShapeStyleEventArgs } from "./AssigningShapeStyleEventArgs";
import { AssigningShapeMarkerStyleEventArgs } from "./AssigningShapeMarkerStyleEventArgs";
import { SeriesLayerPropertyOverlay } from "./SeriesLayerPropertyOverlay";
import { PointCollectionUtil } from "igniteui-angular-core";
import { FlattenedShape } from "./FlattenedShape";
import { SeriesView } from "./SeriesView";
import { Clipper } from "igniteui-angular-core";
import { ScalerParams } from "./ScalerParams";
import { Dictionary$2 } from "igniteui-angular-core";
import { SeriesRenderManager } from "./SeriesRenderManager";
import { PolySimplification } from "igniteui-angular-core";
import { DefaultFlattener } from "./DefaultFlattener";
import { AxisRange } from "./AxisRange";
import { Style } from "igniteui-angular-core";
import { PropertyMetadata } from "igniteui-angular-core";
import { boxArray$1 } from "igniteui-angular-core";
import { InvalidOperationException } from "igniteui-angular-core";
import { isNaN_, truncate } from "igniteui-angular-core";
import { FastItemObjectColumn } from "igniteui-angular-core";
import { Path } from "igniteui-angular-core";
import { Pool$1 } from "igniteui-angular-core";
import { PointCollection } from "igniteui-angular-core";
import { PathGeometry } from "igniteui-angular-core";
import { PolyLineSegment } from "igniteui-angular-core";
import { PathFigure } from "igniteui-angular-core";
import { PolygonUtil } from "igniteui-angular-core";
/**
 * @hidden
 */
var ShapeSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ShapeSeriesBase, _super);
    function ShapeSeriesBase() {
        var _this = _super.call(this) || this;
        _this.xj = false;
        _this.xi = false;
        _this.xe = null;
        _this.xf = null;
        _this.w5 = 1;
        _this.wu = null;
        _this.wv = null;
        _this.assigningShapeStyle = null;
        _this.assigningShapeMarkerStyle = null;
        _this.w9 = null;
        _this.xg = null;
        _this.w1 = null;
        _this.w3 = null;
        _this.x3 = 0;
        _this.xz = null;
        _this.wr = null;
        _this.wt = null;
        _this.ws = null;
        _this.wq = null;
        _this.ze = null;
        _this.x6 = 0;
        _this.styleShape = null;
        _this.w9 = new ShapeSeriesRenderManager();
        FastItemObjectColumn.m();
        _this.x6 = _this.x5;
        _this.ze = Rect.empty;
        return _this;
    }
    ShapeSeriesBase.prototype.o0 = function () {
        _super.prototype.o0.call(this);
        this.w2 = null;
        this.w4 = null;
    };
    ShapeSeriesBase.prototype.ai = function () {
        return [this.w2, this.w4];
    };
    ShapeSeriesBase.prototype.ko = function (a, b) {
        var c = this.nb(b);
        if (c == ShapeSeriesBase.$$p[6]) {
            return this.kp(a, b, this.yl);
        }
        return null;
    };
    ShapeSeriesBase.prototype.mb = function (a) {
        var b = this.nb(a);
        if (b == ShapeSeriesBase.$$p[6]) {
            return this.yl;
        }
        return _super.prototype.mb.call(this, a);
    };
    ShapeSeriesBase.prototype.get_fc = function () {
        return true;
    };
    ShapeSeriesBase.prototype.get_eb = function () {
        return true;
    };
    ShapeSeriesBase.prototype.xc = function (a, b, c) {
        if (this.dl == null) {
            return null;
        }
        var d = this.v1(b);
        var e = this.xa.c2(d, false);
        var f = -1;
        if (e == null) {
            if (a != null) {
                f = this.dl.indexOf(a);
            }
            else {
                return null;
            }
        }
        else if (e.dataContext != null) {
            f = e.dataContext.c;
        }
        if (f == -1) {
            return null;
        }
        var g = new HighlightingInfo();
        g.i = this;
        g.g = f;
        g.f = f;
        g.c = false;
        if (c != null && c.g == g.g && c.f == g.f) {
            return c;
        }
        return g;
    };
    ShapeSeriesBase.prototype.xd = function (a, b, c) {
        if (this.dl == null) {
            return null;
        }
        var d = this.xa.b4(this.v1(b));
        var e = -1;
        if (d == null) {
            if (a != null) {
                e = this.dl.indexOf(a);
            }
            else {
                return null;
            }
        }
        else {
            e = d.ak;
        }
        if (e == -1) {
            return null;
        }
        var f = new HighlightingInfo();
        f.i = this;
        f.g = e;
        f.f = e;
        f.c = false;
        f.d = true;
        if (c != null && c.g == f.g && c.f == f.f) {
            return c;
        }
        return f;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "w6", {
        get: function () {
            return this.w5;
        },
        set: function (a) {
            var b = this.w5;
            this.w5 = a;
            if (b != this.w5) {
                this.raisePropertyChanged("ActualItemSearchMode", enumGetBox(ShapeItemSearchMode_$type, b), enumGetBox(ShapeItemSearchMode_$type, this.w5));
            }
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.w7 = function () {
        if (this.w8 != 0) {
            return this.w8;
        }
        return 1;
    };
    ShapeSeriesBase.prototype.ip = function (a) {
        switch (this.w6) {
            case 1: return this.yr(a).c;
            case 2: return this.x4(a);
            case 3: return this.x4(a);
        }
        return -1;
    };
    ShapeSeriesBase.prototype.yr = function (a) {
        var b = this.v1(a);
        var c = { $type: Point_$type, x: NaN, y: NaN };
        var d = this.xa.ce;
        if (d == null) {
            return new Tuple$2(Number_$type, Point_$type, -1, c);
        }
        var e = this.xa.b5(b, false, !this.xk);
        if (e != null) {
            c = RectUtil.l(e.d);
            return new Tuple$2(Number_$type, Point_$type, e.b, c);
        }
        var f = b.x;
        var g = b.y;
        if (this.dl == null || this.w2 == null || this.w4 == null || this.xz == null) {
            return new Tuple$2(Number_$type, Point_$type, -1, c);
        }
        if (this.dl.count > this.x9) {
            return new Tuple$2(Number_$type, Point_$type, -1, c);
        }
        var h = 1.7976931348623157E+308;
        var i = -1;
        for (var j = 0; j < d.count; j++) {
            var k = d._inner[j].d;
            var l = RectUtil.g(k, b);
            if (l < h) {
                h = l;
                i = d._inner[j].b;
                c = RectUtil.l(d._inner[j].d);
            }
        }
        return new Tuple$2(Number_$type, Point_$type, i, c);
    };
    ShapeSeriesBase.prototype.yq = function (a) {
        var b = this.v1(a);
        var c = b.x;
        var d = b.y;
        var e = { $type: Point_$type, x: NaN, y: NaN };
        if (this.dl == null || this.w2 == null || this.w4 == null || this.xz == null) {
            return new Tuple$3(Number_$type, Point_$type, Point_$type, -1, e, e);
        }
        if (this.dl.count > this.x9) {
            return new Tuple$3(Number_$type, Point_$type, Point_$type, -1, e, e);
        }
        var f = 1.7976931348623157E+308;
        var g = this.xa.ce;
        if (g == null) {
            return new Tuple$3(Number_$type, Point_$type, Point_$type, -1, e, e);
        }
        var h = this.xa.b5(b, false, !this.xk);
        if (h != null) {
            var i = RectUtil.l(h.d);
            var j = this.yp(b, h.a, this.xk);
            return new Tuple$3(Number_$type, Point_$type, Point_$type, h.b, j.d, i);
        }
        for (var k = 0; k < g.count; k++) {
            var l = g._inner[k].d;
            var m = RectUtil.g(l, b);
            var n = (l.width * l.width) + (l.height * l.height) + m;
            if (n <= f) {
                f = n;
            }
        }
        var o = 1.7976931348623157E+308;
        var p = -1;
        for (var q = 0; q < g.count; q++) {
            var r = g._inner[q].d;
            var s = RectUtil.g(r, b);
            if (s < f) {
                var t = this.yp(b, g._inner[q].a, this.xk);
                if (t.c < o) {
                    o = t.c;
                    e = t.d;
                    p = q;
                }
            }
        }
        if (p >= 0) {
            return new Tuple$3(Number_$type, Point_$type, Point_$type, g._inner[p].b, e, RectUtil.l(g._inner[p].d));
        }
        return new Tuple$3(Number_$type, Point_$type, Point_$type, -1, e, e);
    };
    ShapeSeriesBase.prototype.get_xk = function () {
        return true;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "xk", {
        get: function () {
            return this.get_xk();
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.yp = function (a, b, c) {
        var d = { $type: Point_$type, x: NaN, y: NaN };
        var e = 1.7976931348623157E+308;
        var f = { $type: Point_$type, x: NaN, y: NaN };
        var g = false;
        var h = -1;
        for (var i = 0; i < b.count; i++) {
            var j = b._inner[i];
            if (i >= 1) {
                var k = GeometryUtil.g(a, d, j);
                if (k < e) {
                    e = k;
                    g = true;
                    h = i;
                }
            }
            d = j;
        }
        if (c) {
            var l = b._inner[0];
            var m = GeometryUtil.g(a, d, l);
            if (m < e) {
                e = m;
                var n = GeometryUtil.l(a, d, l);
                f = { $type: Point_$type, x: d.x + (l.x - d.x) * n, y: d.y + (l.y - d.y) * n };
                return new Tuple$2(Number_$type, Point_$type, e, f);
            }
        }
        if (g) {
            var o = b._inner[h - 1];
            var p = b._inner[h];
            var q = GeometryUtil.l(a, o, p);
            f = { $type: Point_$type, x: o.x + (p.x - o.x) * q, y: o.y + (p.y - o.y) * q };
        }
        return new Tuple$2(Number_$type, Point_$type, e, f);
    };
    ShapeSeriesBase.prototype.x4 = function (a) {
        return this.yq(a).c;
    };
    ShapeSeriesBase.prototype.v6 = function (a, b, c) {
        if (this.w2 == null || this.w4 == null || this.xz == null) {
            return { $type: Point_$type, x: NaN, y: NaN };
        }
        switch (this.w6) {
            case 1:
                var d = this.yr(a);
                return d.d;
            case 2:
                var e = this.yq(a);
                return e.e;
            case 3:
                var f = this.yq(a);
                return f.d;
        }
        return { $type: Point_$type, x: NaN, y: NaN };
    };
    ShapeSeriesBase.prototype.kl = function (a) {
        var b = this.j1(a);
        if (this.dl != null && b >= 0 && b < this.dl.count) {
            return this.dl.item(b);
        }
        return null;
    };
    ShapeSeriesBase.prototype.xb = function (a, b, c) {
        var d = new HighlightingInfo();
        d.i = this;
        d.g = 0;
        d.f = this.dl.count - 1;
        d.c = true;
        if (c != null && c.g == d.g && c.f == d.f) {
            return c;
        }
        return d;
    };
    ShapeSeriesBase.prototype.de = function (a, b, c) {
        if (this.eb && this.fx(this.bv) && !c) {
            var d = this.xc(a, b, this.xe);
            this.xe = d;
            return d;
        }
        else {
            var e = this.xb(a, b, this.xe);
            this.xe = e;
            return e;
        }
    };
    ShapeSeriesBase.prototype.df = function (a, b, c) {
        if (this.fx(this.bv) && !c) {
            var d = this.xd(a, b, this.xf);
            this.xf = d;
            return d;
        }
        else {
            var e = this.xb(a, b, this.xf);
            e.d = true;
            this.xf = e;
            return e;
        }
    };
    ShapeSeriesBase.prototype.xx = function () {
        return (this.assigningShapeStyle != null && this.xj) || this.d0 || (this.bv != 1) || (this.cn != 1) || (this.cm != 1);
    };
    ShapeSeriesBase.prototype.xw = function () {
        return (this.assigningShapeMarkerStyle != null && this.xi) || this.d0 || (this.bv != 1) || (this.cn != 1) || (this.cm != 1);
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "yc", {
        get: function () {
            return this.c(ShapeSeriesBase.y4);
        },
        set: function (a) {
            this.h(ShapeSeriesBase.y4, a);
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.f9 = function () {
        return this.highlightedItemsSource != null || this.yc != null;
    };
    ShapeSeriesBase.prototype.hr = function () {
        var a = _super.prototype.hr.call(this);
        {
            var b = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.ad = "ShapeMemberPath";
                $ret.p = true;
                $ret.y = "HighlightedShapeMemberPath";
                $ret.q = true;
                return $ret;
            })());
            b.valueResolving = delegateCombine(b.valueResolving, runOn(this, this.yt));
            a.add(b);
        }
        {
            var c = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Brush";
                $ret.p = true;
                $ret.y = "ActualBrush";
                $ret.q = true;
                return $ret;
            })());
            c.valueResolving = delegateCombine(c.valueResolving, runOn(this, this.rv));
            a.add(c);
        }
        {
            var d = ((function () {
                var $ret = new SeriesLayerPropertyOverlay();
                $ret.r = true;
                $ret.ad = "Outline";
                $ret.p = true;
                $ret.y = "ActualOutline";
                $ret.q = true;
                return $ret;
            })());
            d.valueResolving = delegateCombine(d.valueResolving, runOn(this, this.rv));
            a.add(d);
        }
        return a;
    };
    ShapeSeriesBase.prototype.yt = function (a, b) {
        if (this.yc != null) {
            b.value = this.yc;
            return;
        }
        b.value = this.yl;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "xh", {
        get: function () {
            return this.xg;
        },
        set: function (a) {
            var b = this.xh != a;
            if (b) {
                var c = this.xh;
                this.xg = a;
                this.raisePropertyChanged("ShapeColumn", c, this.xh);
            }
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.xo = function (array_) {
        var a = (Array.isArray(array_));
        return a;
    };
    ShapeSeriesBase.xs = function (a) {
        if (a == null) {
            return true;
        }
        var val_ = a;
        return (val_ == undefined);
    };
    ShapeSeriesBase.prototype.convertToListList = function (a) {
        if (a == null) {
            return null;
        }
        var b = new List$1(List$1.$.specialize(Point_$type), 0);
        var c;
        var curr_;
        var d;
        var e;
        var f = false;
        var g = false;
        for (var h = 0; h < a.length; h++) {
            c = a[h];
            if (c == null) {
                continue;
            }
            var i = new List$1(Point_$type, 0);
            for (var j = 0; j < c.length; j++) {
                curr_ = c[j];
                if (f) {
                    d = (curr_.X);
                    e = (curr_.Y);
                }
                else {
                    d = (curr_.x);
                    e = (curr_.y);
                }
                if (!g) {
                    if ((isNaN_(d) || ShapeSeriesBase.xs(d)) && (isNaN_(e) || ShapeSeriesBase.xs(e))) {
                        d = (curr_.X);
                        e = (curr_.Y);
                        if (!isNaN_(d) && !ShapeSeriesBase.xs(d) && !isNaN_(e) && !ShapeSeriesBase.xs(e)) {
                            g = true;
                            f = true;
                        }
                    }
                    else {
                        g = true;
                    }
                }
                i.add({ $type: Point_$type, x: d, y: e });
            }
            b.add(i);
        }
        return b;
    };
    ShapeSeriesBase.prototype.dk = function (a) {
        if (this.dl != null && this.xo(this.itemsSource) && a != null && a.split('!').length != 2) {
            if (this.coercionMethods == null) {
                this.coercionMethods = {};
            }
            var methods_ = this.coercionMethods;
            methods_.convertToListList = this.convertToListList;
            a += "!convertToListList";
        }
        return _super.prototype.dk.call(this, a);
    };
    ShapeSeriesBase.prototype.q5 = function (a, b, c, d) {
        _super.prototype.q5.call(this, a, b, c, d);
        var e = false;
        var f = false;
        switch (b) {
            case ShapeSeriesBase.$$p[2]:
                this.w6 = this.w7();
                break;
            case "FastItemsSource":
                var g = typeCast(IFastItemsSource_$type, c);
                if (g != null) {
                    g.deregisterColumn(this.xh);
                    this.xh = null;
                }
                var h = typeCast(IFastItemsSource_$type, d);
                if (h != null) {
                    this.xh = this.dk(this.yl);
                }
                e = this.w2 != null && !this.w2.c1();
                f = this.w4 != null && !this.w4.c1();
                if (e || f) {
                    this.rn(this.ge && c != null);
                }
                break;
            case ShapeSeriesBase.$$p[6]:
                if (this.dl != null) {
                    this.dl.deregisterColumn(this.xh);
                    this.xh = this.dk(this.yl);
                }
                break;
            case "ShapeColumn":
                this.y1();
                e = this.w2 != null && !this.w2.c1();
                f = this.w4 != null && !this.w4.c1();
                if (e || f) {
                    this.rn(this.ge && this.d5);
                }
                this.qh();
                break;
            case ShapeSeriesBase.$$p[7]:
            case ShapeSeriesBase.$$p[8]:
                this.w1 = this.w2;
                this.w3 = this.w4;
                var i = c;
                var j = d;
                this.y2(i);
                this.yu(j);
                if ((j != null && !j.c1()) || (j == null && i != null)) {
                    this.rn(false);
                }
                this.qh();
                break;
            case "ActualResolution":
                this.x3 = this.ib;
                this.qh();
                break;
            case "ActualBrush":
                this.rn(false);
                break;
            case ShapeSeriesBase.$$p[5]:
                this.x6 = this.x5;
                this.rn(false);
                this.qh();
                break;
            case "ActualThickness":
                this.rn(false);
                this.qh();
                break;
            case ShapeSeriesBase.$$p[1]:
                this.xj = this.xv();
                this.rn(false);
                break;
            case ShapeSeriesBase.$$p[0]:
                this.xi = this.xu();
                this.rn(false);
                break;
        }
    };
    ShapeSeriesBase.prototype.xv = function () {
        return this.xr;
    };
    ShapeSeriesBase.prototype.xu = function () {
        return this.xq;
    };
    ShapeSeriesBase.prototype.xm = function (a) {
        if (typeCast(NumericYAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ShapeSeriesBase.prototype.xl = function (a) {
        if (typeCast(NumericXAxis.$, a) !== null) {
            return true;
        }
        return false;
    };
    ShapeSeriesBase.prototype.y1 = function () {
        this.xz = null;
        if (this.xh == null) {
            return;
        }
        this.xz = new List$1(Rect.$, 2, this.xh.count);
        for (var a = 0; a < this.xh.count; a++) {
            this.xz.add(PointCollectionUtil.j(this.xh.item(a)));
        }
    };
    ShapeSeriesBase.prototype.zf = function (a) {
        if (typeCast(IEnumerable$1_$type.specialize(IEnumerable$1_$type.specialize(Point_$type)), a) !== null) {
            return PointCollectionUtil.h(a);
        }
        else if (typeCast(IEnumerable$1_$type.specialize(Point_$type), a) !== null) {
            return PointCollectionUtil.g(a);
        }
        return Rect.empty;
    };
    ShapeSeriesBase.prototype.x1 = function (a, b, c, d, e, f, g) {
        var e_1, _a;
        return this.x2(a, b, c, d, e, f, g);
        if (typeCast(List$1.$.specialize(List$1.$.specialize(Point_$type)), c) !== null) {
            return this.x2(a, b, c, d, e, f, g);
        }
        else if (typeCast(IEnumerable$1_$type.specialize(IEnumerable$1_$type.specialize(Point_$type)), c) !== null) {
            var h = c;
            var i = new List$1(FlattenedShape.$, 0);
            var j = null;
            try {
                for (var _b = __values(fromEnum(h)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var k = _c.value;
                    j = this.w0(a, b, PointCollectionUtil.b(k), d, e, f, g);
                    if (j == null) {
                        continue;
                    }
                    i.add(j);
                }
            }
            catch (e_1_1) {
                e_1 = { error: e_1_1 };
            }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return))
                        _a.call(_b);
                }
                finally {
                    if (e_1)
                        throw e_1.error;
                }
            }
            return i;
        }
        else if (typeCast(IEnumerable$1_$type.specialize(Point_$type), c) !== null) {
            var l = c;
            var m = this.w0(a, b, PointCollectionUtil.b(l), d, e, f, g);
            var n = new List$1(FlattenedShape.$, 0);
            if (m != null) {
                n.add(m);
            }
            return n;
        }
        else {
            throw new InvalidOperationException(1, "Unrecognized data in ShapeColumn");
        }
    };
    ShapeSeriesBase.prototype.get_xp = function () {
        return true;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "xp", {
        get: function () {
            return this.get_xp();
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.xy = function () {
        return false;
    };
    ShapeSeriesBase.prototype.ro = function (a) {
        this.y0(this.ct);
    };
    ShapeSeriesBase.prototype.rm = function (a, b, c, d, e) {
        _super.prototype.rm.call(this, a, b, c, d, e);
        var f = this.a9.a$j.item(d);
        var g = f;
        f.a3(c);
        if (this.d3(f)) {
            return;
        }
        this.y0(f);
    };
    ShapeSeriesBase.prototype.y0 = function (a) {
        var _this = this;
        if (this.d3(a)) {
            return;
        }
        var b;
        var c;
        var d = a;
        var e = a.getViewInfo(c, b);
        c = e.p0;
        b = e.p1;
        if (c.width < 1 || c.height < 1 || this.xh == null) {
            return;
        }
        var f = this.w2;
        var g = this.w4;
        var h = this.getEffectiveViewport1(a);
        var i = new ScalerParams(1, b, c, f.ch);
        i.c = h;
        var j = new ScalerParams(1, b, c, g.ch);
        j.c = h;
        if (!this.gp) {
            d.cu();
            var k = new Rect(0, 0, 0, 0, 0);
            var l = void 0;
            var m = void 0;
            var n = void 0;
            var o = void 0;
            var p = this.xh.count;
            if (this.wt == null || this.wt.length != p) {
                this.wt = new Array(p);
                this.wr = new Array(p);
                this.ws = new Array(p);
                this.wq = new Array(p);
            }
            var q = this.wt;
            var r = this.wr;
            var s = this.ws;
            var t = this.wq;
            var u = void 0;
            for (var v = 0; v < p; v++) {
                u = this.xz._inner[v];
                q[v] = u.top;
                r[v] = u.left;
                s[v] = u.right;
                t[v] = u.bottom;
            }
            this.w1.ho(boxArray$1(r), 0, r.length, i);
            this.w1.ho(boxArray$1(s), 0, s.length, i);
            this.w3.ho(boxArray$1(q), 0, q.length, j);
            this.w3.ho(boxArray$1(t), 0, t.length, j);
            d.cv(r, q, s, t);
            var w = this.xh;
            var x = this.dl;
            this.y3(d);
            var y = c.left;
            var z = c.right;
            var aa = c.top;
            var ab = c.bottom;
            var ac = null;
            if (this.ze.isEmpty) {
                ac = null;
            }
            else {
                ac = new Clipper(1, this.ze.left, this.ze.bottom, this.ze.right, this.ze.top, this.xp);
            }
            var ad = this.xy();
            if (ad) {
                d.cc.clear();
            }
            var ae = false;
            var af = true;
            var ag = 0;
            if (this.c9 != null) {
                if (this.c9.fz()) {
                    var ah = this.c9.mt(b, i);
                    ae = ah.c;
                    ag = ah.d;
                }
            }
            var ai = void 0;
            for (var aj = 0; aj < p; aj++) {
                n = r[aj];
                l = q[aj];
                m = t[aj];
                o = s[aj];
                k.x = Math.min(n, o);
                k.y = Math.min(l, m);
                k.width = Math.max(n, o) - k.x;
                k.height = Math.max(l, m) - k.y;
                if (k.intersectsWith(c)) {
                    if (k.x < y || k.y < aa || k.x > z || k.y > ab) {
                        ai = ac;
                    }
                    else {
                        ai = null;
                    }
                    var ak = this.x1(a, ai, w.item(aj), i, j, 0, ag);
                    if (ad) {
                        ShapeSeriesBase.yz(d, aj, ak);
                    }
                    d.ci(aj, x.item(aj), k, ak);
                }
                else if (ae) {
                    k.x = k.x + ag;
                    if (k.intersectsWith(c)) {
                        if (k.x < y || k.y < aa || k.x > z || k.y > ab) {
                            ai = ac;
                        }
                        else {
                            ai = null;
                        }
                        var al = this.x1(a, ai, w.item(aj), i, j, ag, ag);
                        if (ad) {
                            ShapeSeriesBase.yz(d, aj, al);
                        }
                        d.ci(aj, x.item(aj), k, al);
                    }
                }
            }
            d.ct();
        }
        var am = this.xx();
        this.w9.az(this, this.xx(), runOn(this, this.ww));
        var an = false;
        var ao = this.w9.b;
        if (ao != null) {
            an = true;
        }
        var ap = a.q;
        var aq = this.fw;
        var ar = d.ca;
        d.cp(function (as) {
            var at = as.dataContext != null ? as.dataContext.item : null;
            var au = as.dataContext != null ? as.dataContext.c : -1;
            d.cm(as, at, am);
            if (an) {
                _this.yw(as, aq, au, _this.xh.count, ap, ar);
            }
            else {
                if (ar) {
                    {
                        _this.w9.a1(as, _this.h9, ar);
                    }
                }
            }
            {
                _this.w9.ad(as, false, false, false, false);
            }
        });
    };
    ShapeSeriesBase.prototype.yw = function (a, b, c, d, e, f) {
        var g = this.bv != 1;
        var h = this.cn != 1;
        var i = this.cm != 1;
        this.w9.a0(this.w9.b, c, d, false);
        {
            this.w9.a1(a, this.h9, f);
        }
        var j = this.w9.ax;
        var k = null;
        var l = null;
        var m = null;
        var n = this.dl;
        if (g && this.c9 != null) {
            k = this.c9.dj.getHighlightingInfo(this, n, j.z, j.y, false);
            j.c = k;
        }
        if (h && this.c9 != null) {
            l = this.c9.dk.getHighlightingInfo(this, n, j.z, j.y, false);
            if (l == null && this.bl != null) {
                l = this.c9.dk.getHighlightingInfo(this.bl, this.bl.dl, j.z, j.y, false);
            }
            j.d = l;
        }
        if (i && this.c9 != null) {
            m = this.c9.di.getHighlightingInfo(this, n, j.z, j.y, false);
            j.b = m;
        }
        j.h = e;
        this.yy(j);
        this.w9.z(this, k, l, m, e, g, h, i, false);
    };
    ShapeSeriesBase.prototype.yv = function (a, b, c) {
        var d = this.bv != 1;
        var e = this.cn != 1;
        var f = this.cm != 1;
        this.w9.a0(this.w9.d, a, b, true);
        this.w9.aa(this.h9);
        var g = this.w9.aw;
        var h = null;
        var i = null;
        var j = null;
        var k = this.dl;
        var l = null;
        var m = null;
        var n = null;
        if (d && this.c9 != null) {
            h = this.c9.dj.getHighlightingInfo(this, k, g.z, g.y, true);
            if (this.c9.dj.isCrossContextHighlight(this)) {
                l = this.c9.dj.getHighlightingInfo(this, k, g.z, g.y, true);
            }
            g.c = h;
        }
        if (e && this.c9 != null) {
            i = this.c9.dk.getHighlightingInfo(this, k, g.z, g.y, true);
            if (i == null && this.bl != null) {
                i = this.c9.dk.getHighlightingInfo(this.bl, this.bl.dl, g.z, g.y, true);
            }
            if (this.c9.dk.isCrossContextHighlight(this)) {
                m = this.c9.dk.getHighlightingInfo(this, k, g.z, g.y, true);
            }
            g.d = i;
        }
        if (f && this.c9 != null) {
            j = this.c9.di.getHighlightingInfo(this, k, g.z, g.y, true);
            if (this.c9.di.isCrossContextHighlight(this)) {
                n = this.c9.di.getHighlightingInfo(this, k, g.z, g.y, true);
            }
            g.b = i;
        }
        g.h = c;
        this.yx(g);
        this.w9.y(this, h, i, j, c, d, e, f, g.v, this.c9.dj.totalHighWaterMark, g.x, this.c9.dk.totalHighWaterMark, g.t, this.c9.di.totalHighWaterMark);
    };
    ShapeSeriesBase.prototype.yy = function (a) {
        if (this.assigningShapeStyle != null && this.xj) {
            this.assigningShapeStyle(this, a);
        }
    };
    ShapeSeriesBase.prototype.yx = function (a) {
        if (this.assigningShapeMarkerStyle != null && this.xi) {
            this.assigningShapeMarkerStyle(this, a);
        }
    };
    ShapeSeriesBase.prototype.ww = function (a, b) {
        return this.wx(a, b);
    };
    ShapeSeriesBase.prototype.wx = function (a, b) {
        if (b < a || a < 0 || a > this.xh.count || b < 0 || b > this.xh.count) {
            return null;
        }
        var c = new Array((b - a) + 1);
        for (var d = a; d <= b; d++) {
            var e = d;
            c[d - a] = this.dl.item(d);
        }
        return c;
    };
    ShapeSeriesBase.yz = function (a, b, c) {
        var d = 0;
        var e = null;
        for (var f = 0; f < c.count; f++) {
            var g = c._inner[f];
            var h = g.b.width * g.b.height;
            if (h > d) {
                d = h;
                e = g;
            }
        }
        a.cc.addItem(b, e);
    };
    ShapeSeriesBase.prototype.p6 = function () {
        _super.prototype.p6.call(this);
        if (this.w2 != null) {
            this.w2.h8();
        }
        if (this.w4 != null) {
            this.w4.h8();
        }
    };
    ShapeSeriesBase.prototype.sl = function (a, b) {
        this.rn(false);
    };
    ShapeSeriesBase.prototype.sk = function (a, b) {
        this.rn(false);
    };
    ShapeSeriesBase.prototype.o9 = function (a, b, c, d) {
        _super.prototype.o9.call(this, a, b, c, d);
        switch (a) {
            case 3:
                if (d == this.yl) {
                    this.xz._inner[b] = this.zf(this.xh.item(b));
                }
                break;
            case 1:
                for (var e = b; e < b + c; e++) {
                    this.xz.insert(e, this.zf(this.xh.item(e)));
                }
                break;
            case 0:
                this.xz.v(b, c);
                break;
            case 2:
                for (var f = b; f < b + c; f++) {
                    this.xz._inner[f] = this.zf(this.xh.item(f));
                }
                break;
            case 4:
                this.y1();
                break;
        }
        this.rn(false);
    };
    ShapeSeriesBase.prototype.hc = function (a, b, c) {
        var d = true;
        if (!_super.prototype.hc.call(this, a, b, c) || (this.xt && this.xh == null) || b.isEmpty || a.isEmpty || this.w2 == null || this.w4 == null || this.w2.bi == null || this.w4.bi == null || this.w2.ly == this.w2.lx || this.w4.ly == this.w4.lx || this.xh == null || this.xh.count == 0 || this.xz == null || this.xz.count == 0 || this.xz.count != this.xh.count) {
            d = false;
        }
        return d;
    };
    ShapeSeriesBase.prototype.get_xt = function () {
        return true;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "xt", {
        get: function () {
            return this.get_xt();
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.qx = function (a) {
        _super.prototype.qx.call(this, a);
        this.xa = typeCast(ShapeSeriesViewBase.$, a);
    };
    ShapeSeriesBase.prototype.x2 = function (a, b, c, d, e, f, g) {
        var h = new List$1(FlattenedShape.$, 0);
        var i;
        var j = c.count;
        for (var k = 0; k < j; k++) {
            i = c._inner[k];
            var l = this.w0(a, b, i, d, e, f, g);
            if (l == null) {
                continue;
            }
            h.add(l);
        }
        return h;
    };
    ShapeSeriesBase.prototype.w0 = function (a, b, c, d, e, f, g) {
        var h = this.ys(c, d, e);
        var i = h.c;
        var j = h.d;
        var k = i.length;
        var l = 1.7976931348623157E+308;
        var m = 1.7976931348623157E+308;
        var n = -1.7976931348623157E+308;
        var o = -1.7976931348623157E+308;
        var p;
        var q;
        if (f != 0) {
            for (var r = 0; r < k; r++) {
                i[r] = i[r] + f;
            }
        }
        for (var s = 0; s < k; s++) {
            p = i[s];
            q = j[s];
            l = p < l ? p : l;
            m = q < m ? q : m;
            n = p > n ? p : n;
            o = q > o ? q : o;
        }
        var t = !(l > this.ze.right || n < this.ze.left || m > this.ze.bottom || o < this.ze.top);
        if (!t && f == 0 && g != 0) {
            if (g != 0) {
                for (var u = 0; u < k; u++) {
                    i[u] = i[u] + g;
                }
            }
            for (var v = 0; v < k; v++) {
                p = i[v];
                q = j[v];
                l = p < l ? p : l;
                m = q < m ? q : m;
                n = p > n ? p : n;
                o = q > o ? q : o;
            }
            t = !(l > this.ze.right || n < this.ze.left || m > this.ze.bottom || o < this.ze.top);
        }
        if (!t) {
            return null;
        }
        var w = b != null && (l < this.ze.left || m < this.ze.top || n > this.ze.right || o > this.ze.bottom);
        var x = new Rect(0, l, m, n - l, o - m);
        if (!a.cb(x)) {
            return null;
        }
        l = l < this.ze.left ? this.ze.left : l;
        n = n > this.ze.right ? this.ze.right : n;
        m = m < this.ze.top ? this.ze.top : m;
        o = o > this.ze.bottom ? this.ze.bottom : o;
        var y = PolySimplification.b(h, this.ib);
        var z = new DefaultFlattener().c(h.c, h.d, y, this.x3);
        var aa = z.count;
        if (w) {
            var ab = new List$1(Point_$type, 0);
            b.i = ab;
            for (var ac = 0; ac < aa; ac++) {
                b.j(z._inner[ac]);
            }
            b.i = null;
            z = ab;
        }
        if (z == null || z.count == 0) {
            return null;
        }
        var ad = new FlattenedShape();
        ad.a = z;
        ad.b = new Rect(0, l, m, n - l, o - m);
        ad.c = x;
        return ad;
    };
    ShapeSeriesBase.prototype.ys = function (a, b, c) {
        var d = this.w1;
        var e = this.w3;
        var f = a.count;
        var g = new Array(f);
        var h = new Array(f);
        for (var i = 0; i < f; i++) {
            g[i] = a._inner[i].x;
            h[i] = a._inner[i].y;
        }
        d.ho(boxArray$1(g), 0, g.length, b);
        e.ho(boxArray$1(h), 0, h.length, c);
        return new Tuple$2(Array_$type, Array_$type, g, h);
    };
    ShapeSeriesBase.prototype.y3 = function (a) {
        a.c0();
    };
    ShapeSeriesBase.prototype.o3 = function (a, b) {
        _super.prototype.o3.call(this, a, b);
        var c = b;
        c.cn();
    };
    ShapeSeriesBase.prototype.yu = function (a) {
        if (a != null) {
            a.ct(this);
        }
    };
    ShapeSeriesBase.prototype.y2 = function (a) {
        if (a != null) {
            a.b0(this);
        }
    };
    ShapeSeriesBase.prototype.a1 = function (a, b) {
        var c = this.xa.c2(a, b);
        var d = null;
        if (c != null) {
            d = c.dataContext;
        }
        if (d != null) {
            return d;
        }
        return _super.prototype.a1.call(this, a, b);
    };
    ShapeSeriesBase.prototype.ya = function (a) {
        return this.dl.item(a);
    };
    ShapeSeriesBase.prototype.get_g5 = function () {
        return true;
    };
    ShapeSeriesBase.prototype.set_g5 = function (a) {
        _super.prototype.set_g5.call(this, a);
    };
    ShapeSeriesBase.prototype.ax = function (a) {
        var e_2, _a, e_3, _b;
        if (typeCast(NumericXAxis.$, a) !== null && this.xz != null) {
            var b = 1.7976931348623157E+308;
            var c = -1.7976931348623157E+308;
            try {
                for (var _c = __values(fromEnum(this.xz)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var d = _d.value;
                    b = Math.min(b, d.left);
                    c = Math.max(c, d.right);
                }
            }
            catch (e_2_1) {
                e_2 = { error: e_2_1 };
            }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return))
                        _a.call(_c);
                }
                finally {
                    if (e_2)
                        throw e_2.error;
                }
            }
            return new AxisRange(b, c);
        }
        if (typeCast(NumericYAxis.$, a) !== null && this.xz != null) {
            var e = 1.7976931348623157E+308;
            var f = -1.7976931348623157E+308;
            try {
                for (var _e = __values(fromEnum(this.xz)), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var g = _f.value;
                    e = Math.min(e, g.top);
                    f = Math.max(f, g.bottom);
                }
            }
            catch (e_3_1) {
                e_3 = { error: e_3_1 };
            }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return))
                        _b.call(_e);
                }
                finally {
                    if (e_3)
                        throw e_3.error;
                }
            }
            return new AxisRange(e, f);
        }
        return null;
    };
    ShapeSeriesBase.prototype.get_fv = function () {
        return true;
    };
    ShapeSeriesBase.prototype.get_fj = function () {
        return true;
    };
    Object.defineProperty(ShapeSeriesBase.prototype, "xn", {
        get: function () {
            return this.styleShape != null;
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesBase.prototype.zg = function (a, b, c) {
        if (this.styleShape != null) {
            if (this.xa.c9 != null && c == this.xa.c9) {
                c = new Style();
                var d = this.xa.c9;
                c.fill = d.fill;
                c.opacity = d.opacity;
                c.stroke = d.stroke;
                c.strokeThickness = d.strokeThickness;
            }
            else {
                if (c != null) {
                    var e = new Style();
                    e.fill = c.fill;
                    e.opacity = c.opacity;
                    e.stroke = c.stroke;
                    e.strokeThickness = c.strokeThickness;
                    c = e;
                }
                else {
                    c = new Style();
                }
            }
            var f = new StyleShapeEventArgs(a, b, c);
            this.styleShape(this, f);
            return f.d();
        }
        return c;
    };
    ShapeSeriesBase.$t = markType(ShapeSeriesBase, 'ShapeSeriesBase', Series.$);
    ShapeSeriesBase.y4 = DependencyProperty.i("HighlightedValueMemberPath", String_$type, ShapeSeriesBase.$, new PropertyMetadata(2, null, function (a, b) { return a.raisePropertyChanged("HighlightedValueMemberPath", b.oldValue, b.newValue); }));
    ShapeSeriesBase.$$p = markDep(DependencyProperty, PropertyMetadata, ShapeSeriesBase, 'raisePropertyChanged', ['IsCustomShapeMarkerStyleAllowed:xq:y5', [0, false], 'IsCustomShapeStyleAllowed:xr:y6', [0, false], 'ItemSearchMode:w8:y7', [ShapeItemSearchMode_$type, enumGetBox(ShapeItemSearchMode_$type, 0)], 'ItemSearchPointsThreshold:x8:y8', [1, 10000], 'ItemSearchThreshold:x9:y9', [1, 10000], 'ShapeFilterResolution:x5:za', [1, 2], 'ShapeMemberPath:yl:zb', [2, null], 'XAxis:w2:zc', [NumericXAxis.$, null], 'YAxis:w4:zd', [NumericYAxis.$, null]]);
    return ShapeSeriesBase;
}(Series));
export { ShapeSeriesBase };
/**
 * @hidden
 */
var ShapeSeriesRenderManager = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ShapeSeriesRenderManager, _super);
    function ShapeSeriesRenderManager() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.aw = null;
        _this.ax = null;
        return _this;
    }
    ShapeSeriesRenderManager.prototype.c = function () {
        this.aw = new AssigningShapeMarkerStyleEventArgs();
        return this.aw;
    };
    ShapeSeriesRenderManager.prototype.a = function () {
        this.ax = new AssigningShapeStyleEventArgs();
        return this.ax;
    };
    ShapeSeriesRenderManager.prototype.a1 = function (a, b, c) {
        this.ag = this.ak;
        this.ah = this.al;
        this.m = this.t;
        this.am = this.an;
        this.ao = this.ar;
        this.k = this.r;
        this.l = this.s;
        this.j = this.q;
        if (c) {
            if (a._fill != null) {
                this.ag = a._fill;
            }
            if (a._stroke != null) {
                this.ah = a._stroke;
            }
            if (!isNaN_(a.ad) && (a.y == null || !isNaN_(a.y.strokeThickness))) {
                this.m = a.ad;
            }
        }
        var d = this.b;
        if (d != null) {
            d.aa = this.ag;
            d.ab = this.ah;
            d.ae = this.m;
            d.af = this.am;
            d.ag = this.ao;
            d.ac = this.k;
            d.ad = this.l;
            d.o = this.j;
            d.g = this.f;
            d.k = b;
            d.f = false;
        }
    };
    ShapeSeriesRenderManager.prototype.ay = function (a, b, c) {
        this.w(a, b, c);
    };
    ShapeSeriesRenderManager.prototype.az = function (a, b, c) {
        this.x(a, b, c);
    };
    ShapeSeriesRenderManager.prototype.a0 = function (a, b, c, d) {
        if (b == -1) {
            a.e = false;
            a.z = 0;
            a.y = c - 1;
        }
        else {
            if (d) {
                a.z = b;
                a.y = b;
            }
            else {
                a.e = false;
                a.z = b;
                a.y = b;
            }
        }
    };
    ShapeSeriesRenderManager.$t = markType(ShapeSeriesRenderManager, 'ShapeSeriesRenderManager', SeriesRenderManager.$);
    return ShapeSeriesRenderManager;
}(SeriesRenderManager));
export { ShapeSeriesRenderManager };
/**
 * @hidden
 */
var ShapeSeriesViewBase = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(ShapeSeriesViewBase, _super);
    function ShapeSeriesViewBase(a) {
        var _this = _super.call(this, a) || this;
        _this.cc = null;
        _this.b6 = null;
        _this.cd = new List$1(ShapeHitRegion.$, 0);
        _this.ch = 0;
        _this.cg = null;
        _this.b9 = null;
        _this.c7 = new Path();
        _this.b7 = null;
        _this.c8 = null;
        _this.b1 = null;
        _this.b3 = null;
        _this.b2 = null;
        _this.b0 = null;
        _this.b6 = a;
        _this.b9 = _this.b8();
        _this.cg = new List$1(Path.$, 0);
        _this.cc = new Dictionary$2(Number_$type, FlattenedShape.$, 0);
        return _this;
    }
    ShapeSeriesViewBase.prototype.b4 = function (a) {
        return null;
    };
    Object.defineProperty(ShapeSeriesViewBase.prototype, "ce", {
        get: function () {
            return this.cd;
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesViewBase.prototype.b8 = function () {
        var _this = this;
        return ((function () {
            var $ret = new Pool$1(FrameworkElement.$);
            $ret.create = runOn(_this, _this.c1);
            $ret.activate = runOn(_this, _this.cq);
            $ret.disactivate = runOn(_this, _this.cr);
            $ret.destroy = runOn(_this, _this.cs);
            return $ret;
        })());
    };
    ShapeSeriesViewBase.prototype.cb = function (a) {
        return a.width >= this.b6.x6 && a.height >= this.b6.x6;
    };
    ShapeSeriesViewBase.cf = function (a) {
        var b = new List$1(PointCollection.$, 0);
        var c;
        var d = a.count;
        for (var e = 0; e < d; e++) {
            c = a._inner[e];
            var f = new PointCollection(1, c.a);
            b.add(f);
        }
        return b;
    };
    Object.defineProperty(ShapeSeriesViewBase.prototype, "ca", {
        get: function () {
            return this.c8 != null || this.b7 != null || this.b6.xn;
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesViewBase.prototype.ci = function (a, b, c, d) {
        if (d != null && d.count > 0) {
            var e = ShapeSeriesViewBase.cf(d);
            c.intersect(this.bx);
            if (!this.cb(c)) {
            }
            else {
                var f = this.c5(a, e);
                if (f != null) {
                    var g = this.c4(this.ch, b);
                    for (var h = 0; h < d.count; h++) {
                        var i = new ShapeHitRegion();
                        i.d = d._inner[h].b;
                        i.a = d._inner[h].a;
                        i.b = a;
                        i.c = g;
                        this.cd.add(i);
                    }
                    this.ck(g, f);
                    this.ch = this.ch + 1;
                }
            }
        }
    };
    ShapeSeriesViewBase.prototype.c4 = function (a, b) {
        var c = this.b9.item(this.ch);
        if (c.dataContext != null) {
            c.dataContext.item = b;
            c.dataContext.c = a;
        }
        return c;
    };
    ShapeSeriesViewBase.cl = function (a, b, c) {
        if (b._fill == null) {
            b._fill = a.e.u3;
        }
        if (b._stroke == null) {
            b._stroke = a.e.u7;
        }
        if (b.y == null) {
            b.ad = a.e.ic;
        }
    };
    ShapeSeriesViewBase.prototype.cp = function (a) {
        for (var b = 0; b < this.b9.a.count; b++) {
            var c = this.b9.a._inner[b];
            a(c);
        }
    };
    ShapeSeriesViewBase.prototype.cm = function (a, b, c) {
        if (a == null) {
            return;
        }
        this.co(a, c);
        var d = false;
        if (this.b7 != null) {
            var e = this.b7.selectStyle(b, a);
            if (e != null) {
                d = true;
            }
            if (a.y != e) {
                a.y = e;
                this.k.j(a, a.y);
            }
        }
        if (!d) {
            if (a.y != this.c8) {
                a.y = this.c8;
                this.k.j(a, a.y);
            }
        }
        var f = this.b6.zg(b, a, a.y);
        if (a.y != f) {
            a.y = f;
            this.k.j(a, a.y);
        }
    };
    ShapeSeriesViewBase.prototype.co = function (a, b) {
    };
    ShapeSeriesViewBase.prototype.cj = function (a, b) {
        var c = truncate(Math.floor(a.left));
        var d = truncate(Math.ceil(a.right));
        var e = truncate(Math.floor(a.top));
        var f = truncate(Math.ceil(a.bottom));
        for (var g = c; g < d; g++) {
            for (var h = e; h < f; h++) {
                this.cx(g, h, b);
            }
        }
    };
    ShapeSeriesViewBase.prototype.cx = function (a, b, c) {
    };
    ShapeSeriesViewBase.prototype.cu = function () {
        this.ch = 0;
    };
    ShapeSeriesViewBase.prototype.ct = function () {
        this.b9.count = this.ch;
        this.as();
    };
    ShapeSeriesViewBase.prototype.cw = function (a, b) {
    };
    ShapeSeriesViewBase.prototype.cn = function () {
        this.b9.count = 0;
        this.as();
    };
    ShapeSeriesViewBase.prototype.c1 = function () {
        var a = this.b6;
        var b = ((function () {
            var $ret = new Path();
            $ret.dataContext = ((function () {
                var $ret = new DataContext();
                $ret.series = a;
                return $ret;
            })());
            return $ret;
        })());
        this.cg.add(b);
        return b;
    };
    ShapeSeriesViewBase.prototype.cq = function (a) {
        a._visibility = 0;
    };
    ShapeSeriesViewBase.prototype.cr = function (a) {
        a.dataContext.item = null;
        a._visibility = 1;
    };
    ShapeSeriesViewBase.prototype.cs = function (a) {
        this.cg.remove(a);
    };
    ShapeSeriesViewBase.prototype.c6 = function (a, b, c) {
        if (b == null) {
            return null;
        }
        var d = new PathGeometry();
        var e;
        var f = b.count;
        for (var g = 0; g < f; g++) {
            e = b._inner[g];
            if (e.count < 1) {
                continue;
            }
            var h = new PolyLineSegment();
            h._points = e;
            var i = new PathFigure();
            i._isFilled = c;
            i._isClosed = c;
            i._startPoint = e._inner[0];
            i._segments.add(h);
            d.c.add(i);
        }
        return d;
    };
    ShapeSeriesViewBase.prototype.ac = function (a) {
        return this.cg._inner[a];
    };
    ShapeSeriesViewBase.prototype.ab = function (a) {
        var b = this.cg._inner[a];
        this.c7._visibility = b._visibility;
        this.c7.an = b.an;
        var c = this.bs(a);
        this.c7._fill = c;
        this.c7._stroke = c;
        this.c7.ad = this.e.ic + 3;
        return this.c7;
    };
    ShapeSeriesViewBase.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        for (var c = 0; c < this.cg.count; c++) {
            var d = this.aa(c, b);
            if (d._visibility != 1) {
                a.t(d);
            }
        }
    };
    Object.defineProperty(ShapeSeriesViewBase.prototype, "c9", {
        get: function () {
            return this.c8;
        },
        enumerable: false,
        configurable: true
    });
    ShapeSeriesViewBase.prototype.cz = function (a) {
        this.b7 = a;
    };
    ShapeSeriesViewBase.prototype.cy = function (a) {
        this.c8 = a;
    };
    ShapeSeriesViewBase.prototype.c2 = function (a, b) {
        return this.c3(a, b, false);
    };
    ShapeSeriesViewBase.prototype.c3 = function (a, b, c) {
        var d = this.b5(a, b, c);
        if (d == null) {
            return null;
        }
        return d.c;
    };
    ShapeSeriesViewBase.prototype.b5 = function (a, b, c) {
        if (this.cd.count == 0) {
            return null;
        }
        var d = a.x;
        var e = a.y;
        var f = this.cd.count;
        var g = this.cd;
        var h = null;
        for (var i = 0; i < f; i++) {
            h = g._inner[i];
            if (h.a == null || h.a.count == 0) {
                continue;
            }
            if (d >= h.d.left && d <= h.d.right && e >= h.d.top && e <= h.d.bottom) {
                if (c) {
                    var j = this.b6.ic / 2 + this.b6.is(b);
                    if (GeometryUtil.d(a, h.a._inner[0], h.a, j)) {
                        return h;
                    }
                }
                else {
                    if (PolygonUtil.b(h.a, a)) {
                        return h;
                    }
                }
            }
        }
        return null;
    };
    ShapeSeriesViewBase.prototype.cv = function (a, b, c, d) {
        this.b1 = a;
        this.b3 = b;
        this.b2 = c;
        this.b0 = d;
        this.cd.clear();
    };
    ShapeSeriesViewBase.prototype.c0 = function () {
        var _this = this;
        var a = this.bx;
        var b = ((function () {
            var $ret = new Path();
            $ret.y = _this.c8;
            return $ret;
        })());
        b.ad = 1;
        if (this.k != null) {
            this.k.j(b, b.y);
        }
        this.b6.ze = RectUtil.r(a, b.ad);
    };
    ShapeSeriesViewBase.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        if (this.b9.a == null) {
            return;
        }
        for (var b = 0; b < this.b9.a.count; b++) {
            var c = typeCast(Path.$, this.b9.a._inner[b]);
            if (c._visibility != 1) {
                this.e.bb.exportPathData(a, c, "shape" + b, ["Main "]);
            }
        }
    };
    ShapeSeriesViewBase.$t = markType(ShapeSeriesViewBase, 'ShapeSeriesViewBase', SeriesView.$);
    return ShapeSeriesViewBase;
}(SeriesView));
export { ShapeSeriesViewBase };
