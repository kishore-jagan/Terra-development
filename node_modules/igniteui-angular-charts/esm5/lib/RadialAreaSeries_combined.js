/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { __extends } from "tslib";
import { AnchoredRadialSeries } from "./AnchoredRadialSeries";
import { UnknownValuePlotting_$type } from "igniteui-angular-core";
import { DependencyProperty } from "igniteui-angular-core";
import { Array_$type, Point_$type, runOn, enumGetBox, markType, markDep } from "igniteui-angular-core";
import { List$1 } from "igniteui-angular-core";
import { Path } from "igniteui-angular-core";
import { ScalerParams } from "./ScalerParams";
import { ViewportUtils } from "./ViewportUtils";
import { PropertyMetadata } from "igniteui-angular-core";
import { AnchoredRadialSeriesView } from "./AnchoredRadialSeriesView";
import { Defaults } from "./Defaults";
/**
 * @hidden
 */
var RadialAreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialAreaSeries, _super);
    function RadialAreaSeries() {
        var _this = _super.call(this) || this;
        _this.ab = RadialAreaSeries.$;
        return _this;
    }
    RadialAreaSeries.prototype.bi = function () {
        return new RadialAreaSeries();
    };
    RadialAreaSeries.prototype.get_es = function () {
        return true;
    };
    RadialAreaSeries.prototype.cq = function () {
        return new RadialAreaSeriesView(this);
    };
    RadialAreaSeries.prototype.qx = function (a) {
        _super.prototype.qx.call(this, a);
        this.add = a;
    };
    RadialAreaSeries.prototype.preferredCategoryMode = function (a) {
        return 0;
    };
    RadialAreaSeries.prototype.o3 = function (a, b) {
        _super.prototype.o3.call(this, a, b);
        this.add.c6();
    };
    RadialAreaSeries.prototype.aa2 = function (a, b) {
        _super.prototype.aa2.call(this, a, b);
        var c = b.by;
        var d = b.bx;
        var e = b.getEffectiveViewport();
        var f = b;
        if (b.o() && !c.isEmpty && !d.isEmpty && this.yr != null && this.yw != null) {
            var g = a.f;
            var h = g.count;
            var i = new List$1(Array_$type, 2, h);
            var j = 0;
            for (var k = 0; k < h; k++) {
                var l = new Array(4);
                i.add(l);
                l[0] = this.yz.d(a.f._inner[k][0], a.f._inner[k][1], c, d, e);
                l[1] = this.yz.e(a.f._inner[k][0], a.f._inner[k][1], c, d, e);
                l[2] = this.yz.d(a.f._inner[k][0], a.f._inner[k][2], c, d, e);
                var m = a.f._inner[k][2];
                l[3] = this.yz.e(a.f._inner[k][0], m, c, d, e);
                if (m > j) {
                    j = m;
                }
            }
            var n = ViewportUtils.e(0.5, c, d, e);
            var o = ViewportUtils.i(0.5, c, d, e);
            this.adc = { $type: Point_$type, x: n, y: o };
            var p = this.getEffectiveViewport1(f);
            this.y7.a2(this, this.zo(), runOn(this, this.yf), this.zx(b), this.zy(b));
            var q = false;
            var r = this.y7.b;
            if (r != null) {
                q = true;
            }
            if (q) {
                var s = new ScalerParams(0, b.by, b.bx, this.yr.ch, p);
                this.act(g, -1, this.abx.count, this.yr, s, b.q);
            }
            var t = f.de;
            var u = f.df;
            var v = f.dc;
            var w = f.dd;
            this.y7.ad(t, true, false, true, true);
            this.y7.ad(u, true, false, true, true);
            this.y7.ad(v, false, true, false, false);
            this.y7.ad(w, false, true, false, false);
            f.c7(a.f.count, i, false, this.add.cx.b, this.ib, runOn(this, this.acu), this.ade);
            v._opacity = this.y7.j * this.h7;
            w._opacity = 0.5 * this.y7.j * this.h7;
        }
    };
    RadialAreaSeries.prototype.q5 = function (a, b, c, d) {
        _super.prototype.q5.call(this, a, b, c, d);
        switch (b) {
            case RadialAreaSeries.$$p[0]:
                this.rn(false);
                this.qh();
                break;
        }
    };
    RadialAreaSeries.prototype.get_ab3 = function () {
        return true;
    };
    RadialAreaSeries.$t = markType(RadialAreaSeries, 'RadialAreaSeries', AnchoredRadialSeries.$);
    RadialAreaSeries.$$p = markDep(DependencyProperty, PropertyMetadata, RadialAreaSeries, 'raisePropertyChanged', ['UnknownValuePlotting:ade:adg', [UnknownValuePlotting_$type, enumGetBox(UnknownValuePlotting_$type, 1)]]);
    return RadialAreaSeries;
}(AnchoredRadialSeries));
export { RadialAreaSeries };
/**
 * @hidden
 */
var RadialAreaSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {
    __extends(RadialAreaSeriesView, _super);
    function RadialAreaSeriesView(a) {
        var _this = _super.call(this, a) || this;
        _this.c5 = null;
        _this.dc = new Path();
        _this.de = new Path();
        _this.dd = new Path();
        _this.df = new Path();
        _this.c8 = new Path();
        _this.da = new Path();
        _this.c9 = new Path();
        _this.db = new Path();
        _this.c5 = a;
        return _this;
    }
    RadialAreaSeriesView.prototype.au = function () {
        _super.prototype.au.call(this);
        if (!this.q) {
            this.c5.w2 = Defaults.e;
        }
    };
    RadialAreaSeriesView.prototype.c6 = function () {
        this.dc.an = null;
        this.de.an = null;
        this.dd.an = null;
        this.df.an = null;
        this.c8.an = null;
        this.da.an = null;
        this.c9.an = null;
        this.db.an = null;
        this.as();
    };
    RadialAreaSeriesView.prototype.c7 = function (a, b, c, d, e, f, g) {
        this.c1.abs.i(this.dc, this.de, this.dd, this.df, a, b, c, d, e, f, g);
        this.as();
    };
    RadialAreaSeriesView.prototype.bd = function () {
        _super.prototype.bd.call(this);
    };
    RadialAreaSeriesView.prototype.be = function () {
        _super.prototype.be.call(this);
        var a = this.br();
        this.da.an = this.de.an;
        this.db.an = this.df.an;
        this.c8.an = this.dc.an;
        this.c9.an = this.dd.an;
        this.da._stroke = a;
        this.da.ad = this.e.ic + 3;
        this.db._stroke = a;
        this.db.ad = this.e.ic + 3;
        this.c8._fill = a;
        this.c8._opacity = 1;
        this.c9._fill = a;
        this.c9._opacity = 1;
    };
    RadialAreaSeriesView.prototype.a8 = function (a, b) {
        _super.prototype.a8.call(this, a, b);
        if (a.d) {
            if (b) {
                a.t(this.c8);
                a.t(this.c9);
                a.t(this.da);
                a.t(this.db);
            }
            else {
                a.t(this.dc);
                a.t(this.dd);
                a.t(this.de);
                a.t(this.df);
            }
        }
    };
    RadialAreaSeriesView.prototype.an = function (a) {
        _super.prototype.an.call(this, a);
        this.e.bb.exportPathData(a, this.de, "lowerShape", ["Lower"]);
        this.e.bb.exportPathData(a, this.df, "upperShape", ["Upper", "Main"]);
        this.e.bb.exportPathData(a, this.dd, "translucentShape", ["Translucent"]);
        this.e.bb.exportPathData(a, this.dc, "fillShape", ["Fill"]);
    };
    RadialAreaSeriesView.$t = markType(RadialAreaSeriesView, 'RadialAreaSeriesView', AnchoredRadialSeriesView.$);
    return RadialAreaSeriesView;
}(AnchoredRadialSeriesView));
export { RadialAreaSeriesView };
