import { ListSortDirection, ListSortDirection_$type } from "igniteui-angular-core";
import { ChartSortDescription } from "./ChartSortDescription";
import { ensureEnum } from "igniteui-angular-core";
/**
 * Represents an element in the current sort applied to a data source or provider. Changes to this object are not observed or expected after it is initially assigned to a collection.
*/
var IgxChartSortDescription = /** @class */ /*@__PURE__*/ (function () {
    function IgxChartSortDescription(field, sortDirection) {
        if (field === void 0) {
            field = null;
        }
        if (sortDirection === void 0) {
            sortDirection = ListSortDirection.Ascending;
        }
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        this.field = field;
        this.sortDirection = sortDirection;
    }
    IgxChartSortDescription.prototype.createImplementation = function () {
        return new ChartSortDescription(0);
    };
    Object.defineProperty(IgxChartSortDescription.prototype, "i", {
        /**
         * @hidden
         */
        get: function () {
            return this._implementation;
        },
        enumerable: false,
        configurable: true
    });
    IgxChartSortDescription.prototype.onImplementationCreated = function () {
    };
    IgxChartSortDescription.prototype._provideImplementation = function (i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    };
    Object.defineProperty(IgxChartSortDescription.prototype, "field", {
        /**
     * Gets or sets the property being sorted.
    */
        get: function () {
            return this.i.f;
        },
        set: function (v) {
            this.i.f = v;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(IgxChartSortDescription.prototype, "sortDirection", {
        /**
         * Gets or sets the direction to sort based on the property.
        */
        get: function () {
            return this.i.c;
        },
        set: function (v) {
            this.i.c = ensureEnum(ListSortDirection_$type, v);
        },
        enumerable: false,
        configurable: true
    });
    IgxChartSortDescription.prototype.findByName = function (name) {
        if (this.findEphemera) {
            if (name && name.indexOf("@@e:") == 0) {
                return this.findEphemera(name);
            }
        }
        return null;
    };
    /**
 * Returns if the SortDescription is equal to another.

* @param other  * The SortDescription to compare to.
*/
    IgxChartSortDescription.prototype.equals = function (other) {
        var iv = this.i.equals(other);
        return (iv);
    };
    return IgxChartSortDescription;
}());
export { IgxChartSortDescription };
