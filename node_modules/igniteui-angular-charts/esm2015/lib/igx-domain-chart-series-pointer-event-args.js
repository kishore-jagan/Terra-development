import { IgxSeriesComponent } from "./igx-series-component";
import { fromPoint, toPoint } from "igniteui-angular-core";
/**
 * Represents event arguments for chart's SeriesAdded and SeriesRemoved events
*
* The `DomainChartSeriesPointerEventArgs` class provide events for chart's SeriesAdded and SeriesRemoved.
*
* `SeriesPointerDown` get fired when the pointer is press down over a Series.
*
* ```html
*  <igx-financial-chart
*       #chart
*       [dataSource]="data"
*       (seriesPointerDown)=chart_seriesPointerDown()
*       >
*     </igx-financial-chart>
* ```
*
* ```ts
* this.chart.seriesPointerDown = this.chart_seriesPointerDown();
* ```
*/
export class IgxDomainChartSeriesPointerEventArgs {
    constructor() {
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    /**
     * Gets the series hit by the pointer.
    *
    * Use the `Series` property to get the series.
    *
    * ```ts
    *  var series= args.series;
    * ```
    */
    get series() {
        const r = this.i.series;
        if (r == null) {
            return null;
        }
        if (!r.externalObject) {
            let e = IgxSeriesComponent._createFromInternal(r);
            if (e) {
                e._implementation = r;
            }
            r.externalObject = e;
        }
        return r.externalObject;
    }
    set series(v) {
        v == null ? this.i.series = null : this.i.series = v.i;
    }
    /**
     * Gets the item hit by the pointer.
    *
    * Use the `Item` property to get the items.
    *
    * <https://www.infragistics.com/help/wpf/infragisticswpf.controls.charts.xamdatachart~infragistics.controls.charts.domainchartseriespointereventargs~item>
    *
    * ```ts
    * var Chartitem = args.item;
    * ```
    */
    get item() {
        return this.i.item;
    }
    set item(v) {
        this.i.item = v;
    }
    /**
     * Gets the pointer position relative to the plot area.
    */
    get plotAreaPosition() {
        return fromPoint(this.i.plotAreaPosition);
    }
    set plotAreaPosition(v) {
        this.i.plotAreaPosition = toPoint(v);
    }
    /**
     * Gets the mouse position relative to the chart.
    */
    get chartPosition() {
        return fromPoint(this.i.chartPosition);
    }
}
