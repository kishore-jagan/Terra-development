import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxNumericYAxisComponent } from "./igx-numeric-y-axis-component";
import { IgxStraightNumericAxisBaseComponent } from "./igx-straight-numeric-axis-base-component";
import { IgxNumericAxisBaseComponent } from "./igx-numeric-axis-base-component";
import { IgxAxisComponent } from "./igx-axis-component";
import { PercentChangeYAxis } from "./PercentChangeYAxis";
import * as i0 from "@angular/core";
/**
 * A horizontal axis that uses a DateTime scale.
*
* You can use the `PercentChangeYAxis` show percentage values.
*
* ```html
* <igx-data-chart
*     [dataSource]="data">
*     <igx-percent-change-y-axis
* 		#yAxis>
*     </igx-percent-change-y-axis>
* </igx-data-chart>
* ```
*
* ```ts
* let yAxis = new IgxPercentChangeYAxisComponent();
* this.chart.axes.add(yAxis);
* ```
*/
export let IgxPercentChangeYAxisComponent = /*@__PURE__*/ (() => {
    class IgxPercentChangeYAxisComponent extends IgxNumericYAxisComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new PercentChangeYAxis();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
    }
    IgxPercentChangeYAxisComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPercentChangeYAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxPercentChangeYAxisComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxPercentChangeYAxisComponent, selector: "igx-percent-change-y-axis", providers: [{ provide: IgxNumericYAxisComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }, { provide: IgxStraightNumericAxisBaseComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }, { provide: IgxNumericAxisBaseComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }, { provide: IgxAxisComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxPercentChangeYAxisComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPercentChangeYAxisComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-percent-change-y-axis',
                    template: ``,
                    providers: [{ provide: IgxNumericYAxisComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }, { provide: IgxStraightNumericAxisBaseComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }, { provide: IgxNumericAxisBaseComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }, { provide: IgxAxisComponent, useExisting: forwardRef(() => IgxPercentChangeYAxisComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
