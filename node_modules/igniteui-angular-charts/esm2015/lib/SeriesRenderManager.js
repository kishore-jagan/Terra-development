/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { Base, markType } from "igniteui-angular-core";
/**
 * @hidden
 */
export let SeriesRenderManager = /*@__PURE__*/ (() => {
    class SeriesRenderManager extends Base {
        constructor() {
            super(...arguments);
            this.ag = null;
            this.ah = null;
            this.m = 0;
            this.am = null;
            this.ao = 0;
            this.k = 0;
            this.l = 0;
            this.j = 0;
            this.i = 0;
            this.au = 0;
            this.aq = 0;
            this.ap = 0;
            this.ak = null;
            this.al = null;
            this.t = 0;
            this.an = null;
            this.ar = 0;
            this.r = 0;
            this.s = 0;
            this.q = 0;
            this.p = 0;
            this.av = 0;
            this.at = 0;
            this.as = 0;
            this.ai = null;
            this.aj = null;
            this.n = 0;
            this.o = 0;
            this.f = false;
            this.e = false;
            this.ae = null;
            this.af = null;
            this.g = 0;
            this.h = 0;
            this.b = null;
            this.d = null;
        }
        w(a, b, c) {
            this.e = false;
            this.ai = a.vf();
            this.aj = a.vg();
            this.n = 1;
            this.o = a.il();
            this.ae = this.ai;
            this.af = this.aj;
            this.g = this.n;
            this.h = this.o;
            let d = b;
            this.d = null;
            if (d) {
                this.d = this.c();
                this.d.m = 0;
                this.d.q = 0;
                this.d.u = 0;
                this.d.v = 0;
                this.d.x = 0;
                this.d.t = 0;
                this.d.n = 0;
                this.d.r = 0;
                this.d.w = 0;
                this.d.l = 0;
                this.d.p = 0;
                this.d.s = 0;
                if (a.c9 != null && a.bv != 1) {
                    this.d.m = a.c9.dj.maxMarkerHighlightingProgress;
                    this.d.q = a.c9.dj.sumMarkerHighlightingProgress;
                    this.d.v = a.c9.dj.totalHighWaterMark;
                    this.d.u = a.c9.dj.totalHighlightingProgress;
                }
                if (a.c9 != null && a.cn != 1) {
                    this.d.n = a.c9.dk.maxMarkerHighlightingProgress;
                    this.d.r = a.c9.dk.sumMarkerHighlightingProgress;
                    this.d.x = a.c9.dk.totalHighWaterMark;
                    this.d.w = a.c9.dk.totalHighlightingProgress;
                }
                if (a.c9 != null && a.cm != 1) {
                    this.d.l = a.c9.di.maxMarkerHighlightingProgress;
                    this.d.p = a.c9.di.sumMarkerHighlightingProgress;
                    this.d.t = a.c9.di.totalHighWaterMark;
                    this.d.s = a.c9.di.totalHighlightingProgress;
                }
                this.d.a = c;
            }
        }
        c() {
            return null;
        }
        x(a, b, c) {
            this.f = false;
            this.ak = a.u3;
            this.al = a.u7;
            this.t = a.ic;
            this.an = a.vw;
            this.ar = a.vx;
            this.r = 0;
            this.s = 0;
            this.q = 1;
            this.p = a.jf;
            this.at = a.vy;
            this.as = a.vy;
            this.av = a.vz;
            this.ag = this.ak;
            this.ah = this.al;
            this.m = this.t;
            this.am = this.an;
            this.ao = this.ar;
            this.k = this.r;
            this.l = this.s;
            this.j = this.q;
            this.i = this.p;
            this.aq = this.at;
            this.ap = this.as;
            this.au = this.av;
            let d = b;
            this.b = null;
            if (d) {
                this.b = this.a();
                this.b.m = 0;
                this.b.q = 0;
                this.b.v = 0;
                this.b.x = 0;
                this.b.t = 0;
                this.b.u = 0;
                this.b.n = 0;
                this.b.r = 0;
                this.b.w = 0;
                this.b.l = 0;
                this.b.p = 0;
                this.b.s = 0;
                if (a.c9 != null && a.bv != 1) {
                    this.b.m = a.c9.dj.maxHighlightingProgress;
                    this.b.q = a.c9.dj.sumHighlightingProgress;
                    this.b.v = a.c9.dj.totalHighWaterMark;
                    this.b.u = a.c9.dj.totalHighlightingProgress;
                }
                if (a.c9 != null && a.cn != 1) {
                    this.b.n = a.c9.dk.maxHighlightingProgress;
                    this.b.r = a.c9.dk.sumHighlightingProgress;
                    this.b.x = a.c9.dk.totalHighWaterMark;
                    this.b.w = a.c9.dk.totalHighlightingProgress;
                }
                if (a.c9 != null && a.cn != 1) {
                    this.b.l = a.c9.di.maxHighlightingProgress;
                    this.b.p = a.c9.di.sumHighlightingProgress;
                    this.b.t = a.c9.di.totalHighWaterMark;
                    this.b.s = a.c9.di.totalHighlightingProgress;
                }
                this.b.a = c;
            }
        }
        a() {
            return null;
        }
        ad(a, b, c, d, e) {
            let f = this.ag;
            if (e) {
                f = this.ah;
            }
            if (c) {
                a._fill = f;
            }
            else {
                if (b) {
                    a._stroke = f;
                }
                else {
                    a._fill = f;
                    a._stroke = this.ah;
                }
                a.ad = this.m;
                a.ai = this.am;
                a.aj = this.ao;
                if (d) {
                    a.ac = this.i;
                    a.am = this.au;
                    a.al = this.aq;
                    a.ak = this.ap;
                }
            }
            a._opacity = this.j;
        }
        ac(a, b) {
            a._opacity = this.g;
            b.itemBrush = this.ae;
            b.thickness = this.h;
            b.actualItemBrush = b.itemBrush;
            b.outline = this.af;
        }
        u(a, b, c, d, e, f, g, h, i, j, k, l) {
            if (a.bv == 1 && a.cn == 1 && a.cm == 1) {
                return;
            }
            this.j = a.a9.a$k(a, b, c, d, this.j, e, f, g, h, i, j, k, l);
            this.ag = a.a9.a$at(a, b, c, d, e, f, g, h, i, j, this.ag, false);
            this.ah = a.a9.a$at(a, b, c, d, e, f, g, h, i, j, this.ah, true);
            this.m = a.a9.a$l(a, b, c, d, this.m);
        }
        v(a, b, c, d, e, f, g, h, i, j, k) {
            if (!a.ej) {
                return;
            }
            if (a.bv == 1 && a.cn == 1 && a.cm == 1) {
                return;
            }
            this.g = a.a9.a$k(a, b, c, d, this.g, e, f, g, h, i, j, k, false);
            this.ae = a.a9.a$at(a, b, c, d, e, f, g, h, i, j, this.ae, false);
            this.af = a.a9.a$at(a, b, c, d, e, f, g, h, i, j, this.af, true);
            this.h = a.a9.a$l(a, b, c, d, this.h);
        }
        ab(a) {
            this.ag = this.ak;
            this.ah = this.al;
            this.m = this.t;
            this.am = this.an;
            this.ao = this.ar;
            this.k = this.r;
            this.l = this.s;
            this.j = this.q;
            let b = this.b;
            b.aa = this.ag;
            b.ab = this.ah;
            b.ae = this.m;
            b.af = this.am;
            b.ag = this.ao;
            b.ac = this.k;
            b.ad = this.l;
            b.o = this.j;
            b.g = this.f;
            b.k = a;
            b.f = false;
        }
        z(a, b, c, d, e, f, g, h, i) {
            let j = this.b;
            this.ag = j.aa;
            this.ah = j.ab;
            this.m = j.ae;
            this.am = j.af;
            this.ao = j.ag;
            this.k = j.ac;
            this.l = j.ad;
            this.j = j.o;
            if ((f || g || h) && !j.f && !e) {
                this.u(a, b, c, d, j.v, j.v, j.x, j.x, j.t, j.t, j.k, i);
            }
        }
        aa(a) {
            this.ae = this.ai;
            this.af = this.aj;
            this.g = this.n;
            this.h = this.o;
            let b = this.d;
            b.aa = this.ae;
            b.ab = this.af;
            b.o = this.g;
            b.g = this.e;
            b.k = a;
            b.f = false;
        }
        y(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
            let o = this.d;
            this.ae = o.aa;
            this.af = o.ab;
            this.g = o.o;
            if ((f || g || h) && !o.f && !e) {
                this.v(a, b, c, d, i, j, k, l, m, n, o.k);
            }
        }
    }
    SeriesRenderManager.$t = markType(SeriesRenderManager, 'SeriesRenderManager');
    return SeriesRenderManager;
})();
