import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PriceVolumeTrendIndicator } from "./PriceVolumeTrendIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent Price Volume Trend Indicator series.
 * Default required members: Volume, Close
*
* You can use the `PriceVolumeTrendIndicator` to measure money flow by adding or subtracting a portion of the daily volume.
*
* ```html
* <igx-data-chart
*     [dataSource]="data" >
*     <igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
*     <igx-price-volume-trend-indicator
* 		[xAxis]="xAxis"
* 		[yAxis]="yAxis"
* 		openMemberPath="open"
* 		highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close">
*     </igx-price-volume-trend-indicator>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxPriceVolumeTrendIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath = "open";
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath = "close";
* this.chart.series.add(series);
* ```
*/
export let IgxPriceVolumeTrendIndicatorComponent = /*@__PURE__*/ (() => {
    class IgxPriceVolumeTrendIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new PriceVolumeTrendIndicator();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
    }
    IgxPriceVolumeTrendIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPriceVolumeTrendIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxPriceVolumeTrendIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxPriceVolumeTrendIndicatorComponent, selector: "igx-price-volume-trend-indicator", providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxPriceVolumeTrendIndicatorComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPriceVolumeTrendIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-price-volume-trend-indicator',
                    template: ``,
                    providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxPriceVolumeTrendIndicatorComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
