import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { UnknownValuePlotting_$type } from "igniteui-angular-core";
import { IgxScatterBaseComponent } from "./igx-scatter-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { ScatterLineSeries } from "./ScatterLineSeries";
import { ensureEnum } from "igniteui-angular-core";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent scatter line series
*/
export let IgxScatterLineSeriesComponent = /*@__PURE__*/ (() => {
    class IgxScatterLineSeriesComponent extends IgxScatterBaseComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new ScatterLineSeries();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
        /**
         * Gets whether the current series shows only line shapes.
        */
        get isLineOnly() {
            return this.i.fi;
        }
        /**
         * Determines how unknown values will be plotted on the chart.
         * Null and Double.NaN are two examples of unknown values.
        */
        get unknownValuePlotting() {
            return this.i.ace;
        }
        set unknownValuePlotting(v) {
            this.i.ace = ensureEnum(UnknownValuePlotting_$type, v);
        }
    }
    IgxScatterLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxScatterLineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxScatterLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxScatterLineSeriesComponent, selector: "igx-scatter-line-series", inputs: { unknownValuePlotting: "unknownValuePlotting" }, providers: [{ provide: IgxScatterBaseComponent, useExisting: forwardRef(() => IgxScatterLineSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxScatterLineSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxScatterLineSeriesComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxScatterLineSeriesComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxScatterLineSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-scatter-line-series',
                    template: ``,
                    providers: [{ provide: IgxScatterBaseComponent, useExisting: forwardRef(() => IgxScatterLineSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxScatterLineSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxScatterLineSeriesComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { unknownValuePlotting: [{
                type: Input
            }] } });
