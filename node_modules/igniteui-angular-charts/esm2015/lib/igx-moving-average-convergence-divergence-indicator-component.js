import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxStrategyBasedIndicatorComponent } from "./igx-strategy-based-indicator-component";
import { IgxFinancialIndicatorComponent } from "./igx-financial-indicator-component";
import { IgxFinancialSeriesComponent } from "./igx-financial-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { MovingAverageConvergenceDivergenceIndicator } from "./MovingAverageConvergenceDivergenceIndicator";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent Moving Average Convergence/Divergence (MACD) indicator series.
 * Default required members: High, Low, Close
*
* Represents a Ignite UIDataChart Moving Average Convergence/Divergence (MACD) indicator series.
*
* Example:
*
* ```html
* <igx-data-chart
*     [dataSource]="data">
* 	<igx-category-x-axis
* 		label="label"
* 		#xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
* 		#yAxis>
*     </igx-numeric-y-axis>
* 	<igx-moving-average-convergence-divergence-indicator
*         #series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
* 		openMemberPath="open"
*         highMemberPath="high"
* 		lowMemberPath="low"
* 		closeMemberPath="close"
* 		volumeMemberPath="volume">
*     </gx-moving-average-convergence-divergence-indicatorr>
* </igx-data-chart>
* ```
*
* ```ts
* let series = new IgxMovingAverageConvergenceDivergenceIndicatorComponent();
* series.xAxis = this.xAxis;
* series.yAxis = this.yAxis;
* series.openMemberPath="open"
* series.highMemberPath = "high";
* series.lowMemberPath = "low";
* series.closeMemberPath="close"
* series.volumeMemberPath= "volume";
* this.chart.series.add(series);
* ```
*/
export let IgxMovingAverageConvergenceDivergenceIndicatorComponent = /*@__PURE__*/ (() => {
    class IgxMovingAverageConvergenceDivergenceIndicatorComponent extends IgxStrategyBasedIndicatorComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new MovingAverageConvergenceDivergenceIndicator();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
        /**
         * Gets default display type for the current Financial Indicator
        */
        get defaultDisplayType() {
            return this.i.aau;
        }
        /**
         * Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
         * The typical, and initial, value for short MACD periods is 10.
        *
        * Gets or sets the short moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
        *
        * Example:
        *
        * ```html
        * <igx-data-chart
        *     [dataSource]="data">
        * 	<igx-category-x-axis
        * 		label="label"
        * 		#xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        * 		#yAxis>
        *     </igx-numeric-y-axis>
        * 	<igx-moving-average-convergence-divergence-indicator
        *         #series
        *         [xAxis]="xAxis"
        *         [yAxis]="yAxis"
        * 		openMemberPath="open"
        *         highMemberPath="high"
        * 		lowMemberPath="low"
        * 		closeMemberPath="close"
        * 		volumeMemberPath="volume"
        * 		shortPeriod="10">
        *     </gx-moving-average-convergence-divergence-indicatorr>
        * </igx-data-chart>
        * ```
        */
        get shortPeriod() {
            return this.i.shortPeriod;
        }
        set shortPeriod(v) {
            this.i.shortPeriod = +v;
        }
        /**
         * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
         * The typical, and initial, value for long MACD periods is 30.
        *
        * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
        *
        * Example:
        *
        * ```html
        * <igx-data-chart
        *     [dataSource]="data">
        * 	<igx-category-x-axis
        * 		label="label"
        * 		#xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        * 		#yAxis>
        *     </igx-numeric-y-axis>
        * 	<igx-moving-average-convergence-divergence-indicator
        *         #series
        *         [xAxis]="xAxis"
        *         [yAxis]="yAxis"
        * 		openMemberPath="open"
        *         highMemberPath="high"
        * 		lowMemberPath="low"
        * 		closeMemberPath="close"
        * 		volumeMemberPath="volume"
        * 		longPeriod="30">
        *     </gx-moving-average-convergence-divergence-indicatorr>
        * </igx-data-chart>
        * ```
        *
        * ```ts
        * this.series.longPeriod="30" ;
        * ```
        */
        get longPeriod() {
            return this.i.longPeriod;
        }
        set longPeriod(v) {
            this.i.longPeriod = +v;
        }
        /**
         * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
         * The typical, and initial, value for long PVO periods is 30.
        *
        * Gets or sets the long moving average period for the current MovingAverageConvergenceDivergenceIndicator object.
        *
        * Example:
        *
        * ```html
        * <igx-data-chart
        *     [dataSource]="data">
        * 	<igx-category-x-axis
        * 		label="label"
        * 		#xAxis>
        *     </igx-category-x-axis>
        *     <igx-numeric-y-axis
        * 		#yAxis>
        *     </igx-numeric-y-axis>
        * 	<igx-moving-average-convergence-divergence-indicator
        *         #series
        *         [xAxis]="xAxis"
        *         [yAxis]="yAxis"
        * 		openMemberPath="open"
        *         highMemberPath="high"
        * 		lowMemberPath="low"
        * 		closeMemberPath="close"
        * 		volumeMemberPath="volume"
        * 		signalPeriod="30">
        *     </gx-moving-average-convergence-divergence-indicatorr>
        * </igx-data-chart>
        * ```
        */
        get signalPeriod() {
            return this.i.signalPeriod;
        }
        set signalPeriod(v) {
            this.i.signalPeriod = +v;
        }
    }
    IgxMovingAverageConvergenceDivergenceIndicatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxMovingAverageConvergenceDivergenceIndicatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxMovingAverageConvergenceDivergenceIndicatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxMovingAverageConvergenceDivergenceIndicatorComponent, selector: "igx-moving-average-convergence-divergence-indicator", inputs: { shortPeriod: "shortPeriod", longPeriod: "longPeriod", signalPeriod: "signalPeriod" }, providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxMovingAverageConvergenceDivergenceIndicatorComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxMovingAverageConvergenceDivergenceIndicatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-moving-average-convergence-divergence-indicator',
                    template: ``,
                    providers: [{ provide: IgxStrategyBasedIndicatorComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }, { provide: IgxFinancialIndicatorComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }, { provide: IgxFinancialSeriesComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxMovingAverageConvergenceDivergenceIndicatorComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { shortPeriod: [{
                type: Input
            }], longPeriod: [{
                type: Input
            }], signalPeriod: [{
                type: Input
            }] } });
