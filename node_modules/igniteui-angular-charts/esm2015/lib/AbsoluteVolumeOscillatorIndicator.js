/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { IShortPeriodLongPeriod_$type } from "./IShortPeriodLongPeriod";
import { AbsoluteVolumeOscillatorIndicatorStrategy } from "./AbsoluteVolumeOscillatorIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-angular-core";
/**
 * @hidden
 */
export let AbsoluteVolumeOscillatorIndicator = /*@__PURE__*/ (() => {
    class AbsoluteVolumeOscillatorIndicator extends StrategyBasedIndicator {
        bi() {
            return new AbsoluteVolumeOscillatorIndicator();
        }
        get_abn() {
            return new AbsoluteVolumeOscillatorIndicatorStrategy();
        }
        get abn() {
            return this.get_abn();
        }
        get_ab0() {
            return AbsoluteVolumeOscillatorIndicator.$;
        }
        get ab0() {
            return this.get_ab0();
        }
        get shortPeriod() {
            return typeGetValue(this.c(AbsoluteVolumeOscillatorIndicator.ab9));
        }
        set shortPeriod(a) {
            this.h(AbsoluteVolumeOscillatorIndicator.ab9, a);
        }
        abv() {
            return this.shortPeriod;
        }
        get longPeriod() {
            return typeGetValue(this.c(AbsoluteVolumeOscillatorIndicator.ab8));
        }
        set longPeriod(a) {
            this.h(AbsoluteVolumeOscillatorIndicator.ab8, a);
        }
        abs() {
            return this.longPeriod;
        }
    }
    AbsoluteVolumeOscillatorIndicator.$t = markType(AbsoluteVolumeOscillatorIndicator, 'AbsoluteVolumeOscillatorIndicator', StrategyBasedIndicator.$, [IShortPeriodLongPeriod_$type]);
    AbsoluteVolumeOscillatorIndicator.ab9 = StrategyBasedIndicator.ab7(10, AbsoluteVolumeOscillatorIndicator.$);
    AbsoluteVolumeOscillatorIndicator.ab8 = StrategyBasedIndicator.ab3(30, AbsoluteVolumeOscillatorIndicator.$);
    return AbsoluteVolumeOscillatorIndicator;
})();
