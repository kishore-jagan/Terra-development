/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ContourValueResolver } from "./ContourValueResolver";
import { DependencyProperty } from "igniteui-angular-core";
import { toEnum, markType, markDep } from "igniteui-angular-core";
import { PropertyMetadata } from "igniteui-angular-core";
/**
 * @hidden
 */
export let LinearContourValueResolver = /*@__PURE__*/ (() => {
    class LinearContourValueResolver extends ContourValueResolver {
        constructor() {
            super();
        }
        *_j(a) {
            for (let b = 0; b < this.valueCount; b++) {
                yield a.minimum + (a.maximum - a.minimum) * (b + 1) / (this.valueCount + 1);
            }
        }
        j(a) {
            return toEnum(() => this._j(a));
        }
    }
    LinearContourValueResolver.$t = markType(LinearContourValueResolver, 'LinearContourValueResolver', ContourValueResolver.$);
    LinearContourValueResolver.$$p = markDep(DependencyProperty, PropertyMetadata, LinearContourValueResolver, 'l', ['ValueCount::o', [1, 10]]);
    return LinearContourValueResolver;
})();
