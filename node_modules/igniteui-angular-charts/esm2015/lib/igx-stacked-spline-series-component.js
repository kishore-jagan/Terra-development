import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxHorizontalStackedSeriesBaseComponent } from "./igx-horizontal-stacked-series-base-component";
import { IgxStackedSeriesBaseComponent } from "./igx-stacked-series-base-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { StackedSplineSeries } from "./StackedSplineSeries";
import { ensureBool } from "igniteui-angular-core";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent stacked spline series.
*/
export let IgxStackedSplineSeriesComponent = /*@__PURE__*/ (() => {
    class IgxStackedSplineSeriesComponent extends IgxHorizontalStackedSeriesBaseComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new StackedSplineSeries();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
        /**
         * Gets or sets whether to include the spline shape in the axis range requested of the axis.
        */
        get isSplineShapePartOfRange() {
            return this.i.abl;
        }
        set isSplineShapePartOfRange(v) {
            this.i.abl = ensureBool(v);
        }
        /**
         * Gets whether the current series shows a spline shape.
        */
        get isSpline() {
            return this.i.fy;
        }
    }
    IgxStackedSplineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxStackedSplineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxStackedSplineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxStackedSplineSeriesComponent, selector: "igx-stacked-spline-series", inputs: { isSplineShapePartOfRange: "isSplineShapePartOfRange" }, providers: [{ provide: IgxHorizontalStackedSeriesBaseComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxStackedSeriesBaseComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxStackedSplineSeriesComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxStackedSplineSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-stacked-spline-series',
                    template: ``,
                    providers: [{ provide: IgxHorizontalStackedSeriesBaseComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxStackedSeriesBaseComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxStackedSplineSeriesComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { isSplineShapePartOfRange: [{
                type: Input
            }] } });
