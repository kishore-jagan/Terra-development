/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StraightNumericAxisBase } from "./StraightNumericAxisBase";
import { IScaler_$type } from "./IScaler";
import { markType } from "igniteui-angular-core";
import { VerticalAxisLabelPanel } from "./VerticalAxisLabelPanel";
import { Rect } from "igniteui-angular-core";
import { ScalerParams } from "./ScalerParams";
import { RangeInfo } from "./RangeInfo";
import { VerticalLogarithmicScaler } from "./VerticalLogarithmicScaler";
import { FastVerticalLinearScaler } from "./FastVerticalLinearScaler";
import { isNaN_ } from "igniteui-angular-core";
import { StraightNumericAxisBaseView } from "./StraightNumericAxisBaseView";
import { AxisDefaults } from "./AxisDefaults";
/**
 * @hidden
 */
export let NumericYAxis = /*@__PURE__*/ (() => {
    class NumericYAxis extends StraightNumericAxisBase {
        constructor() {
            super();
            this.ab = NumericYAxis.$;
            this.k1 = this.kz();
        }
        a4() {
            return new NumericYAxisView(this);
        }
        av() {
            return new VerticalAxisLabelPanel();
        }
        get_cp() {
            return true;
        }
        ej() {
            return this.j8().height;
        }
        ek(a, b) {
            if (this.nk != null) {
                return this.nk.p(a, b);
            }
            return this.nj.p(a, b);
        }
        ho(a, b, c, d) {
            if (this.nk != null) {
                this.nk.v(a, b, c, d);
                return;
            }
            this.nj.v(a, b, c, d);
        }
        hn(a, b, c, d, e) {
            if (this.nk != null) {
                this.nk.u(a, b, c, d, e);
                return;
            }
            this.nj.u(a, b, c, d, e);
        }
        en(a, b) {
            if (this.nk != null) {
                return this.nk.q(a, b);
            }
            return this.nj.q(a, b);
        }
        hp(a, b, c, d) {
            if (this.nk != null) {
                this.nk.j(a, b, c, d);
                return;
            }
            this.nj.j(a, b, c, d);
        }
        n1(a, b) {
            if (this.bi == null || isNaN_(a) || isNaN_(b)) {
                return;
            }
            let c = this.np(a, this);
            let d = this.np(b, this);
            if (isNaN_(c) || isNaN_(d)) {
                return;
            }
            this.bi.v1 = new Rect(0, this.bi.v1.x, d, this.bi.v1.width, c - d);
        }
        kz() {
            let a = super.kz();
            a.b.c = (b) => {
                if (this.az == null || this.az.visibility == 0) {
                    this.aw.bg = b;
                    if (this.az != null && (this.az.location == 7 || this.az.location == 6)) {
                        this.bi.nr();
                    }
                }
            };
            a.k = (b, c, d) => this.hr(c, d, b.z, b.b, false);
            a.l = (b, c, d, e) => this.hs(c, d, e, b.z);
            a.m = (b, c) => {
                let d = b.y;
                let e = new ScalerParams(0, b.aa, b.z, this.ci, d);
                return this.ek(c, e);
            };
            a.q = (b, c) => true;
            a.j = (b) => this.io(b.t, b.n, b.z, b.a, true);
            a.e = (b) => {
                b.n = this.az != null && (this.az.location == 7 || this.az.location == 3) ? b.z.right : b.z.left;
                let c = b.y;
                let d = new ScalerParams(0, b.aa, b.z, this.ci, c);
                if (this.aj != null && this.aj.bi != null) {
                    let e = b.n;
                    let f = b.r;
                    let g = this.ig(e, f, b.aa, b.z, b.y, b.z.left, b.z.right);
                    e = g.p0;
                    f = g.p1;
                    b.n = e;
                    b.r = f;
                }
            };
            a.p = (b, c, d) => {
                let e = Math.round(c);
                return e >= Math.floor(b.z.top) && e <= Math.ceil(b.z.bottom);
            };
            return a;
        }
        k2(a, b, c, d) {
            let e = d;
            let f = super.k2(a, b, c, d);
            let g = new ScalerParams(0, b, a, this.ch, c);
            let h = NaN;
            let i = NaN;
            if (!this.ch && b.top == 0) {
                i = this.lx;
            }
            else if (this.ch && b.bottom == 1) {
                h = this.lx;
            }
            if (isNaN_(h)) {
                h = this.en(e.bottom, g);
            }
            if (isNaN_(i)) {
                i = this.en(e.top, g);
            }
            let j = Math.min(h, i);
            let k = Math.max(h, i);
            this.l1 = j;
            this.l0 = k;
            let l = ((() => {
                let $ret = new RangeInfo();
                $ret.d = j;
                $ret.c = k;
                $ret.b = e.height;
                return $ret;
            })());
            f.k.add(l);
            return f;
        }
        ia(a) {
            super.ia(a);
            let b = this.bi != null ? this.bi.vl : Rect.empty;
            let c = this.ke;
            let d = this.j9();
            let e = this.j8();
            let f = this.k1.c(a, c, b, d, e);
            if (f != null) {
                this.lw = f.f.m;
                this.lz = f.f.l;
            }
        }
        iq(a, b) {
            super.iq(a, b);
            if (b.height != a.height) {
                this.c1();
            }
        }
        get_a2() {
            return 1;
        }
        get a2() {
            return this.get_a2();
        }
        k4() {
            if (this.lj) {
                return new VerticalLogarithmicScaler();
            }
            switch (this.ni) {
                case 0: return new FastVerticalLinearScaler();
                case 1: return new VerticalLogarithmicScaler();
            }
            return null;
        }
        j$d(a, b) {
            return this.en.apply(this, arguments);
        }
        j$c(a, b) {
            return this.ek.apply(this, arguments);
        }
        j$e(a, b, c, d, e) {
            this.hn.apply(this, arguments);
        }
        j$f(a, b, c, d) {
            this.ho.apply(this, arguments);
        }
        j$g(a, b, c, d) {
            this.hp.apply(this, arguments);
        }
        get j$b() {
            return this.ch;
        }
        j$a() {
            return this.ag.apply(this, arguments);
        }
    }
    NumericYAxis.$t = markType(NumericYAxis, 'NumericYAxis', StraightNumericAxisBase.$, [IScaler_$type]);
    return NumericYAxis;
})();
/**
 * @hidden
 */
export let NumericYAxisView = /*@__PURE__*/ (() => {
    class NumericYAxisView extends StraightNumericAxisBaseView {
        constructor(a) {
            super(a);
            this.bo = null;
            this.bo = a;
        }
        al() {
            super.al();
            this.a.jx = AxisDefaults.h;
        }
    }
    NumericYAxisView.$t = markType(NumericYAxisView, 'NumericYAxisView', StraightNumericAxisBaseView.$);
    return NumericYAxisView;
})();
