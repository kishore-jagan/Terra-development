import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { UnknownValuePlotting_$type } from "igniteui-angular-core";
import { IgxPolarLineSeriesBaseComponent } from "./igx-polar-line-series-base-component";
import { IgxPolarBaseComponent } from "./igx-polar-base-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { PolarLineSeries } from "./PolarLineSeries";
import { ensureEnum } from "igniteui-angular-core";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent polar line series.
*/
export let IgxPolarLineSeriesComponent = /*@__PURE__*/ (() => {
    class IgxPolarLineSeriesComponent extends IgxPolarLineSeriesBaseComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new PolarLineSeries();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
        /**
         * Gets whether the current series shows only line shapes.
        */
        get isLineOnly() {
            return this.i.fi;
        }
        /**
         * Determines how unknown values will be plotted on the chart.
         * Null and Double.NaN are two examples of unknown values.
        */
        get unknownValuePlotting() {
            return this.i.acn;
        }
        set unknownValuePlotting(v) {
            this.i.acn = ensureEnum(UnknownValuePlotting_$type, v);
        }
    }
    IgxPolarLineSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPolarLineSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxPolarLineSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxPolarLineSeriesComponent, selector: "igx-polar-line-series", inputs: { unknownValuePlotting: "unknownValuePlotting" }, providers: [{ provide: IgxPolarLineSeriesBaseComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }, { provide: IgxPolarBaseComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxPolarLineSeriesComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxPolarLineSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-polar-line-series',
                    template: ``,
                    providers: [{ provide: IgxPolarLineSeriesBaseComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }, { provide: IgxPolarBaseComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxPolarLineSeriesComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { unknownValuePlotting: [{
                type: Input
            }] } });
