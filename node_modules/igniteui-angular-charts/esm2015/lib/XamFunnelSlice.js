/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { ContentControl } from "igniteui-angular-core";
import { DependencyProperty } from "igniteui-angular-core";
import { Brush } from "igniteui-angular-core";
import { Visibility_$type } from "igniteui-angular-core";
import { Number_$type, enumGetBox, EnumUtil, markType, markDep } from "igniteui-angular-core";
import { Binding } from "igniteui-angular-core";
import { PropertyMetadata } from "igniteui-angular-core";
/**
 * @hidden
 */
export let XamFunnelSlice = /*@__PURE__*/ (() => {
    class XamFunnelSlice extends ContentControl {
        constructor() {
            super();
            this.a7 = null;
            this.ai = null;
            this.ab = XamFunnelSlice.$;
            this.g(XamFunnelSlice.aw, new Binding(1, XamFunnelSlice.$$p[0]));
            this.g(XamFunnelSlice.az, new Binding(1, XamFunnelSlice.$$p[3]));
            this.g(XamFunnelSlice.ax, new Binding(1, XamFunnelSlice.$$p[1]));
            this.g(XamFunnelSlice.ay, new Binding(1, XamFunnelSlice.$$p[2]));
        }
        get aj() {
            return this.c(XamFunnelSlice.a6);
        }
        set aj(a) {
            this.h(XamFunnelSlice.a6, a);
        }
        get a8() {
            return this.c(XamFunnelSlice.aw);
        }
        set a8(a) {
            this.h(XamFunnelSlice.aw, a);
        }
        get bb() {
            return this.c(XamFunnelSlice.az);
        }
        set bb(a) {
            this.h(XamFunnelSlice.az, a);
        }
        get a9() {
            return this.c(XamFunnelSlice.ax);
        }
        set a9(a) {
            this.h(XamFunnelSlice.ax, a);
        }
        get ba() {
            return this.c(XamFunnelSlice.ay);
        }
        set ba(a) {
            this.h(XamFunnelSlice.ay, a);
        }
        get bg() {
            return EnumUtil.getEnumValue(Visibility_$type, this.c(XamFunnelSlice.a3));
        }
        set bg(a) {
            this.h(XamFunnelSlice.a3, enumGetBox(Visibility_$type, a));
        }
        get bh() {
            return EnumUtil.getEnumValue(Visibility_$type, this.c(XamFunnelSlice.a4));
        }
        set bh(a) {
            this.h(XamFunnelSlice.a4, enumGetBox(Visibility_$type, a));
        }
        av(a, b, c) {
            let d;
            switch (a) {
                case "Fill":
                    d = new Binding(1, XamFunnelSlice.$$p[0]);
                    if (c != null) {
                        d.d = this;
                    }
                    this.g(XamFunnelSlice.aw, d);
                    break;
                case "Outline":
                    d = new Binding(1, XamFunnelSlice.$$p[3]);
                    if (c != null) {
                        d.d = this;
                    }
                    this.g(XamFunnelSlice.az, d);
                    break;
            }
        }
    }
    XamFunnelSlice.$t = markType(XamFunnelSlice, 'XamFunnelSlice', ContentControl.$);
    XamFunnelSlice.a6 = DependencyProperty.i("StrokeThickness", Number_$type, XamFunnelSlice.$, new PropertyMetadata(2, 1, (a, b) => {
    }));
    XamFunnelSlice.aw = DependencyProperty.i("ActualFill", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.az = DependencyProperty.i("ActualOutline", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.ax = DependencyProperty.i("ActualHighlightFill", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.ay = DependencyProperty.i("ActualHighlightOutline", Brush.$, XamFunnelSlice.$, new PropertyMetadata(1, null));
    XamFunnelSlice.a3 = DependencyProperty.i("HighlightVisibility", Visibility_$type, XamFunnelSlice.$, new PropertyMetadata(2, enumGetBox(Visibility_$type, 1), (a, b) => {
    }));
    XamFunnelSlice.a4 = DependencyProperty.i("LabelVisibility", Visibility_$type, XamFunnelSlice.$, new PropertyMetadata(2, enumGetBox(Visibility_$type, 0), (a, b) => {
    }));
    XamFunnelSlice.$$p = markDep(DependencyProperty, PropertyMetadata, XamFunnelSlice, 'av', ['Fill:bc:a0', [Brush.$, null], 'HighlightFill:bd:a1', [Brush.$, null], 'HighlightOutline:be:a2', [Brush.$, null], 'Outline:bf:a5', [Brush.$, null]]);
    return XamFunnelSlice;
})();
