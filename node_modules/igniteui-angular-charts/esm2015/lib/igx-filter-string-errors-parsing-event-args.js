import { FilterStringErrorsParsingEventArgs as FilterStringErrorsParsingEventArgs_internal } from "./FilterStringErrorsParsingEventArgs";
/**
 * Represents event arguments for when there are errors parsing the filter string
*/
export class IgxFilterStringErrorsParsingEventArgs {
    constructor() {
        this._implementation = this.createImplementation();
        this._implementation.externalObject = this;
        this.onImplementationCreated();
        if (this._initializeAdapters) {
            this._initializeAdapters();
        }
    }
    createImplementation() {
        return new FilterStringErrorsParsingEventArgs_internal();
    }
    /**
     * @hidden
     */
    get i() {
        return this._implementation;
    }
    onImplementationCreated() {
    }
    _provideImplementation(i) {
        this._implementation = i;
        this._implementation.externalObject = this;
        this.onImplementationCreated();
    }
    get propertyName() {
        return this.i.propertyName;
    }
    set propertyName(v) {
        this.i.propertyName = v;
    }
    /**
     * Gets the errors from parsing the filter string.
    */
    get errors() {
        return this.i.errors;
    }
    set errors(v) {
        this.i.errors = v;
    }
}
