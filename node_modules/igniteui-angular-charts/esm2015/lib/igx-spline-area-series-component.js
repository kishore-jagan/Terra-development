import { Component, forwardRef, ChangeDetectionStrategy } from '@angular/core';
import { IgxSplineSeriesBaseComponent } from "./igx-spline-series-base-component";
import { IgxHorizontalAnchoredCategorySeriesComponent } from "./igx-horizontal-anchored-category-series-component";
import { IgxAnchoredCategorySeriesComponent } from "./igx-anchored-category-series-component";
import { IgxCategorySeriesComponent } from "./igx-category-series-component";
import { IgxMarkerSeriesComponent } from "./igx-marker-series-component";
import { IgxSeriesComponent } from "./igx-series-component";
import { SplineAreaSeries } from "./SplineAreaSeries";
import * as i0 from "@angular/core";
/**
 * Represents a IgxDataChartComponent spline area series.
*
* ```html
* <igx-data-chart
*     [dataSource]="data">
*     <igx-category-x-axis
*         label="label"
*         #xAxis>
*     </igx-category-x-axis>
*     <igx-numeric-y-axis
*         #yAxis>
*     </igx-numeric-y-axis>
*     <igx-spline-area-series
*         [xAxis]="xAxis"
*         [yAxis]="yAxis"
*         valueMemberPath="value">
*     </igx-spline-area-series>
* </igx-data-chart>
* ```
*/
export let IgxSplineAreaSeriesComponent = /*@__PURE__*/ (() => {
    class IgxSplineAreaSeriesComponent extends IgxSplineSeriesBaseComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new SplineAreaSeries();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
        /**
         * Gets whether the current series shows an area shape.
        */
        get isArea() {
            return this.i.es;
        }
        /**
         * Gets whether the current series shows a spline shape.
        */
        get isSpline() {
            return this.i.fy;
        }
    }
    IgxSplineAreaSeriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxSplineAreaSeriesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxSplineAreaSeriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxSplineAreaSeriesComponent, selector: "igx-spline-area-series", providers: [{ provide: IgxSplineSeriesBaseComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxSplineAreaSeriesComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxSplineAreaSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-spline-area-series',
                    template: ``,
                    providers: [{ provide: IgxSplineSeriesBaseComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxHorizontalAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxAnchoredCategorySeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxCategorySeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxMarkerSeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }, { provide: IgxSeriesComponent, useExisting: forwardRef(() => IgxSplineAreaSeriesComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; } });
