/*
THIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT ("AGREEMENT") LOCATED HERE:
https://www.infragistics.com/legal/license/igultimate-la
https://www.infragistics.com/legal/license/igultimate-eula
GOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.
*/
import { StrategyBasedIndicator } from "./StrategyBasedIndicator";
import { FullStochasticOscillatorIndicatorStrategy } from "./FullStochasticOscillatorIndicatorStrategy";
import { typeGetValue, markType } from "igniteui-angular-core";
import { Brush } from "igniteui-angular-core";
/**
 * @hidden
 */
export let FullStochasticOscillatorIndicator = /*@__PURE__*/ (() => {
    class FullStochasticOscillatorIndicator extends StrategyBasedIndicator {
        constructor() {
            super();
            this.trendLineBrush = ((() => {
                let $ret = new Brush();
                $ret.fill = "#565656";
                return $ret;
            })());
            this.trendLineType = 10;
            this.trendLinePeriod = 3;
        }
        bi() {
            return new FullStochasticOscillatorIndicator();
        }
        get_abn() {
            return new FullStochasticOscillatorIndicatorStrategy();
        }
        get abn() {
            return this.get_abn();
        }
        get_ab0() {
            return FullStochasticOscillatorIndicator.$;
        }
        get ab0() {
            return this.get_ab0();
        }
        get ab8() {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.acd));
        }
        set ab8(a) {
            this.h(FullStochasticOscillatorIndicator.acd, a);
        }
        abt() {
            return this.ab8;
        }
        ab2(a) {
            this.ab8 = a;
        }
        get smoothingPeriod() {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.ace));
        }
        set smoothingPeriod(a) {
            this.h(FullStochasticOscillatorIndicator.ace, a);
        }
        abv() {
            return this.smoothingPeriod;
        }
        get aca() {
            return typeGetValue(this.c(FullStochasticOscillatorIndicator.acf));
        }
        set aca(a) {
            this.h(FullStochasticOscillatorIndicator.acf, a);
        }
        abs() {
            return this.aca;
        }
        aa3() {
            return this.aca;
        }
    }
    FullStochasticOscillatorIndicator.$t = markType(FullStochasticOscillatorIndicator, 'FullStochasticOscillatorIndicator', StrategyBasedIndicator.$);
    FullStochasticOscillatorIndicator.acd = StrategyBasedIndicator.ab5(14, FullStochasticOscillatorIndicator.$);
    FullStochasticOscillatorIndicator.ace = StrategyBasedIndicator.ab6(3, FullStochasticOscillatorIndicator.$, "SmoothingPeriod");
    FullStochasticOscillatorIndicator.acf = StrategyBasedIndicator.ab6(3, FullStochasticOscillatorIndicator.$, "TriggerPeriod");
    return FullStochasticOscillatorIndicator;
})();
