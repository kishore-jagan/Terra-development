import { Component, forwardRef, Input, ChangeDetectionStrategy } from '@angular/core';
import { IgxBrushScaleComponent } from "./igx-brush-scale-component";
import { ValueBrushScale } from "./ValueBrushScale";
import { ensureBool } from "igniteui-angular-core";
import * as i0 from "@angular/core";
/**
 * Represents a brush scale that uses value-based brush selection.
*/
export let IgxValueBrushScaleComponent = /*@__PURE__*/ (() => {
    class IgxValueBrushScaleComponent extends IgxBrushScaleComponent {
        constructor() {
            super();
        }
        createImplementation() {
            return new ValueBrushScale();
        }
        /**
                                     * @hidden
                                     */
        get i() {
            return this._implementation;
        }
        /**
         * Gets or sets the minimum value for this scale.
        */
        get minimumValue() {
            return this.i.minimumValue;
        }
        set minimumValue(v) {
            this.i.minimumValue = +v;
        }
        /**
         * Gets or sets the maximum value for this scale.
        */
        get maximumValue() {
            return this.i.maximumValue;
        }
        set maximumValue(v) {
            this.i.maximumValue = +v;
        }
        /**
         * Gets or sets whether the scale is logarithmic.
        */
        get isLogarithmic() {
            return this.i.isLogarithmic;
        }
        set isLogarithmic(v) {
            this.i.isLogarithmic = ensureBool(v);
        }
        /**
         * Gets or sets the logarithm base for this scale.
        */
        get logarithmBase() {
            return this.i.logarithmBase;
        }
        set logarithmBase(v) {
            this.i.logarithmBase = +v;
        }
        /**
         * Checks if the value brush scale is ready for usage in the chart
        */
        get isReady() {
            return this.i.isReady;
        }
    }
    IgxValueBrushScaleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxValueBrushScaleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
    IgxValueBrushScaleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: IgxValueBrushScaleComponent, selector: "igx-value-brush-scale", inputs: { minimumValue: "minimumValue", maximumValue: "maximumValue", isLogarithmic: "isLogarithmic", logarithmBase: "logarithmBase" }, providers: [{ provide: IgxBrushScaleComponent, useExisting: forwardRef(() => IgxValueBrushScaleComponent) }], usesInheritance: true, ngImport: i0, template: ``, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
    return IgxValueBrushScaleComponent;
})();
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: IgxValueBrushScaleComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'igx-value-brush-scale',
                    template: ``,
                    providers: [{ provide: IgxBrushScaleComponent, useExisting: forwardRef(() => IgxValueBrushScaleComponent) }],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }]
        }], ctorParameters: function () { return []; }, propDecorators: { minimumValue: [{
                type: Input
            }], maximumValue: [{
                type: Input
            }], isLogarithmic: [{
                type: Input
            }], logarithmBase: [{
                type: Input
            }] } });
